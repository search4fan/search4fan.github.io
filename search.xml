<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>a example for RL in python</title>
      <link href="/post/python_AI_rl_example.html"/>
      <url>/post/python_AI_rl_example.html</url>
      <content type="html"><![CDATA[<p>description: a small example for reinforcement learning in python</p><h1 id="import-packages-and-set-seed"><a href="#import-packages-and-set-seed" class="headerlink" title="import packages and set seed"></a>import packages and set seed</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>#<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python build Decision Tree on bank note dataset</title>
      <link href="/post/python_AI_DecisionTree_on_BankNoteDataset.html"/>
      <url>/post/python_AI_DecisionTree_on_BankNoteDataset.html</url>
      <content type="html"><![CDATA[<p>description: build Decision Tree from bank note dataset in python</p><h1 id="CART-on-the-Bank-Note-dataset"><a href="#CART-on-the-Bank-Note-dataset" class="headerlink" title="CART on the Bank Note dataset"></a>CART on the Bank Note dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> seed</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange</span><br><span class="line"><span class="keyword">from</span> csv <span class="keyword">import</span> reader</span><br></pre></td></tr></table></figure><h1 id="Load-a-CSV-file"><a href="#Load-a-CSV-file" class="headerlink" title="Load a CSV file"></a>Load a CSV file</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_csv</span><span class="params">(filename)</span>:</span></span><br><span class="line">file = open(filename, <span class="string">"r"</span>)</span><br><span class="line">lines = reader(file)</span><br><span class="line">dataset = list(lines)</span><br><span class="line"><span class="keyword">return</span> dataset</span><br></pre></td></tr></table></figure><h1 id="Convert-string-column-to-float"><a href="#Convert-string-column-to-float" class="headerlink" title="Convert string column to float"></a>Convert string column to float</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_column_to_float</span><span class="params">(dataset, column)</span>:</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> dataset:</span><br><span class="line">row[column] = float(row[column].strip())</span><br></pre></td></tr></table></figure><h1 id="Split-a-dataset-into-k-folds"><a href="#Split-a-dataset-into-k-folds" class="headerlink" title="Split a dataset into k folds"></a>Split a dataset into k folds</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cross_validation_split</span><span class="params">(dataset, n_folds)</span>:</span></span><br><span class="line">dataset_split = list()</span><br><span class="line">dataset_copy = list(dataset)</span><br><span class="line">fold_size = int(len(dataset) / n_folds)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n_folds):</span><br><span class="line">fold = list()</span><br><span class="line"><span class="keyword">while</span> len(fold) &lt; fold_size:</span><br><span class="line">index = randrange(len(dataset_copy))</span><br><span class="line">fold.append(dataset_copy.pop(index))</span><br><span class="line">dataset_split.append(fold)</span><br><span class="line"><span class="keyword">return</span> dataset_split</span><br></pre></td></tr></table></figure><h1 id="Calculate-accuracy-percentage"><a href="#Calculate-accuracy-percentage" class="headerlink" title="Calculate accuracy percentage"></a>Calculate accuracy percentage</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">accuracy_metric</span><span class="params">(actual, predicted)</span>:</span></span><br><span class="line">correct = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(actual)):</span><br><span class="line"><span class="keyword">if</span> actual[i] == predicted[i]:</span><br><span class="line">correct += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> correct / float(len(actual)) * <span class="number">100.0</span></span><br></pre></td></tr></table></figure><h1 id="Evaluate-an-algorithm-using-a-cross-validation-split"><a href="#Evaluate-an-algorithm-using-a-cross-validation-split" class="headerlink" title="Evaluate an algorithm using a cross validation split"></a>Evaluate an algorithm using a cross validation split</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_algorithm</span><span class="params">(dataset, algorithm, n_folds, *args)</span>:</span></span><br><span class="line">folds = cross_validation_split(dataset, n_folds)</span><br><span class="line">scores = list()</span><br><span class="line"><span class="keyword">for</span> fold <span class="keyword">in</span> folds:</span><br><span class="line">train_set = list(folds)</span><br><span class="line">train_set.remove(fold)</span><br><span class="line">train_set = sum(train_set, [])</span><br><span class="line">test_set = list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> fold:</span><br><span class="line">row_copy = list(row)</span><br><span class="line">test_set.append(row_copy)</span><br><span class="line">row_copy[<span class="number">-1</span>] = <span class="keyword">None</span></span><br><span class="line">predicted = algorithm(train_set, test_set, *args)</span><br><span class="line">actual = [row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> fold]</span><br><span class="line">accuracy = accuracy_metric(actual, predicted)</span><br><span class="line">scores.append(accuracy)</span><br><span class="line"><span class="keyword">return</span> scores</span><br></pre></td></tr></table></figure><h1 id="Split-a-dataset-based-on-an-attribute-and-an-attribute-value"><a href="#Split-a-dataset-based-on-an-attribute-and-an-attribute-value" class="headerlink" title="Split a dataset based on an attribute and an attribute value"></a>Split a dataset based on an attribute and an attribute value</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_split</span><span class="params">(index, value, dataset)</span>:</span></span><br><span class="line">left, right = list(), list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> dataset:</span><br><span class="line"><span class="keyword">if</span> row[index] &lt; value:</span><br><span class="line">left.append(row)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">right.append(row)</span><br><span class="line"><span class="keyword">return</span> left, right</span><br></pre></td></tr></table></figure><h1 id="Calculate-the-Gini-index-for-a-split-dataset"><a href="#Calculate-the-Gini-index-for-a-split-dataset" class="headerlink" title="Calculate the Gini index for a split dataset"></a>Calculate the Gini index for a split dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gini_index</span><span class="params">(groups, classes)</span>:</span></span><br><span class="line"><span class="comment"># count all samples at split point</span></span><br><span class="line">n_instances = float(sum([len(group) <span class="keyword">for</span> group <span class="keyword">in</span> groups]))</span><br><span class="line"><span class="comment"># sum weighted Gini index for each group</span></span><br><span class="line">gini = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">size = float(len(group))</span><br><span class="line"><span class="comment"># avoid divide by zero</span></span><br><span class="line"><span class="keyword">if</span> size == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">score = <span class="number">0.0</span></span><br><span class="line"><span class="comment"># score the group based on the score for each class</span></span><br><span class="line"><span class="keyword">for</span> class_val <span class="keyword">in</span> classes:</span><br><span class="line">p = [row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> group].count(class_val) / size</span><br><span class="line">score += p * p</span><br><span class="line"><span class="comment"># weight the group score by its relative size</span></span><br><span class="line">gini += (<span class="number">1.0</span> - score) * (size / n_instances)</span><br><span class="line"><span class="keyword">return</span> gini</span><br></pre></td></tr></table></figure><h1 id="Select-the-best-split-point-for-a-dataset"><a href="#Select-the-best-split-point-for-a-dataset" class="headerlink" title="Select the best split point for a dataset"></a>Select the best split point for a dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_split</span><span class="params">(dataset)</span>:</span></span><br><span class="line">class_values = list(set(row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> dataset))</span><br><span class="line">b_index, b_value, b_score, b_groups = <span class="number">999</span>, <span class="number">999</span>, <span class="number">999</span>, <span class="keyword">None</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(len(dataset[<span class="number">0</span>])<span class="number">-1</span>):</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> dataset:</span><br><span class="line">groups = test_split(index, row[index], dataset)</span><br><span class="line">gini = gini_index(groups, class_values)</span><br><span class="line"><span class="keyword">if</span> gini &lt; b_score:</span><br><span class="line">b_index, b_value, b_score, b_groups = index, row[index], gini, groups</span><br><span class="line"><span class="keyword">return</span> &#123;<span class="string">'index'</span>:b_index, <span class="string">'value'</span>:b_value, <span class="string">'groups'</span>:b_groups&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-a-terminal-node-value"><a href="#Create-a-terminal-node-value" class="headerlink" title="Create a terminal node value"></a>Create a terminal node value</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_terminal</span><span class="params">(group)</span>:</span></span><br><span class="line">outcomes = [row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> group]</span><br><span class="line"><span class="keyword">return</span> max(set(outcomes), key=outcomes.count)</span><br></pre></td></tr></table></figure><h1 id="Create-child-splits-for-a-node-or-make-terminal"><a href="#Create-child-splits-for-a-node-or-make-terminal" class="headerlink" title="Create child splits for a node or make terminal"></a>Create child splits for a node or make terminal</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split</span><span class="params">(node, max_depth, min_size, depth)</span>:</span></span><br><span class="line">left, right = node[<span class="string">'groups'</span>]</span><br><span class="line"><span class="keyword">del</span>(node[<span class="string">'groups'</span>])</span><br><span class="line"><span class="comment"># check for a no split</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> left <span class="keyword">or</span> <span class="keyword">not</span> right:</span><br><span class="line">node[<span class="string">'left'</span>] = node[<span class="string">'right'</span>] = to_terminal(left + right)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="comment"># check for max depth</span></span><br><span class="line"><span class="keyword">if</span> depth &gt;= max_depth:</span><br><span class="line">node[<span class="string">'left'</span>], node[<span class="string">'right'</span>] = to_terminal(left), to_terminal(right)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="comment"># process left child</span></span><br><span class="line"><span class="keyword">if</span> len(left) &lt;= min_size:</span><br><span class="line">node[<span class="string">'left'</span>] = to_terminal(left)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">node[<span class="string">'left'</span>] = get_split(left)</span><br><span class="line">split(node[<span class="string">'left'</span>], max_depth, min_size, depth+<span class="number">1</span>)</span><br><span class="line"><span class="comment"># process right child</span></span><br><span class="line"><span class="keyword">if</span> len(right) &lt;= min_size:</span><br><span class="line">node[<span class="string">'right'</span>] = to_terminal(right)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">node[<span class="string">'right'</span>] = get_split(right)</span><br><span class="line">split(node[<span class="string">'right'</span>], max_depth, min_size, depth+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="Build-a-decision-tree"><a href="#Build-a-decision-tree" class="headerlink" title="Build a decision tree"></a>Build a decision tree</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_tree</span><span class="params">(train, max_depth, min_size)</span>:</span></span><br><span class="line">root = get_split(train)</span><br><span class="line">split(root, max_depth, min_size, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> root</span><br></pre></td></tr></table></figure><h1 id="Make-a-prediction-with-a-decision-tree"><a href="#Make-a-prediction-with-a-decision-tree" class="headerlink" title="Make a prediction with a decision tree"></a>Make a prediction with a decision tree</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(node, row)</span>:</span></span><br><span class="line"><span class="keyword">if</span> row[node[<span class="string">'index'</span>]] &lt; node[<span class="string">'value'</span>]:</span><br><span class="line"><span class="keyword">if</span> isinstance(node[<span class="string">'left'</span>], dict):</span><br><span class="line"><span class="keyword">return</span> predict(node[<span class="string">'left'</span>], row)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> node[<span class="string">'left'</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> isinstance(node[<span class="string">'right'</span>], dict):</span><br><span class="line"><span class="keyword">return</span> predict(node[<span class="string">'right'</span>], row)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> node[<span class="string">'right'</span>]</span><br></pre></td></tr></table></figure><h1 id="Classification-and-Regression-Tree-Algorithm"><a href="#Classification-and-Regression-Tree-Algorithm" class="headerlink" title="Classification and Regression Tree Algorithm"></a>Classification and Regression Tree Algorithm</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decision_tree</span><span class="params">(train, test, max_depth, min_size)</span>:</span></span><br><span class="line">tree = build_tree(train, max_depth, min_size)</span><br><span class="line">predictions = list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> test:</span><br><span class="line">prediction = predict(tree, row)</span><br><span class="line">predictions.append(prediction)</span><br><span class="line"><span class="keyword">return</span>(predictions)</span><br></pre></td></tr></table></figure><h1 id="Test-CART-on-Bank-Note-dataset"><a href="#Test-CART-on-Bank-Note-dataset" class="headerlink" title="Test CART on Bank Note dataset"></a>Test CART on Bank Note dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">seed(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="load-and-prepare-data"><a href="#load-and-prepare-data" class="headerlink" title="load and prepare data"></a>load and prepare data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename = <span class="string">'data_banknote_authentication.csv'</span></span><br><span class="line">dataset = load_csv(filename)</span><br></pre></td></tr></table></figure><h1 id="convert-string-attributes-to-integers"><a href="#convert-string-attributes-to-integers" class="headerlink" title="convert string attributes to integers"></a>convert string attributes to integers</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(dataset[<span class="number">0</span>])):</span><br><span class="line">str_column_to_float(dataset, i)</span><br></pre></td></tr></table></figure><h1 id="evaluate-algorithm"><a href="#evaluate-algorithm" class="headerlink" title="evaluate algorithm"></a>evaluate algorithm</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n_folds = <span class="number">5</span></span><br><span class="line">max_depth = <span class="number">5</span></span><br><span class="line">min_size = <span class="number">10</span></span><br><span class="line">scores = evaluate_algorithm(dataset, decision_tree, n_folds, max_depth, min_size)</span><br><span class="line">print(<span class="string">'Scores: %s'</span> % scores)</span><br><span class="line">print(<span class="string">'Mean Accuracy: %.3f%%'</span> % (sum(scores)/float(len(scores))))</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scores: [<span class="number">100.0</span>, <span class="number">100.0</span>, <span class="number">100.0</span>, <span class="number">100.0</span>, <span class="number">100.0</span>]</span><br><span class="line"></span><br><span class="line">Mean Accuracy: <span class="number">100.000</span>%</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python simple convolutional neural network for MNIST dataset</title>
      <link href="/post/python_AI_simple_CNN_forMNIST.html"/>
      <url>/post/python_AI_simple_CNN_forMNIST.html</url>
      <content type="html"><![CDATA[<p>description: simple CNN example for MNIST dataset</p><h1 id="import-packages"><a href="#import-packages" class="headerlink" title="import packages"></a>import packages</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">from</span> keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dropout</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Flatten</span><br><span class="line"><span class="keyword">from</span> keras.layers.convolutional <span class="keyword">import</span> Conv2D</span><br><span class="line"><span class="keyword">from</span> keras.layers.convolutional <span class="keyword">import</span> MaxPooling2D</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line">K.set_image_dim_ordering(<span class="string">'th'</span>)</span><br></pre></td></tr></table></figure><h1 id="fix-random-seed-for-reproducibility"><a href="#fix-random-seed-for-reproducibility" class="headerlink" title="fix random seed for reproducibility"></a>fix random seed for reproducibility</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">seed = <span class="number">7</span></span><br><span class="line">numpy.random.seed(seed)</span><br></pre></td></tr></table></figure><h1 id="load-data"><a href="#load-data" class="headerlink" title="load data"></a>load data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(X_train, y_train), (X_test, y_test) = mnist.load_data()</span><br><span class="line"><span class="comment"># reshape to be [samples][pixels][width][height]</span></span><br><span class="line">X_train = X_train.reshape(X_train.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>).astype(<span class="string">'float32'</span>)</span><br><span class="line">X_test = X_test.reshape(X_test.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>).astype(<span class="string">'float32'</span>)</span><br></pre></td></tr></table></figure><h1 id="normalize-inputs-from-0-255-to-0-1"><a href="#normalize-inputs-from-0-255-to-0-1" class="headerlink" title="normalize inputs from 0-255 to 0-1"></a>normalize inputs from 0-255 to 0-1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">X_train = X_train / <span class="number">255</span></span><br><span class="line">X_test = X_test / <span class="number">255</span></span><br><span class="line"><span class="comment"># one hot encode outputs</span></span><br><span class="line">y_train = np_utils.to_categorical(y_train)</span><br><span class="line">y_test = np_utils.to_categorical(y_test)</span><br><span class="line">num_classes = y_test.shape[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h1 id="define-baseline-model"><a href="#define-baseline-model" class="headerlink" title="define baseline model"></a>define baseline model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baseline_model</span><span class="params">()</span>:</span></span><br><span class="line"><span class="comment"># create model</span></span><br><span class="line">model = Sequential()</span><br><span class="line">model.add(Conv2D(<span class="number">32</span>, (<span class="number">5</span>, <span class="number">5</span>), input_shape=(<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>), activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">model.add(Dropout(<span class="number">0.2</span>))</span><br><span class="line">model.add(Flatten())</span><br><span class="line">model.add(Dense(<span class="number">128</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(num_classes, activation=<span class="string">'softmax'</span>))</span><br><span class="line"><span class="comment"># Compile model</span></span><br><span class="line">model.compile(loss=<span class="string">'categorical_crossentropy'</span>, optimizer=<span class="string">'adam'</span>, metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"><span class="keyword">return</span> model</span><br></pre></td></tr></table></figure><h1 id="define-model"><a href="#define-model" class="headerlink" title="define model"></a>define model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># build the model</span></span><br><span class="line">model = baseline_model()</span><br><span class="line"><span class="comment"># Fit the model</span></span><br><span class="line">model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=<span class="number">3</span>, batch_size=<span class="number">200</span>, verbose=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># Final evaluation of the model</span></span><br><span class="line">scores = model.evaluate(X_test, y_test, verbose=<span class="number">0</span>)</span><br><span class="line">print(<span class="string">"Baseline Error: %.2f%%"</span> % (<span class="number">100</span>-scores[<span class="number">1</span>]*<span class="number">100</span>))</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Train on <span class="number">60000</span> samples, validate on <span class="number">10000</span> samples</span><br><span class="line"></span><br><span class="line">Epoch <span class="number">1</span>/<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">69</span>s - loss: <span class="number">0.2498</span> - acc: <span class="number">0.9283</span> - val_loss: <span class="number">0.0715</span> - val_acc: <span class="number">0.9803</span></span><br><span class="line"></span><br><span class="line">Epoch <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">70</span>s - loss: <span class="number">0.0714</span> - acc: <span class="number">0.9786</span> - val_loss: <span class="number">0.0503</span> - val_acc: <span class="number">0.9833</span></span><br><span class="line"></span><br><span class="line">Epoch <span class="number">3</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python create simple MLP in Keras</title>
      <link href="/post/python_AI_simple_MLP_in_Keras.html"/>
      <url>/post/python_AI_simple_MLP_in_Keras.html</url>
      <content type="html"><![CDATA[<p>description: create simple MLP in Keras</p><h1 id="import-packages"><a href="#import-packages" class="headerlink" title="import packages"></a>import packages</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">import</span> numpy</span><br></pre></td></tr></table></figure><h1 id="fix-random-seed-for-reproducibility"><a href="#fix-random-seed-for-reproducibility" class="headerlink" title="fix random seed for reproducibility"></a>fix random seed for reproducibility</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.random.seed(<span class="number">7</span>)</span><br></pre></td></tr></table></figure><h1 id="load-pima-indians-dataset"><a href="#load-pima-indians-dataset" class="headerlink" title="load pima indians dataset"></a>load pima indians dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset = numpy.loadtxt(<span class="string">"pima-indians-diabetes.csv"</span>, delimiter=<span class="string">","</span>)</span><br></pre></td></tr></table></figure><h1 id="split-into-input-X-and-output-Y-variables"><a href="#split-into-input-X-and-output-Y-variables" class="headerlink" title="split into input (X) and output (Y) variables"></a>split into input (X) and output (Y) variables</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X = dataset[:,<span class="number">0</span>:<span class="number">8</span>]</span><br><span class="line">Y = dataset[:,<span class="number">8</span>]</span><br></pre></td></tr></table></figure><h1 id="create-model"><a href="#create-model" class="headerlink" title="create model"></a>create model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">model = Sequential()</span><br><span class="line">model.add(Dense(<span class="number">12</span>, input_dim=<span class="number">8</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(<span class="number">8</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(<span class="number">1</span>, activation=<span class="string">'sigmoid'</span>))</span><br></pre></td></tr></table></figure><h1 id="Compile-model"><a href="#Compile-model" class="headerlink" title="Compile model"></a>Compile model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.compile(loss=<span class="string">'binary_crossentropy'</span>, optimizer=<span class="string">'adam'</span>, metrics=[<span class="string">'accuracy'</span>])</span><br></pre></td></tr></table></figure><h1 id="Fit-the-model"><a href="#Fit-the-model" class="headerlink" title="Fit the model"></a>Fit the model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fit(X, Y, epochs=<span class="number">150</span>, batch_size=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="evaluate-the-model"><a href="#evaluate-the-model" class="headerlink" title="evaluate the model"></a>evaluate the model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scores = model.evaluate(X, Y)</span><br><span class="line">print(<span class="string">"\n%s: %.2f%%"</span> % (model.metrics_names[<span class="number">1</span>], scores[<span class="number">1</span>]*<span class="number">100</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python ANN forward Propagate</title>
      <link href="/post/python_AI_forward_propagate.html"/>
      <url>/post/python_AI_forward_propagate.html</url>
      <content type="html"><![CDATA[<h1 id="Calculate-neuron-activation-for-an-input"><a href="#Calculate-neuron-activation-for-an-input" class="headerlink" title="Calculate neuron activation for an input"></a>Calculate neuron activation for an input</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">activate</span><span class="params">(weights, inputs)</span>:</span></span><br><span class="line">activation = weights[<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(weights)<span class="number">-1</span>):</span><br><span class="line">activation += weights[i] * inputs[i]</span><br><span class="line"><span class="keyword">return</span> activation</span><br></pre></td></tr></table></figure><h1 id="Transfer-neuron-activation"><a href="#Transfer-neuron-activation" class="headerlink" title="Transfer neuron activation"></a>Transfer neuron activation</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> exp</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transfer</span><span class="params">(activation)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1.0</span> + exp(-activation))</span><br></pre></td></tr></table></figure><h1 id="Forward-propagate-input-to-a-network-output"><a href="#Forward-propagate-input-to-a-network-output" class="headerlink" title="Forward propagate input to a network output"></a>Forward propagate input to a network output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward_propagate</span><span class="params">(network, row)</span>:</span></span><br><span class="line">inputs = row</span><br><span class="line"><span class="keyword">for</span> layer <span class="keyword">in</span> network:</span><br><span class="line">new_inputs = []</span><br><span class="line"><span class="keyword">for</span> neuron <span class="keyword">in</span> layer:</span><br><span class="line">activation = activate(neuron[<span class="string">'weights'</span>], inputs)</span><br><span class="line">neuron[<span class="string">'output'</span>] = transfer(activation)</span><br><span class="line">new_inputs.append(neuron[<span class="string">'output'</span>])</span><br><span class="line">inputs = new_inputs</span><br><span class="line"><span class="keyword">return</span> inputs</span><br></pre></td></tr></table></figure><h1 id="test-forward-propagation"><a href="#test-forward-propagation" class="headerlink" title="test forward propagation"></a>test forward propagation</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">network = [[&#123;<span class="string">'weights'</span>: [<span class="number">0.13436424411240122</span>, <span class="number">0.8474337369372327</span>, <span class="number">0.763774618976614</span>]&#125;],</span><br><span class="line">[&#123;<span class="string">'weights'</span>: [<span class="number">0.2550690257394217</span>, <span class="number">0.49543508709194095</span>]&#125;, &#123;<span class="string">'weights'</span>: [<span class="number">0.4494910647887381</span>, <span class="number">0.651592972722763</span>]&#125;]]</span><br><span class="line">row = [<span class="number">1</span>, <span class="number">0</span>, <span class="keyword">None</span>]</span><br><span class="line">output = forward_propagate(network, row)</span><br><span class="line">print(output)</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0.6629970129852887</span>, <span class="number">0.7253160725279748</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python build small network example for ANN</title>
      <link href="/post/python_AI_small_network_example.html"/>
      <url>/post/python_AI_small_network_example.html</url>
      <content type="html"><![CDATA[<p>description: build small network example in python </p><h1 id="initial-a-network"><a href="#initial-a-network" class="headerlink" title="initial a network"></a>initial a network</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize_network</span><span class="params">(n_inputs, n_hidden, n_outputs)</span>:</span></span><br><span class="line">network = list()</span><br><span class="line">hidden_layer = [&#123;<span class="string">'weights'</span>:[random() <span class="keyword">for</span> i <span class="keyword">in</span> range(n_inputs + <span class="number">1</span>)]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> range(n_hidden)]</span><br><span class="line">network.append(hidden_layer)</span><br><span class="line">output_layer = [&#123;<span class="string">'weights'</span>:[random() <span class="keyword">for</span> i <span class="keyword">in</span> range(n_hidden + <span class="number">1</span>)]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> range(n_outputs)]</span><br><span class="line">network.append(output_layer)</span><br><span class="line"><span class="keyword">return</span> network</span><br></pre></td></tr></table></figure><h1 id="test-network"><a href="#test-network" class="headerlink" title="test network"></a>test network</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">seed(<span class="number">1</span>)</span><br><span class="line">network = initialize_network(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> layer <span class="keyword">in</span> network:</span><br><span class="line">print(layer)</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="string">'weights'</span>: [<span class="number">0.13436424411240122</span>, <span class="number">0.8474337369372327</span>, <span class="number">0.763774618976614</span>]&#125;]</span><br><span class="line">[&#123;<span class="string">'weights'</span>: [<span class="number">0.2550690257394217</span>, <span class="number">0.49543508709194095</span>]&#125;, &#123;<span class="string">'weights'</span>: [<span class="number">0.4494910647887381</span>, <span class="number">0.651592972722763</span>]&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo deploy to github with ssh</title>
      <link href="/post/hexo_deploy_ssh.html"/>
      <url>/post/hexo_deploy_ssh.html</url>
      <content type="html"><![CDATA[<p>description: hexo deploy github pages through ssh</p><h1 id="configuration-for-deploying-to-github-with-ssh"><a href="#configuration-for-deploying-to-github-with-ssh" class="headerlink" title="configuration for deploying to github with ssh"></a>configuration for deploying to github with ssh</h1><p>change the configuration in <code>_config.yml</code> under the hexo root folder<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:kelfan/kelfan.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python extract columns from dataframe</title>
      <link href="/post/python_extract_columns.html"/>
      <url>/post/python_extract_columns.html</url>
      <content type="html"><![CDATA[<p>description: pandas select columns by name</p><h1 id="python-select-columns-from-dataframe-by-name"><a href="#python-select-columns-from-dataframe-by-name" class="headerlink" title="python select columns from dataframe by name"></a>python select columns from dataframe by name</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas </span><br><span class="line">d = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]], columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line"><span class="comment"># d</span></span><br><span class="line"><span class="comment">#    a  b  c  d</span></span><br><span class="line"><span class="comment"># 0  1  2  3  4</span></span><br><span class="line">d2 = d[[<span class="string">'b'</span>,<span class="string">'c'</span>]]</span><br><span class="line"><span class="comment"># d2</span></span><br><span class="line"><span class="comment">#    b  c</span></span><br><span class="line"><span class="comment"># 0  2  3</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TortoiseGit set ssh for github</title>
      <link href="/post/git_set_ssh_for_tortoisegit.html"/>
      <url>/post/git_set_ssh_for_tortoisegit.html</url>
      <content type="html"><![CDATA[<p>description: tortoisegit ssh key windows</p><h1 id="tortoisegit-ssh-key-setup"><a href="#tortoisegit-ssh-key-setup" class="headerlink" title="tortoisegit ssh key setup"></a>tortoisegit ssh key setup</h1><ol><li>open <code>Puttygen</code><ol><li>click “Generate”</li><li>need move mouse to Generate key </li><li>save public key and private key</li></ol></li><li>go to repository and right click -&gt; tortoiseGit -&gt; settings<ol><li>remote -&gt; origin -&gt; puttyKey -&gt; add the .ppk file</li></ol></li></ol><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git Switch between ssh and HTTPS</title>
      <link href="/post/git_switch_https_ssh.html"/>
      <url>/post/git_switch_https_ssh.html</url>
      <content type="html"><![CDATA[<p>description: git change remote from https to ssh</p><h1 id="change-from-HTTPS-into-ssh"><a href="#change-from-HTTPS-into-ssh" class="headerlink" title="change from HTTPS into ssh"></a>change from HTTPS into ssh</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url origin git@github.com:kelfan/kelfan.github.io.git</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python print format string example</title>
      <link href="/post/python_format_string_output.html"/>
      <url>/post/python_format_string_output.html</url>
      <content type="html"><![CDATA[<p>description: python print format string example</p><h1 id="python-Using-and-format-for-formating-print-output"><a href="#python-Using-and-format-for-formating-print-output" class="headerlink" title="python Using % and .format() for formating print output"></a>python Using % and .format() for formating print output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">    interaction = <span class="string">'%s'</span> % (<span class="string">'#'</span> *i)</span><br><span class="line">    print(<span class="string">'\r&#123;&#125;'</span>.format(interaction), end=<span class="string">''</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># #############...</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python add one day to a date</title>
      <link href="/post/python_datetime_add_day.html"/>
      <url>/post/python_datetime_add_day.html</url>
      <content type="html"><![CDATA[<p>description: python add one day to a date </p><h1 id="python-datetime-date-add-one-day"><a href="#python-datetime-date-add-one-day" class="headerlink" title="python datetime date add one day"></a>python datetime date add one day</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">d = datetime.datetime.strptime(<span class="string">'2018-02-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="comment"># d</span></span><br><span class="line"><span class="comment"># datetime.datetime(2018, 2, 1, 0, 0)</span></span><br><span class="line">d + datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># datetime.datetime(2018, 2, 2, 0, 0)</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> date </tag>
            
            <tag> datetime </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python parse string into datetime</title>
      <link href="/post/python_string_to_datetime.html"/>
      <url>/post/python_string_to_datetime.html</url>
      <content type="html"><![CDATA[<p>description: python parse string into datetime</p><h1 id="parse-string-into-datetime"><a href="#parse-string-into-datetime" class="headerlink" title="parse string into datetime"></a>parse string into datetime</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime </span><br><span class="line">datetime.datetime.strptime(<span class="string">'2018-01-01'</span>, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line"><span class="comment"># datetime.datetime(2018, 1, 1, 0, 0)</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python change dataframe column into set and loop the set</title>
      <link href="/post/python_dataframe_loop_set.html"/>
      <url>/post/python_dataframe_loop_set.html</url>
      <content type="html"><![CDATA[<p>description: change dataframe column into set and iterate</p><h1 id="change-dataframe-column-into-a-set"><a href="#change-dataframe-column-into-a-set" class="headerlink" title="change dataframe column into a set"></a>change dataframe column into a set</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">a = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>]], columns=[<span class="string">'a'</span>,<span class="string">'b'</span>])</span><br><span class="line"><span class="comment"># a</span></span><br><span class="line"><span class="comment">#    a  b</span></span><br><span class="line"><span class="comment"># 0  1  2</span></span><br><span class="line"><span class="comment"># 1  2  3</span></span><br><span class="line">b = a[<span class="string">'a'</span>].unique()</span><br><span class="line"><span class="comment"># b</span></span><br><span class="line"><span class="comment"># array([1, 2, 4], dtype=int64)</span></span><br><span class="line">b = set(b)</span><br><span class="line"><span class="comment"># b</span></span><br><span class="line"><span class="comment"># &#123;1, 2, 4&#125;</span></span><br></pre></td></tr></table></figure><h1 id="iterate-dataframe-column-set"><a href="#iterate-dataframe-column-set" class="headerlink" title="iterate dataframe column set"></a>iterate dataframe column set</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> b:</span><br><span class="line">    print(item)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><h1 id="combine-into-a-single-code"><a href="#combine-into-a-single-code" class="headerlink" title="combine into a single code"></a>combine into a single code</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> a[<span class="string">'a'</span>].unique():</span><br><span class="line">    print(item)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python iterate or loop each row of a dataframe</title>
      <link href="/post/python_dataframe_loop_rows.html"/>
      <url>/post/python_dataframe_loop_rows.html</url>
      <content type="html"><![CDATA[<p>description: python iterate a dataframe </p><h1 id="loop-each-row-of-a-dataframe"><a href="#loop-each-row-of-a-dataframe" class="headerlink" title="loop each row of a dataframe"></a>loop each row of a dataframe</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">data = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> data.values:</span><br><span class="line">    print(row)</span><br><span class="line"><span class="comment"># output </span></span><br><span class="line"><span class="comment"># [1 2 3]</span></span><br><span class="line"><span class="comment"># [4 5 6]</span></span><br><span class="line"><span class="comment"># [7 8 9]</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python resign headers to a dataframe</title>
      <link href="/post/python_dataframe_resign_headers.html"/>
      <url>/post/python_dataframe_resign_headers.html</url>
      <content type="html"><![CDATA[<p>description: python pandas rename or change column names</p><h1 id="python-rename-column-headers"><a href="#python-rename-column-headers" class="headerlink" title="python rename column headers"></a>python rename column headers</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas </span><br><span class="line">d1 = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="comment"># d1</span></span><br><span class="line"><span class="comment">#    0  1  2</span></span><br><span class="line"><span class="comment"># 0  1  2  3</span></span><br><span class="line"></span><br><span class="line">d2 = pandas.DataFrame(d1.values, columns = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>])</span><br><span class="line"><span class="comment"># d2</span></span><br><span class="line"><span class="comment">#    a  b  c</span></span><br><span class="line"><span class="comment"># 0  1  2  3</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>get list of modules name in Excel vba</title>
      <link href="/post/vba_get_list_of_modules_name.html"/>
      <url>/post/vba_get_list_of_modules_name.html</url>
      <content type="html"><![CDATA[<p>description: vba to get list of modules name </p><h1 id="code-of-vba-to-get-list-of-module-names"><a href="#code-of-vba-to-get-list-of-module-names" class="headerlink" title="code of vba to get list of module names"></a>code of vba to get list of module names</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> getAllModuleNames()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> modName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Dim</span> wb <span class="keyword">As</span> Workbook</span><br><span class="line">    <span class="keyword">Dim</span> l <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> wb = thisWorkbook</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> l = <span class="number">1</span> <span class="keyword">To</span> wb.VBProject.VBComponents.count</span><br><span class="line">        <span class="keyword">With</span> wb.VBProject.VBComponents(l)</span><br><span class="line">            modName = modName &amp; vbCr &amp; .name</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">'MsgBox "Module Names:" &amp; vbCr &amp; modName</span></span><br><span class="line">    Cells(<span class="number">40</span>, <span class="number">1</span>).value = modName</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> wb = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> vba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vba </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Microsoft Sql server installation with 1638 error</title>
      <link href="/post/mssql_install_error_1638.html"/>
      <url>/post/mssql_install_error_1638.html</url>
      <content type="html"><![CDATA[<p>description: unable to install Sql Server with exit code 1638 </p><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><ul><li>exit code 1638 means a newer version of Microsoft Visual C++ has been installed </li><li>uninstall 2015, 2017 and others higher than 2015</li><li>restart the process </li></ul><h1 id="problem-description"><a href="#problem-description" class="headerlink" title="problem description"></a>problem description</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TITLE: Microsoft SQL Server 2017 Setup</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">The following error has occurred:</span><br><span class="line"></span><br><span class="line">VS Shell installation has failed with exit code 1638.</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mssql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic frequent Sql commends in sql server</title>
      <link href="/post/ssms_basic_frequent_commends.html"/>
      <url>/post/ssms_basic_frequent_commends.html</url>
      <content type="html"><![CDATA[<p>description: sql comments for basic query </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- use </span></span><br><span class="line"><span class="keyword">use</span> testdb</span><br><span class="line"><span class="keyword">go</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people</span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> * <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- insert into people values (1, 'lily', 'f', 12)</span></span><br><span class="line"><span class="comment">-- insert into people values (2, 'chao', 'm', 16)</span></span><br><span class="line"><span class="comment">-- insert into people values (3, 'alin', 'f',null)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, age <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>,<span class="keyword">id</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by number</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, age <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> <span class="comment">--2 means age </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- isnull()</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">ISNULL</span> (age, <span class="string">''</span>) <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">--alias</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">ISNULL</span> (age, <span class="string">''</span>) <span class="keyword">as</span> a <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- concat strings </span></span><br><span class="line"><span class="keyword">select</span> <span class="string">'people '</span> + <span class="keyword">TRIM</span> (<span class="keyword">name</span>) + <span class="string">' is age of '</span> + <span class="keyword">convert</span>(<span class="built_in">varchar</span>, <span class="keyword">isnull</span>(age, <span class="string">''</span>)) <span class="keyword">as</span> [description] </span><br><span class="line"><span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- round()</span></span><br><span class="line"><span class="keyword">select</span> age, age * <span class="number">10</span> <span class="keyword">as</span> <span class="string">'age10'</span>,</span><br><span class="line"><span class="keyword">round</span>(<span class="keyword">convert</span>(<span class="built_in">float</span>,age)/<span class="number">8</span>, <span class="number">1</span>) <span class="keyword">as</span> <span class="string">'ageD8'</span>,</span><br><span class="line"><span class="keyword">round</span>(age/<span class="number">3</span>, <span class="number">0</span>) <span class="keyword">as</span> <span class="string">'ageD3'</span></span><br><span class="line"><span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- where </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age &lt;&gt; <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- and or </span></span><br><span class="line"><span class="comment">-- select date from time where data between '2005-10-10' and '1/1/2006'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span> <span class="keyword">or</span> <span class="keyword">id</span> = <span class="number">3</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'chao'</span> <span class="keyword">and</span> age =<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- wildcard % like </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%h%'</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- _ single character </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'_hao%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- in </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people</span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">14</span>,<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- not in </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- is null</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">is</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- is not null </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssms </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>display line number in sql server management studio</title>
      <link href="/post/ssms_display_line_number.html"/>
      <url>/post/ssms_display_line_number.html</url>
      <content type="html"><![CDATA[<p>description: display line number in mssql editor</p><ul><li>tools -&gt; options </li><li>Text Editor -&gt; Transact-SQL -&gt; line numbers </li></ul><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>java change array into a list</title>
      <link href="/post/java_array_to_list.html"/>
      <url>/post/java_array_to_list.html</url>
      <content type="html"><![CDATA[<p>description: convert array into a list in java </p><h1 id="convert-array-into-list"><a href="#convert-array-into-list" class="headerlink" title="convert array into list"></a>convert array into list</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList(Arrays.asList(yourArray));</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssms save changes not permitted</title>
      <link href="/post/ssms_not_permit_change.html"/>
      <url>/post/ssms_not_permit_change.html</url>
      <content type="html"><![CDATA[<p>description: Sql Server ‘Saving changes is not permitted’</p><h1 id="problem-description"><a href="#problem-description" class="headerlink" title="problem description"></a>problem description</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Saving changes is not permitted. The changes that you have made require the following tables to be dropped and re-created. You have either made changes to a table that can&apos;t be re-created or enabled the option Prevent saving changes that require the table to be re-created.</span><br></pre></td></tr></table></figure><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><ul><li>Tools -&gt; Options </li><li>Designers -&gt; Table and Database Designers -&gt; Prevent saving changes that require table re-creation -&gt; unclick</li></ul><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker frequent used commends</title>
      <link href="/post/docker_commends.html"/>
      <url>/post/docker_commends.html</url>
      <content type="html"><![CDATA[<p>description: docker commends - not finished yet</p><h1 id="check-all-running-proceses-containers"><a href="#check-all-running-proceses-containers" class="headerlink" title="check all running proceses/containers"></a>check all running proceses/containers</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h1 id="delete-a-container"><a href="#delete-a-container" class="headerlink" title="delete a container"></a>delete a container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm container_name</span><br></pre></td></tr></table></figure><h1 id="see-all-images"><a href="#see-all-images" class="headerlink" title="see all images"></a>see all images</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h1 id="remove-an-image"><a href="#remove-an-image" class="headerlink" title="remove an image"></a>remove an image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi image_name</span><br></pre></td></tr></table></figure><h1 id="Stop-all-running-containers"><a href="#Stop-all-running-containers" class="headerlink" title="Stop all running containers"></a>Stop all running containers</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -a -q)</span><br></pre></td></tr></table></figure><h1 id="commit-container-as-a-new-image"><a href="#commit-container-as-a-new-image" class="headerlink" title="commit container as a new image"></a>commit container as a new image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit new_image_name</span><br><span class="line">docker commit old_image new_image</span><br></pre></td></tr></table></figure><h1 id="mount-host-directory-in-docker-container"><a href="#mount-host-directory-in-docker-container" class="headerlink" title="mount host directory in docker container"></a>mount host directory in docker container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount code folder under current folder into the html folder within the Nginx image</span></span><br><span class="line">docker run -v <span class="variable">$PWD</span>/code:/var/www/html Nginx</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Error response from daemon driver failed programming external connectivity on endpoint sql1</title>
      <link href="/post/docker_error_response_from_daemon.html"/>
      <url>/post/docker_error_response_from_daemon.html</url>
      <content type="html"><![CDATA[<p>description:</p><h1 id="error-description-1"><a href="#error-description-1" class="headerlink" title="error description 1"></a>error description 1</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; docker start sql1</span><br><span class="line">Error response from daemon: driver failed programming external connectivity on endpoint sql1 (5738a464113f88069be0239c3fd73eaa58fc4d5a7fc63d83d912e3d9424f6b55): Error starting userland proxy: mkdir /port/tcp:0.0.0.0:1433:tcp:172.17.0.2:1433: input/output error</span><br><span class="line">Error: failed to start containers: sql1</span><br></pre></td></tr></table></figure><h1 id="error-description-2"><a href="#error-description-2" class="headerlink" title="error description 2"></a>error description 2</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; docker run -p 1443:1443 -d sql2</span><br><span class="line">90d3d1f460f1dfd11a684a37a9278db78f345c1a85cc55d68e1f3c313721c2e0</span><br><span class="line">C:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: driver failed programming external connectivity on endpoint sad_ritchie (b5a71d797addfd55b7683151e8a6b9fbacbd35792dbe1f020170190b500778b6): Error starting userland proxy: mkdir /port/tcp:0.0.0.0:1443:tcp:172.17.0.2:1443: input/output error.</span><br></pre></td></tr></table></figure><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><p>restart system and docker then restart service </p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker change port of an exist image container</title>
      <link href="/post/docker_resign_port_to_exist_image.html"/>
      <url>/post/docker_resign_port_to_exist_image.html</url>
      <content type="html"><![CDATA[<p>description: Docker Change Port Mapping for an Existing Container</p><h1 id="Stop-the-running-image"><a href="#Stop-the-running-image" class="headerlink" title="Stop the running image"></a>Stop the running image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker Stop image1</span><br></pre></td></tr></table></figure><h1 id="save-the-previous-image"><a href="#save-the-previous-image" class="headerlink" title="save the previous image"></a>save the previous image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit image1 image2</span><br></pre></td></tr></table></figure><p>image2 is the name of new image</p><h1 id="start-the-new-image-with-a-new-mapped-port"><a href="#start-the-new-image-with-a-new-mapped-port" class="headerlink" title="start the new image with a new mapped port"></a>start the new image with a new mapped port</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:8080 -td image2</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>connect sql server from Microsoft Sql Server Management Studio</title>
      <link href="/post/docker_sql_server_connect_from_ssms.html"/>
      <url>/post/docker_sql_server_connect_from_ssms.html</url>
      <content type="html"><![CDATA[<p>description: codes for connecting sql server from Microsoft sql server management studio </p><h1 id="start-sql-server"><a href="#start-sql-server" class="headerlink" title="start sql server"></a>start sql server</h1><p><code>Asdfgh123</code> is default password<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Asdfgh123"</span> `</span><br><span class="line">   -p 1433:1433 --name sql1 `</span><br><span class="line">   -d microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure></p><h1 id="connect-from-external-tools"><a href="#connect-from-external-tools" class="headerlink" title="connect from external tools"></a>connect from external tools</h1><p>under Windows, open Powershell to test service can be accessed from Windows<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlcmd -S 10.3.2.4,1433 -U SA -P <span class="string">"Asdfgh123"</span></span><br></pre></td></tr></table></figure></p><h1 id="connect-from-sql-server-management-studio"><a href="#connect-from-sql-server-management-studio" class="headerlink" title="connect from sql server management studio"></a>connect from sql server management studio</h1><p>server name is the ip address for docker computer. can use commend <code>ipconfig</code> to get the IPv4 Address<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server type: database engine </span><br><span class="line">server name: 192.168.11.11 </span><br><span class="line">authentication: sql server authentication </span><br><span class="line">    login: SA</span><br><span class="line">    password: Asdfgh123</span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql server </tag>
            
            <tag> ssms </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker</title>
      <link href="/post/docker_unauthorized_username_password.html"/>
      <url>/post/docker_unauthorized_username_password.html</url>
      <content type="html"><![CDATA[<p>description: solve problem of unauthorized username or password in terminal</p><h1 id="problem-of-unauthorized-incorrect-username-or-password"><a href="#problem-of-unauthorized-incorrect-username-or-password" class="headerlink" title="problem of unauthorized incorrect username or password"></a>problem of unauthorized incorrect username or password</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;docker pull alpine</span><br><span class="line"><span class="comment"># Using default tag: latest</span></span><br><span class="line"><span class="comment"># Error response from daemon: Get https://registry-1.docker.io/v2/library/alpine/manifests/latest: unauthorized: incorrect username or password</span></span><br></pre></td></tr></table></figure><h1 id="solve-solution"><a href="#solve-solution" class="headerlink" title="solve solution"></a>solve solution</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;docker login</span><br><span class="line"><span class="comment"># Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.</span></span><br><span class="line"><span class="comment"># Username (findhill@gmail.com): vifonk</span></span><br><span class="line"><span class="comment"># Password:</span></span><br><span class="line"><span class="comment"># Login Succeeded</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>run sql server through docker in Windows</title>
      <link href="/post/docker_run_sql_server.html"/>
      <url>/post/docker_run_sql_server.html</url>
      <content type="html"><![CDATA[<p>description: run sql server through docker </p><h1 id="start"><a href="#start" class="headerlink" title="start"></a>start</h1><ul><li>open and start docker service</li><li>open Powershell</li></ul><h1 id="download-sql-server-image"><a href="#download-sql-server-image" class="headerlink" title="download sql server image"></a>download sql server image</h1><p>put following commend in powerhell<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure></p><h1 id="start-sql-server"><a href="#start-sql-server" class="headerlink" title="start sql server"></a>start sql server</h1><p><code>Asdfgh123</code> is default password<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Asdfgh123"</span> `</span><br><span class="line">   -p 1433:1433 --name sql1 `</span><br><span class="line">   -d microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure></p><p>if get following error:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: Conflict. The container name <span class="string">"/sql1"</span> is already <span class="keyword">in</span> use by container <span class="string">"1da5029c71ab937a25acdb4fadf44f4065c2fea4f6a4f157c1a07516558757bb"</span>. You have to remove (or rename) that container to be able to reuse that name.</span><br><span class="line">See <span class="string">'C:\Program Files\Docker\Docker\Resources\bin\docker.exe run --help'</span>.</span><br></pre></td></tr></table></figure></p><p>restart the server<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start sql1</span><br></pre></td></tr></table></figure></p><h1 id="connect-to-server"><a href="#connect-to-server" class="headerlink" title="connect to server"></a>connect to server</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it sql1 <span class="string">"bash"</span></span><br></pre></td></tr></table></figure><h1 id="start-sqlcmd-tool"><a href="#start-sqlcmd-tool" class="headerlink" title="start sqlcmd tool"></a>start sqlcmd tool</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P <span class="string">'Asdfgh123'</span></span><br></pre></td></tr></table></figure><h1 id="test-create-database"><a href="#test-create-database" class="headerlink" title="test create database"></a>test create database</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> TestDB</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Name</span> <span class="keyword">from</span> sys.Databases</span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h1 id="test-acquire-database"><a href="#test-acquire-database" class="headerlink" title="test acquire database"></a>test acquire database</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> TestDB</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">new</span> <span class="keyword">table</span> named Inventory:</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Inventory (<span class="keyword">id</span> <span class="built_in">INT</span>, <span class="keyword">name</span> <span class="keyword">NVARCHAR</span>(<span class="number">50</span>), quantity <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Inventory <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'banana'</span>, <span class="number">150</span>); <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Inventory <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'orange'</span>, <span class="number">154</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Inventory <span class="keyword">WHERE</span> quantity &gt; <span class="number">152</span>;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h1 id="connect-from-external-tools"><a href="#connect-from-external-tools" class="headerlink" title="connect from external tools"></a>connect from external tools</h1><p>outside the container<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlcmd -S 10.3.2.4,1433 -U SA -P <span class="string">"Asdfgh123"</span></span><br></pre></td></tr></table></figure></p><h1 id="Stop-and-remove-container"><a href="#Stop-and-remove-container" class="headerlink" title="Stop and remove container"></a>Stop and remove container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop sql1</span><br><span class="line">docker rm sql1</span><br></pre></td></tr></table></figure><h1 id="run-sql-server-with-external-folder"><a href="#run-sql-server-with-external-folder" class="headerlink" title="run sql server with external folder"></a>run sql server with external folder</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Asdfgh123"</span> `</span><br><span class="line">   -v <span class="variable">$PWD</span>/:/data `</span><br><span class="line">   -p 1433:1433 --name sql2 `</span><br><span class="line">   -d microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> sql server </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Microsoft Visual Studio Code insert date time variables into snippet template</title>
      <link href="/post/vs_code_datetime_snippet.html"/>
      <url>/post/vs_code_datetime_snippet.html</url>
      <content type="html"><![CDATA[<p>description: make a snippet with current datetime </p><h1 id="open-snippet-file-to-edit"><a href="#open-snippet-file-to-edit" class="headerlink" title="open snippet file to edit"></a>open snippet file to edit</h1><p>File -&gt; preference –&gt; user snippets</p><h1 id="edit-snippet-like-following"><a href="#edit-snippet-like-following" class="headerlink" title="edit snippet like following"></a>edit snippet like following</h1><p><code>${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}</code><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"post"</span>: &#123;</span><br><span class="line"><span class="attr">"prefix"</span>: <span class="string">".post"</span>,</span><br><span class="line"><span class="attr">"body"</span>: [</span><br><span class="line"><span class="string">"---\r"</span>,</span><br><span class="line"><span class="string">"title: $&#123;1&#125;\r"</span>,</span><br><span class="line"><span class="string">"date: $&#123;CURRENT_DATE&#125;/$&#123;CURRENT_MONTH&#125;/$&#123;CURRENT_YEAR&#125; $&#123;CURRENT_HOUR&#125;:$&#123;CURRENT_MINUTE&#125;\r"</span>,</span><br><span class="line"><span class="string">"tags: \r"</span>,</span><br><span class="line"><span class="string">"keywords:\r"</span>,</span><br><span class="line"><span class="string">"categories: \r"</span>,</span><br><span class="line"><span class="string">"---\r"</span>,</span><br><span class="line"><span class="string">"description:\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"---------------------------------------------\r"</span>,</span><br><span class="line"><span class="string">"more on [search4fan.github.io](https://search4fan.github.io/)\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">""</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">"description"</span>: <span class="string">"post template"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="other-variables"><a href="#other-variables" class="headerlink" title="other variables"></a>other variables</h1><p><code>TM_SELECTED_TEXT</code> The currently selected text or the empty string<br><code>TM_LINE_NUMBER</code> The one-index based line number<br><code>TM_FILENAME</code> The filename of the current document<br><code>TM_FILENAME_BASE</code> The filename of the current document without its extensions<br><code>TM_LINE_INDEX</code> The zero-index based line number<br><code>TM_DIRECTORY</code> The directory of the current document<br><code>TM_FILEPATH</code> The full file path of the current document<br><code>CLIPBOARD</code> The contents of your clipboard<br><code>TM_CURRENT_LINE</code> The contents of the current line<br><code>TM_CURRENT_WORD</code> The contents of the word under cursor or the empty string</p><p><code>CURRENT_DAY_NAME</code> The name of day (example ‘Monday’)<br><code>CURRENT_DAY_NAME_SHORT</code> The short name of the day (example ‘Mon’)<br><code>CURRENT_HOUR</code> The current hour in 24-hour clock format<br><code>CURRENT_MINUTE</code> The current minute<br><code>CURRENT_SECOND</code> The current second</p><p><code>CURRENT_YEAR</code> The current year<br><code>CURRENT_YEAR_SHORT</code> The current year’s last two digits<br><code>CURRENT_MONTH</code> The month as two digits (example ‘02’)<br><code>CURRENT_MONTH_NAME</code> The full name of the month (example ‘July’)<br><code>CURRENT_MONTH_NAME_SHORT</code> The short name of the month (example ‘Jul’)<br><code>CURRENT_DATE</code> The day of the month</p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> VS code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS code </tag>
            
            <tag> snippet </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo add local search</title>
      <link href="/post/hexo_add_local_search.html"/>
      <url>/post/hexo_add_local_search.html</url>
      <content type="html"><![CDATA[<p>description: add a local search for hexo blog </p><h1 id="install-hexo-generator-search"><a href="#install-hexo-generator-search" class="headerlink" title="install hexo-generator-search"></a>install hexo-generator-search</h1><p>run following commend under <code>search4fan.github.io/</code> folder<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></p><h1 id="change-configuration"><a href="#change-configuration" class="headerlink" title="change configuration"></a>change configuration</h1><p>add following text in <code>search4fan.github.io/_config.yml</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span> </span><br><span class="line"><span class="attr">      path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">      field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure></p><h1 id="change-theme-configuration"><a href="#change-theme-configuration" class="headerlink" title="change theme configuration"></a>change theme configuration</h1><p>change <code>_config.yml</code> under theme folder <code>search4fan.github.io/themes/next/_config.yml</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># unescape html strings to the readable one</span></span><br><span class="line"><span class="attr">  unescape:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python assign value of dataframe by conditions</title>
      <link href="/post/python_assign_value_conditionally.html"/>
      <url>/post/python_assign_value_conditionally.html</url>
      <content type="html"><![CDATA[<p>description: python assign or set value if conditions match </p><h1 id="python-assign-or-set-value-based-on-conditions"><a href="#python-assign-or-set-value-based-on-conditions" class="headerlink" title="python assign or set value based on conditions"></a>python assign or set value based on conditions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"></span><br><span class="line">data = pandas.DataFrame(&#123;<span class="string">"test"</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>], <span class="string">"a"</span>: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>], <span class="string">"b"</span>: [<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]&#125;)</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 0    10  1  0</span></span><br><span class="line"><span class="comment"># 1    20  1  2</span></span><br><span class="line"><span class="comment"># 2    30  1  2</span></span><br><span class="line"><span class="comment"># 3    40  2  2</span></span><br></pre></td></tr></table></figure><h1 id="filter-the-data-with-condtion-1"><a href="#filter-the-data-with-condtion-1" class="headerlink" title="filter the data with condtion 1"></a>filter the data with condtion 1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tmp = data[data[<span class="string">"a"</span>] == <span class="number">1</span>]</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 0    10  1  0</span></span><br><span class="line"><span class="comment"># 1    20  1  2</span></span><br><span class="line"><span class="comment"># 2    30  1  2</span></span><br></pre></td></tr></table></figure><h1 id="filter-the-data-with-condition-2"><a href="#filter-the-data-with-condition-2" class="headerlink" title="filter the data with condition 2"></a>filter the data with condition 2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tmp = tmp[tmp[<span class="string">"b"</span>] == <span class="number">2</span>]</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 1    20  1  2</span></span><br><span class="line"><span class="comment"># 2    30  1  2</span></span><br></pre></td></tr></table></figure><h1 id="get-the-index-of-the-data"><a href="#get-the-index-of-the-data" class="headerlink" title="get the index of the data"></a>get the index of the data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">indexes = tmp.index</span><br><span class="line"><span class="comment"># Int64Index([1, 2], dtype='int64')</span></span><br></pre></td></tr></table></figure><h1 id="change-values-by-indexes-and-column-name"><a href="#change-values-by-indexes-and-column-name" class="headerlink" title="change values by indexes and column name"></a>change values by indexes and column name</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data._set_value(indexes, <span class="string">'test'</span>, <span class="number">888888</span>)</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 0      10  1  0</span></span><br><span class="line"><span class="comment"># 1  888888  1  2</span></span><br><span class="line"><span class="comment"># 2  888888  1  2</span></span><br><span class="line"><span class="comment"># 3      40  2  2</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>optimze hexo blog title for seo</title>
      <link href="/post/hexo_title_seo_optimization.html"/>
      <url>/post/hexo_title_seo_optimization.html</url>
      <content type="html"><![CDATA[<h1 id="change-index-swig-file"><a href="#change-index-swig-file" class="headerlink" title="change index.swig file"></a>change index.swig file</h1><p>under <code>your-hexo-site\themes\next\layout</code></p><h1 id="chang-the-title-codes"><a href="#chang-the-title-codes" class="headerlink" title="chang the title codes"></a>chang the title codes</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; config.title &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>change into<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p><p>moreover, it can add keywords into title<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> seo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>add sitemap into hexo blog</title>
      <link href="/post/hexo_add_sitemap.html"/>
      <url>/post/hexo_add_sitemap.html</url>
      <content type="html"><![CDATA[<h1 id="install-plugin-for-SEO-sitemap"><a href="#install-plugin-for-SEO-sitemap" class="headerlink" title="install plugin for SEO sitemap"></a>install plugin for SEO sitemap</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>optional for baidu search engine<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></p><h1 id="change-configuration-file-in-config-yml"><a href="#change-configuration-file-in-config-yml" class="headerlink" title="change configuration file in _config.yml"></a>change configuration file in <code>_config.yml</code></h1><p>add following codes into <code>_config.yml</code> file and change the value of url, should be like <code>http://yoursite.com</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://search4fan.github.io</span></span><br></pre></td></tr></table></figure></p><p>optional for baidu search engine sitemap<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">baidusitemap.xml</span></span><br></pre></td></tr></table></figure></p><h1 id="check-with-public-folder"><a href="#check-with-public-folder" class="headerlink" title="check with public folder"></a>check with public folder</h1><p>after <code>hexo g</code>, the <code>sitemap.xml</code> or <code>baidusitemap.xml</code> should be found under <code>public</code> folder</p><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> sitemap </tag>
            
            <tag> seo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Google Home links to Local Host through localtunnel</title>
      <link href="/post/google_home.html"/>
      <url>/post/google_home.html</url>
      <content type="html"><![CDATA[<h1 id="nodejs-localhost"><a href="#nodejs-localhost" class="headerlink" title="nodejs localhost"></a>nodejs localhost</h1><p>Google home request -&gt; index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>),</span><br><span class="line">app = express(),</span><br><span class="line">bodyparser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>),</span><br><span class="line">assistant = <span class="built_in">require</span>(<span class="string">'./assistant.js'</span>),</span><br><span class="line">util = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line">app.use(bodyparser.json())</span><br><span class="line"></span><br><span class="line"><span class="comment">// GET method route</span></span><br><span class="line">app.all(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'index.js/'</span>);</span><br><span class="line">  assistant.assistantHandler(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.all(<span class="string">'/test'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'index.js/test'</span>);</span><br><span class="line">res.send(<span class="string">'helloworld'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure></p><p>index.js -&gt; Google actions sdk<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ActionsSdkApp = <span class="built_in">require</span>(<span class="string">'actions-on-google'</span>).ActionsSdkApp;</span><br><span class="line"></span><br><span class="line">exports.assistantHandler = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'assistantHandler'</span>);</span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> ActionsSdkApp(&#123;</span><br><span class="line">        request: req,</span><br><span class="line">        response: res</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">'Sorry. I don\'t understand what you say'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create functions to handle requests here</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">mainIntent</span>(<span class="params">app</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'assistant.js/mainIntent'</span>);</span><br><span class="line">        voiceResponse(<span class="string">'welcome'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">respond</span>(<span class="params">app</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'assistant.js/respond'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (app.getRawInput() == <span class="string">'hello'</span>) &#123;</span><br><span class="line">str = <span class="string">'hello'</span></span><br><span class="line">&#125;</span><br><span class="line">        voiceResponse(str)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">voiceResponse</span>(<span class="params">strIn</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> inputPrompt = app.buildInputPrompt(<span class="literal">false</span>,strIn);</span><br><span class="line">        app.ask(inputPrompt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> actionMap = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    actionMap.set(app.StandardIntents.MAIN, mainIntent);</span><br><span class="line">    actionMap.set(app.StandardIntents.TEXT, respond);</span><br><span class="line"></span><br><span class="line">    app.handleRequest(actionMap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="localtunnel"><a href="#localtunnel" class="headerlink" title="localtunnel"></a>localtunnel</h1><p>acquire the URL to access localhost : <a href="https://localtunnel.github.io/www/" target="_blank" rel="noopener">https://localtunnel.github.io/www/</a><br>    -&gt; installation: <code>npm install -g localtunnel</code><br>    -&gt; running: <code>lt --port 8000</code><br>    -&gt; copy the url</p><h1 id="Google-Actions-SDK"><a href="#Google-Actions-SDK" class="headerlink" title="Google Actions SDK"></a>Google Actions SDK</h1><ol><li><p>Apply for account: <a href="https://developers.google.com/actions/sdk/" target="_blank" rel="noopener">https://developers.google.com/actions/sdk/</a><br> -&gt; Add project<br> -&gt; fill the form<br> -&gt; get the update code as follow </p><pre><code>`gactions update --action_package PACKAGE_NAME --project PROJECT_NAME`</code></pre></li><li><p>gactions Cli : <a href="https://developers.google.com/actions/tools/gactions-cli" target="_blank" rel="noopener">https://developers.google.com/actions/tools/gactions-cli</a><br> -&gt; download<br> -&gt; Run <code>chmod +x gactions</code> to make the binary executable<br> -&gt; get the actions json sample <code>gactions init</code><br> -&gt; change the actions:add the url in the json file<br> -&gt; update </p><pre><code>`gactions update --action_package PACKAGE_NAME --project PROJECT_ID`</code></pre></li><li><p>test google actions:<a href="https://developers.google.com/actions/tools/simulator" target="_blank" rel="noopener">https://developers.google.com/actions/tools/simulator</a></p></li></ol><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
            <tag> google home </tag>
            
            <tag> nodejs </tag>
            
            <tag> local tunnel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>add rss feed into hexo blog - install feed plugin in hexo blog</title>
      <link href="/post/hexo_rss_feed.html"/>
      <url>/post/hexo_rss_feed.html</url>
      <content type="html"><![CDATA[<h1 id="install-hexo-generator-feed"><a href="#install-hexo-generator-feed" class="headerlink" title="install hexo-generator-feed"></a>install hexo-generator-feed</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-feed --save</span></span><br></pre></td></tr></table></figure><h1 id="add-following-contents-into-config-yml"><a href="#add-following-contents-into-config-yml" class="headerlink" title="add following contents into _config.yml"></a>add following contents into <code>_config.yml</code></h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">  hub:</span></span><br><span class="line"><span class="attr">  content:</span></span><br><span class="line"><span class="attr">  content_limit:</span> <span class="number">140</span></span><br><span class="line"><span class="attr">  content_limit_delim:</span> <span class="string">' '</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> feed </tag>
            
            <tag> rss </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>add google adsense into hexo blog in next theme</title>
      <link href="/post/hexo_next_google_adsense.html"/>
      <url>/post/hexo_next_google_adsense.html</url>
      <content type="html"><![CDATA[<h1 id="build-a-new-adsense-template-under-next-theme-in-layout-custom"><a href="#build-a-new-adsense-template-under-next-theme-in-layout-custom" class="headerlink" title="build a new adsense template under next theme in layout/_custom"></a>build a new adsense template under <code>next</code> theme in <code>layout/_custom</code></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">themes/next/layout/_custom/google_adsense.ejs</span><br></pre></td></tr></table></figure><h1 id="put-the-google-adsense-codes-into-google-adsense-ejs"><a href="#put-the-google-adsense-codes-into-google-adsense-ejs" class="headerlink" title="put the google adsense codes into google_adsense.ejs"></a>put the google adsense codes into <code>google_adsense.ejs</code></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  (adsbygoogle = <span class="built_in">window</span>.adsbygoogle || []).push(&#123;</span></span><br><span class="line"><span class="javascript">    google_ad_client: <span class="string">"ca-pub-5817381835091099"</span>,</span></span><br><span class="line"><span class="javascript">    enable_page_level_ads: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="add-following-codes-in-layout-swig-under-theme-folder"><a href="#add-following-codes-in-layout-swig-under-theme-folder" class="headerlink" title="add following codes in _layout.swig under theme folder"></a>add following codes in <code>_layout.swig</code> under theme folder</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Google AdSense start --&gt;</span></span><br><span class="line">&#123;% include '_custom/google_adsense.ejs' %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Google AdSense end --&gt;</span></span><br></pre></td></tr></table></figure><h1 id="generate-web-page-and-check-source-file-to-see-the-google-code-in-there"><a href="#generate-web-page-and-check-source-file-to-see-the-google-code-in-there" class="headerlink" title="generate web page and check source file to see the google code in there"></a>generate web page and check source file to see the google code in there</h1><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
            <tag> hexo </tag>
            
            <tag> adsense </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python numpy datetime64 today</title>
      <link href="/post/python_timedelta_days.html"/>
      <url>/post/python_timedelta_days.html</url>
      <content type="html"><![CDATA[<h1 id="python-numpy-datetime64-today"><a href="#python-numpy-datetime64-today" class="headerlink" title="python numpy datetime64 today"></a>python numpy datetime64 today</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> datetime</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>today = np.datetime64(datetime.datetime.now())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>today</span><br><span class="line">numpy.datetime64(<span class="string">'2018-07-12T19:12:39.167044'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>past = np.datetime64(<span class="string">'2018-01-01'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>past</span><br><span class="line">numpy.datetime64(<span class="string">'2018-01-01'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif = today - past</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif</span><br><span class="line">numpy.timedelta64(<span class="number">16657959167044</span>,<span class="string">'us'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif = np.timedelta64(dif, <span class="string">'D'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif</span><br><span class="line">numpy.timedelta64(<span class="number">192</span>,<span class="string">'D'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif.astype(int)</span><br><span class="line"><span class="number">192</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> timedelta </tag>
            
            <tag> datetime64 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python timedelta to seconds</title>
      <link href="/post/python_timedelta%20_to_seconds.html"/>
      <url>/post/python_timedelta%20_to_seconds.html</url>
      <content type="html"><![CDATA[<h1 id="python-timedelta-to-seconds"><a href="#python-timedelta-to-seconds" class="headerlink" title="python timedelta to seconds"></a>python timedelta to seconds</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = np.datetime64(datetime.datetime.today())</span><br><span class="line">today</span><br><span class="line"><span class="comment"># numpy.datetime64('2018-07-12T19:28:08.889374')</span></span><br><span class="line"></span><br><span class="line">past = np.datetime64(<span class="string">'2018-07-11'</span>)</span><br><span class="line">past</span><br><span class="line"><span class="comment"># numpy.datetime64('2018-07-11')</span></span><br><span class="line"></span><br><span class="line">dif = today - past</span><br><span class="line">dif</span><br><span class="line"><span class="comment"># numpy.timedelta64(156488889374,'us')</span></span><br><span class="line"></span><br><span class="line">dif.astype(int)</span><br><span class="line"><span class="comment"># 1870066718</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> timedelta </tag>
            
            <tag> datetime64 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>test</title>
      <link href="/post/test.html"/>
      <url>/post/test.html</url>
      <content type="html"><![CDATA[<p>test<br>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/post/hello-world.html"/>
      <url>/post/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
