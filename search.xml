<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>.value2 vba</title>
      <link href="/post/vba-value2.html"/>
      <url>/post/vba-value2.html</url>
      <content type="html"><![CDATA[<p>description: the difference between .text, .value and .value2 </p><h1 id="text"><a href="#text" class="headerlink" title=".text"></a>.text</h1><p>The present of cell. May get ####</p><h1 id="value"><a href="#value" class="headerlink" title=".value"></a>.value</h1><p>Get the cell value formatted. May get truncate decimal number. </p><h1 id="value2"><a href="#value2" class="headerlink" title=".value2"></a>.value2</h1><p>Get the underlying value. Actual store value. </p>]]></content>
      
      <categories>
          
          <category> vba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vba </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>webstorm require unresolved function or method</title>
      <link href="/post/webstorm-require-keword-not-being-recognized.html"/>
      <url>/post/webstorm-require-keword-not-being-recognized.html</url>
      <content type="html"><![CDATA[<p>description: You need to enable “Node.js Globals” entry.</p><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><p>enable <code>Coding assistance for Node.js</code></p>]]></content>
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webstorm </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Microsoft Visual Studio Code insert date time variables into snippet template</title>
      <link href="/post/vs_code_datetime_snippet.html"/>
      <url>/post/vs_code_datetime_snippet.html</url>
      <content type="html"><![CDATA[<p>description: make a snippet with current datetime </p><h1 id="open-snippet-file-to-edit"><a href="#open-snippet-file-to-edit" class="headerlink" title="open snippet file to edit"></a>open snippet file to edit</h1><p>File -&gt; preference –&gt; user snippets</p><h1 id="edit-snippet-like-following"><a href="#edit-snippet-like-following" class="headerlink" title="edit snippet like following"></a>edit snippet like following</h1><p><code>${CURRENT_DATE}/${CURRENT_MONTH}/${CURRENT_YEAR} ${CURRENT_HOUR}:${CURRENT_MINUTE}</code><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"post"</span>: &#123;</span><br><span class="line"><span class="attr">"prefix"</span>: <span class="string">".post"</span>,</span><br><span class="line"><span class="attr">"body"</span>: [</span><br><span class="line"><span class="string">"---\r"</span>,</span><br><span class="line"><span class="string">"title: $&#123;1&#125;\r"</span>,</span><br><span class="line"><span class="string">"date: $&#123;CURRENT_DATE&#125;/$&#123;CURRENT_MONTH&#125;/$&#123;CURRENT_YEAR&#125; $&#123;CURRENT_HOUR&#125;:$&#123;CURRENT_MINUTE&#125;\r"</span>,</span><br><span class="line"><span class="string">"tags: \r"</span>,</span><br><span class="line"><span class="string">"keywords:\r"</span>,</span><br><span class="line"><span class="string">"categories: \r"</span>,</span><br><span class="line"><span class="string">"---\r"</span>,</span><br><span class="line"><span class="string">"description:\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">"---------------------------------------------\r"</span>,</span><br><span class="line"><span class="string">"more on [search4fan.github.io](https://search4fan.github.io/)\r"</span>,</span><br><span class="line"><span class="string">"\r"</span>,</span><br><span class="line"><span class="string">""</span></span><br><span class="line">],</span><br><span class="line"><span class="attr">"description"</span>: <span class="string">"post template"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="other-variables"><a href="#other-variables" class="headerlink" title="other variables"></a>other variables</h1><p><code>TM_SELECTED_TEXT</code> The currently selected text or the empty string<br><code>TM_LINE_NUMBER</code> The one-index based line number<br><code>TM_FILENAME</code> The filename of the current document<br><code>TM_FILENAME_BASE</code> The filename of the current document without its extensions<br><code>TM_LINE_INDEX</code> The zero-index based line number<br><code>TM_DIRECTORY</code> The directory of the current document<br><code>TM_FILEPATH</code> The full file path of the current document<br><code>CLIPBOARD</code> The contents of your clipboard<br><code>TM_CURRENT_LINE</code> The contents of the current line<br><code>TM_CURRENT_WORD</code> The contents of the word under cursor or the empty string</p><p><code>CURRENT_DAY_NAME</code> The name of day (example ‘Monday’)<br><code>CURRENT_DAY_NAME_SHORT</code> The short name of the day (example ‘Mon’)<br><code>CURRENT_HOUR</code> The current hour in 24-hour clock format<br><code>CURRENT_MINUTE</code> The current minute<br><code>CURRENT_SECOND</code> The current second</p><p><code>CURRENT_YEAR</code> The current year<br><code>CURRENT_YEAR_SHORT</code> The current year’s last two digits<br><code>CURRENT_MONTH</code> The month as two digits (example ‘02’)<br><code>CURRENT_MONTH_NAME</code> The full name of the month (example ‘July’)<br><code>CURRENT_MONTH_NAME_SHORT</code> The short name of the month (example ‘Jul’)<br><code>CURRENT_DATE</code> The day of the month</p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> VS code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VS code </tag>
            
            <tag> snippet </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>get list of modules name in Excel vba</title>
      <link href="/post/vba_get_list_of_modules_name.html"/>
      <url>/post/vba_get_list_of_modules_name.html</url>
      <content type="html"><![CDATA[<p>description: vba to get list of modules name </p><h1 id="code-of-vba-to-get-list-of-module-names"><a href="#code-of-vba-to-get-list-of-module-names" class="headerlink" title="code of vba to get list of module names"></a>code of vba to get list of module names</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Private</span> <span class="keyword">Sub</span> getAllModuleNames()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> modName <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Dim</span> wb <span class="keyword">As</span> Workbook</span><br><span class="line">    <span class="keyword">Dim</span> l <span class="keyword">As</span> <span class="built_in">Long</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> wb = thisWorkbook</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">For</span> l = <span class="number">1</span> <span class="keyword">To</span> wb.VBProject.VBComponents.count</span><br><span class="line">        <span class="keyword">With</span> wb.VBProject.VBComponents(l)</span><br><span class="line">            modName = modName &amp; vbCr &amp; .name</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">With</span></span><br><span class="line">    <span class="keyword">Next</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">'MsgBox "Module Names:" &amp; vbCr &amp; modName</span></span><br><span class="line">    Cells(<span class="number">40</span>, <span class="number">1</span>).value = modName</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">Set</span> wb = <span class="literal">Nothing</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Sub</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> vba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vba </tag>
            
            <tag> excel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VBA Difference between .text .value .value2</title>
      <link href="/post/vba_get_cell_text.html"/>
      <url>/post/vba_get_cell_text.html</url>
      <content type="html"><![CDATA[<p>description: difference between .text .value .value2 in Excel</p><h1 id="text"><a href="#text" class="headerlink" title=".text"></a>.text</h1><p>get the screen displayed text<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cells(<span class="number">1</span>,<span class="number">1</span>).<span class="keyword">text</span> </span><br><span class="line"><span class="comment">'get ##### if the cell width too short</span></span><br></pre></td></tr></table></figure></p><h1 id="value"><a href="#value" class="headerlink" title=".value"></a>.value</h1><p>can get formatted Currency and date<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cells(<span class="number">1</span>,<span class="number">1</span>).value </span><br><span class="line"><span class="comment">'get 13/02/2016 12:52 if it is a date</span></span><br></pre></td></tr></table></figure></p><h1 id="value2"><a href="#value2" class="headerlink" title=".value2"></a>.value2</h1><p>get underlying value (include empty, string, error, number and boolean)<br><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cells(<span class="number">1</span>,<span class="number">1</span>).value2 </span><br><span class="line"><span class="comment">'get 2342432.12 if it is a date</span></span><br></pre></td></tr></table></figure></p>]]></content>
      
      <categories>
          
          <category> vba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vba </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>ssms save changes not permitted</title>
      <link href="/post/ssms_not_permit_change.html"/>
      <url>/post/ssms_not_permit_change.html</url>
      <content type="html"><![CDATA[<p>description: Sql Server ‘Saving changes is not permitted’</p><h1 id="problem-description"><a href="#problem-description" class="headerlink" title="problem description"></a>problem description</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Saving changes is not permitted. The changes that you have made require the following tables to be dropped and re-created. You have either made changes to a table that can&apos;t be re-created or enabled the option Prevent saving changes that require the table to be re-created.</span><br></pre></td></tr></table></figure><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><ul><li>Tools -&gt; Options </li><li>Designers -&gt; Table and Database Designers -&gt; Prevent saving changes that require table re-creation -&gt; unclick</li></ul><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>display line number in sql server management studio</title>
      <link href="/post/ssms_display_line_number.html"/>
      <url>/post/ssms_display_line_number.html</url>
      <content type="html"><![CDATA[<p>description: display line number in mssql editor</p><ul><li>tools -&gt; options </li><li>Text Editor -&gt; Transact-SQL -&gt; line numbers </li></ul><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssms </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>basic frequent Sql commends in sql server</title>
      <link href="/post/ssms_basic_frequent_commends.html"/>
      <url>/post/ssms_basic_frequent_commends.html</url>
      <content type="html"><![CDATA[<p>description: sql comments for basic query </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- use </span></span><br><span class="line"><span class="keyword">use</span> testdb</span><br><span class="line"><span class="keyword">go</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people</span><br><span class="line"><span class="keyword">select</span> top <span class="number">1</span> * <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- insert into people values (1, 'lily', 'f', 12)</span></span><br><span class="line"><span class="comment">-- insert into people values (2, 'chao', 'm', 16)</span></span><br><span class="line"><span class="comment">-- insert into people values (3, 'alin', 'f',null)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">id</span>, <span class="keyword">name</span> <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, age <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> age <span class="keyword">desc</span>,<span class="keyword">id</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- order by number</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, age <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span> <span class="number">2</span> <span class="comment">--2 means age </span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- isnull()</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">ISNULL</span> (age, <span class="string">''</span>) <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">--alias</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">name</span>, <span class="keyword">ISNULL</span> (age, <span class="string">''</span>) <span class="keyword">as</span> a <span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- concat strings </span></span><br><span class="line"><span class="keyword">select</span> <span class="string">'people '</span> + <span class="keyword">TRIM</span> (<span class="keyword">name</span>) + <span class="string">' is age of '</span> + <span class="keyword">convert</span>(<span class="built_in">varchar</span>, <span class="keyword">isnull</span>(age, <span class="string">''</span>)) <span class="keyword">as</span> [description] </span><br><span class="line"><span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- round()</span></span><br><span class="line"><span class="keyword">select</span> age, age * <span class="number">10</span> <span class="keyword">as</span> <span class="string">'age10'</span>,</span><br><span class="line"><span class="keyword">round</span>(<span class="keyword">convert</span>(<span class="built_in">float</span>,age)/<span class="number">8</span>, <span class="number">1</span>) <span class="keyword">as</span> <span class="string">'ageD8'</span>,</span><br><span class="line"><span class="keyword">round</span>(age/<span class="number">3</span>, <span class="number">0</span>) <span class="keyword">as</span> <span class="string">'ageD3'</span></span><br><span class="line"><span class="keyword">from</span> people</span><br><span class="line"></span><br><span class="line"><span class="comment">-- where </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age &lt;&gt; <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- and or </span></span><br><span class="line"><span class="comment">-- select date from time where data between '2005-10-10' and '1/1/2006'</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">2</span> <span class="keyword">or</span> <span class="keyword">id</span> = <span class="number">3</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">name</span> = <span class="string">'chao'</span> <span class="keyword">and</span> age =<span class="number">16</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- wildcard % like </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'%h%'</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">-- _ single character </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'_hao%'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- in </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people</span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">in</span> (<span class="number">14</span>,<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- not in </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- is null</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">is</span> <span class="literal">null</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- is not null </span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> people </span><br><span class="line"><span class="keyword">where</span> age <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssms </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R language to build Decision Tree for wine dataset</title>
      <link href="/post/r_build_DecisionTree.html"/>
      <url>/post/r_build_DecisionTree.html</url>
      <content type="html"><![CDATA[<p>description: build Decision Tree for wine dataset in R language </p><h1 id="read-data-From-File"><a href="#read-data-From-File" class="headerlink" title="read data From File"></a>read data From File</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wine&lt;-read.table(<span class="string">"E:\\wine.data"</span>,</span><br><span class="line">                 sep=<span class="string">","</span>,</span><br><span class="line">                 col.names = c(<span class="string">"Type"</span>,<span class="string">"Alcohol"</span>,<span class="string">"Malic"</span>,<span class="string">"Ash"</span>,<span class="string">"Alcalinity"</span>,<span class="string">"Magnesium"</span>, <span class="string">"Phenols"</span>,<span class="string">"Flavanoids"</span>, <span class="string">"Nonflavanoids"</span>, <span class="string">"Proanthcyanins"</span>, <span class="string">"Color"</span>, <span class="string">"Hue"</span>, <span class="string">"Dilution"</span>, <span class="string">"Proline"</span>))</span><br><span class="line">wine$Type=factor(wine$Type)</span><br></pre></td></tr></table></figure><h1 id="Data-mining-using-J48-Decision-Tree-classifier"><a href="#Data-mining-using-J48-Decision-Tree-classifier" class="headerlink" title="Data mining using J48 Decision Tree classifier"></a>Data mining using J48 Decision Tree classifier</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wine.scale &lt;- cbind(wine[<span class="number">1</span>], scale(wine[-<span class="number">1</span>])) </span><br><span class="line">data.size &lt;- nrow(wine.scale)</span><br><span class="line">set.seed(<span class="number">1111</span>)</span><br><span class="line">samp &lt;- c(sample(<span class="number">1</span>:data.size, data.size * <span class="number">0.7</span>))</span><br><span class="line">data.tr &lt;- wine.scale[samp, ]</span><br><span class="line">data.test &lt;- wine.scale[-samp, ]</span><br></pre></td></tr></table></figure><h1 id="J48-Model"><a href="#J48-Model" class="headerlink" title="J48 Model"></a>J48 Model</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wine_dt=J48(Type~.,data=data.tr)</span><br><span class="line">wine_dt</span><br><span class="line">prediction_dt = predict(wine_dt, data.test[,<span class="number">2</span>:<span class="number">14</span>]) </span><br><span class="line">prediction_dt</span><br></pre></td></tr></table></figure><h1 id="rpart-get-tree-rules"><a href="#rpart-get-tree-rules" class="headerlink" title="rpart get tree rules"></a>rpart get tree rules</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(rpart)</span><br><span class="line"></span><br><span class="line">res = rpart(Type ~., data = data.tr)</span><br><span class="line">res</span><br><span class="line"></span><br><span class="line">terminal_nodes = rownames(res$frame)[res$frame$var ==<span class="string">"&lt;leaf&gt;"</span>]</span><br><span class="line">path.rpart(res ,nodes=terminal_nodes)</span><br><span class="line">rules = path.rpart(res ,nodes=terminal_nodes)</span><br><span class="line">listed_rules = unlist(rules)</span><br><span class="line">sapply(rules,<span class="string">"["</span>,-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">frm &lt;- res$frame</span><br><span class="line">names &lt;- row.names(frm)</span><br><span class="line"></span><br><span class="line">prediction_dt = predict(res, data.test[,<span class="number">2</span>:<span class="number">14</span>], type=<span class="string">"matrix"</span>)</span><br><span class="line">prediction_dt</span><br></pre></td></tr></table></figure><h1 id="party"><a href="#party" class="headerlink" title="party"></a>party</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">update.packages()</span><br><span class="line">Sys.setenv(JAVA_HOME = <span class="string">"D:\\Program Files\\Java\\jdk1.8.0_151"</span>)</span><br><span class="line">install.packages(<span class="string">"zoo"</span>)</span><br><span class="line">install.packages(<span class="string">"party"</span>)</span><br><span class="line">install.packages(<span class="string">"sandwich"</span>)</span><br><span class="line"><span class="keyword">library</span>(party)</span><br><span class="line">mparty = party(Type ~., data = data.tr)</span><br><span class="line">mparty</span><br></pre></td></tr></table></figure><h1 id="party-ctree"><a href="#party-ctree" class="headerlink" title="party ctree()"></a>party ctree()</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">p_ctree &lt;- ctree(Type ~., data=data.tr)</span><br><span class="line">ctree_class &lt;- predict(p_ctree,data.test[,<span class="number">2</span>:<span class="number">14</span>], type=<span class="string">"response"</span>)</span><br><span class="line">test_ctree &lt;- predict(p_ctree,data.test[,<span class="number">2</span>:<span class="number">14</span>], type=<span class="string">"node"</span>)</span><br><span class="line">test_ctree</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
            <tag> r language </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>r language to cluster iris dataset through k-means and hierarchical clustering</title>
      <link href="/post/r_AI_kmeans_hcluster.html"/>
      <url>/post/r_AI_kmeans_hcluster.html</url>
      <content type="html"><![CDATA[<p>description: cluster iris data set by hierarchical clustering and k-means</p><h1 id="iris-data-set"><a href="#iris-data-set" class="headerlink" title="iris data set"></a>iris data set</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(RWeka)</span><br><span class="line">iris</span><br><span class="line"><span class="comment">#     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species</span></span><br><span class="line"><span class="comment"># 1            5.1         3.5          1.4         0.2     setosa</span></span><br><span class="line"><span class="comment"># 2            4.9         3.0          1.4         0.2     setosa</span></span><br><span class="line"><span class="comment"># 3            4.7         3.2          1.3         0.2     setosa</span></span><br><span class="line"><span class="comment"># 4            4.6         3.1          1.5         0.2     setosa</span></span><br><span class="line"><span class="comment"># 5            5.0         3.6          1.4         0.2     setosa</span></span><br><span class="line"><span class="comment"># 6            5.4         3.9          1.7         0.4     setosa</span></span><br><span class="line"><span class="comment"># 7            4.6         3.4          1.4         0.3     setosa</span></span><br><span class="line"><span class="comment"># 8            5.0         3.4          1.5         0.2     setosa</span></span><br><span class="line"><span class="comment"># 9            4.4         2.9          1.4         0.2     setosa</span></span><br><span class="line"><span class="comment"># 10           4.9         3.1          1.5         0.1     setosa</span></span><br><span class="line"><span class="comment"># 11           5.4         3.7          1.5         0.2     setosa</span></span><br></pre></td></tr></table></figure><h1 id="delete-class-column"><a href="#delete-class-column" class="headerlink" title="delete class column"></a>delete class column</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">datairis&lt;-iris</span><br><span class="line">datairis$Species&lt;-<span class="literal">NULL</span></span><br><span class="line">datairis </span><br><span class="line"><span class="comment">#     Sepal.Length Sepal.Width Petal.Length Petal.Width</span></span><br><span class="line"><span class="comment"># 1            5.1         3.5          1.4         0.2</span></span><br><span class="line"><span class="comment"># 2            4.9         3.0          1.4         0.2</span></span><br><span class="line"><span class="comment"># 3            4.7         3.2          1.3         0.2</span></span><br><span class="line"><span class="comment"># 4            4.6         3.1          1.5         0.2</span></span><br><span class="line"><span class="comment"># 5            5.0         3.6          1.4         0.2</span></span><br><span class="line"><span class="comment"># 6            5.4         3.9          1.7         0.4</span></span><br><span class="line"><span class="comment"># 7            4.6         3.4          1.4         0.3</span></span><br><span class="line"><span class="comment"># 8            5.0         3.4          1.5         0.2</span></span><br><span class="line"><span class="comment"># 9            4.4         2.9          1.4         0.2</span></span><br><span class="line"><span class="comment"># 10           4.9         3.1          1.5         0.1</span></span><br><span class="line"><span class="comment"># 11           5.4         3.7          1.5         0.2</span></span><br></pre></td></tr></table></figure><h1 id="partitional-clustering-K-means-clustering"><a href="#partitional-clustering-K-means-clustering" class="headerlink" title="partitional clustering: K means clustering"></a>partitional clustering: K means clustering</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kcluster&lt;-kmeans(datairis,<span class="number">3</span>) <span class="comment"># k as 3, divide into 3 species</span></span><br><span class="line">kcluster</span><br><span class="line"><span class="comment"># K-means clustering with 3 clusters of sizes 38, 50, 62</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster means:</span></span><br><span class="line"><span class="comment">#   Sepal.Length Sepal.Width Petal.Length Petal.Width</span></span><br><span class="line"><span class="comment"># 1     6.850000    3.073684     5.742105    2.071053</span></span><br><span class="line"><span class="comment"># 2     5.006000    3.428000     1.462000    0.246000</span></span><br><span class="line"><span class="comment"># 3     5.901613    2.748387     4.393548    1.433871</span></span><br></pre></td></tr></table></figure><h1 id="plot-cluster-with-“Sepal-Width”-and-“Petal-Width”"><a href="#plot-cluster-with-“Sepal-Width”-and-“Petal-Width”" class="headerlink" title="plot cluster with “Sepal.Width” and “Petal.Width”"></a>plot cluster with “Sepal.Width” and “Petal.Width”</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(datairis[c(<span class="string">"Sepal.Width"</span>,<span class="string">"Petal.Width"</span>)],col=kcluster$cluster)</span><br><span class="line">points(kcluster$centers[,c(<span class="string">"Sepal.Width"</span>,<span class="string">"Petal.Width"</span>)], col=<span class="number">1</span>:<span class="number">3</span>, pch=<span class="number">8</span>, cex=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/2018-07-24-11-06-29.png" alt=""></p><h1 id="plot-cluster-with-“Sepal-Length”-and-“Petal-Length”"><a href="#plot-cluster-with-“Sepal-Length”-and-“Petal-Length”" class="headerlink" title="plot cluster with “Sepal.Length” and “Petal.Length”"></a>plot cluster with “Sepal.Length” and “Petal.Length”</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(datairis[c(<span class="string">"Sepal.Length"</span>,<span class="string">"Petal.Length"</span>)],col=kcluster$cluster)</span><br><span class="line">points(kcluster$centers[,c(<span class="string">"Sepal.Length"</span>,<span class="string">"Petal.Length"</span>)], col=<span class="number">1</span>:<span class="number">3</span>, pch=<span class="number">8</span>, cex=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/2018-07-24-11-07-47.png" alt=""></p><h1 id="plot-cluster-with-“Petal-Length”-and-“Petal-Length”"><a href="#plot-cluster-with-“Petal-Length”-and-“Petal-Length”" class="headerlink" title="plot cluster with “Petal.Length” and “Petal.Length”"></a>plot cluster with “Petal.Length” and “Petal.Length”</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plot(datairis[c(<span class="string">"Petal.Length"</span>,<span class="string">"Petal.Length"</span>)],col=kcluster$cluster)</span><br><span class="line">points(kcluster$centers[,c(<span class="string">"Petal.Length"</span>,<span class="string">"Petal.Length"</span>)], col=<span class="number">1</span>:<span class="number">3</span>, pch=<span class="number">8</span>, cex=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p><img src="/images/2018-07-24-11-08-21.png" alt=""></p><h1 id="Check-the-result-through-a-table"><a href="#Check-the-result-through-a-table" class="headerlink" title="Check the result through a table"></a>Check the result through a table</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">iris$Species</span><br><span class="line">table(iris$Species,kcluster$cluster) </span><br><span class="line"><span class="comment">#               1  2  3</span></span><br><span class="line"><span class="comment">#   setosa      0 50  0</span></span><br><span class="line"><span class="comment">#   versicolor  2  0 48</span></span><br><span class="line"><span class="comment">#   virginica  36  0 14</span></span><br></pre></td></tr></table></figure><h1 id="hierarchical-clustering"><a href="#hierarchical-clustering" class="headerlink" title="hierarchical clustering"></a>hierarchical clustering</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dim(iris)[<span class="number">1</span>] <span class="comment"># dim:Itretrieveorsetthedimensionofanobject</span></span><br><span class="line">random = sample(<span class="number">1</span>:dim(iris)[<span class="number">1</span>],<span class="number">50</span>) </span><br><span class="line">datairis = iris[random,]</span><br><span class="line">datairis$Species=<span class="literal">NULL</span></span><br><span class="line">datairis</span><br><span class="line"><span class="comment">#     Sepal.Length Sepal.Width Petal.Length Petal.Width</span></span><br><span class="line"><span class="comment"># 137          6.3         3.4          5.6         2.4</span></span><br><span class="line"><span class="comment"># 5            5.0         3.6          1.4         0.2</span></span><br><span class="line"><span class="comment"># 122          5.6         2.8          4.9         2.0</span></span><br><span class="line"><span class="comment"># 27           5.0         3.4          1.6         0.4</span></span><br><span class="line"><span class="comment"># 40           5.1         3.4          1.5         0.2</span></span><br><span class="line"><span class="comment"># 140          6.9         3.1          5.4         2.1</span></span><br><span class="line"><span class="comment"># 12           4.8         3.4          1.6         0.2</span></span><br><span class="line"><span class="comment"># 116          6.4         3.2          5.3         2.3</span></span><br><span class="line"><span class="comment"># 66           6.7         3.1          4.4         1.4</span></span><br></pre></td></tr></table></figure><h1 id="plot-hierarchical-clustering"><a href="#plot-hierarchical-clustering" class="headerlink" title="plot hierarchical clustering"></a>plot hierarchical clustering</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hcluster&lt;-hclust(dist(datairis),method=<span class="string">"ave"</span>)</span><br><span class="line">hcluster</span><br><span class="line">plot(hcluster,hang=-<span class="number">1</span>) <span class="comment"># hang:Thefractionoftheplotheightbywhichlabelsshouldhangbelowtherestoftheplot.Anegativevaluewillcausethelabelstohangdownfrom0.</span></span><br></pre></td></tr></table></figure><p><img src="/images/2018-07-24-11-11-17.png" alt=""></p><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iris$Species</span><br><span class="line">plot(hcluster,hang=-<span class="number">1</span>,labels=iris$Species[random])</span><br></pre></td></tr></table></figure><p><img src="/images/2018-07-24-11-12-28.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
            <tag> r language </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R language to cluster image colors by using k-means clustering</title>
      <link href="/post/r_AI_cluster_by_k-means.html"/>
      <url>/post/r_AI_cluster_by_k-means.html</url>
      <content type="html"><![CDATA[<p>description: cluster colors in a flower image through k-means </p><h1 id="downloading-and-reading-image-file"><a href="#downloading-and-reading-image-file" class="headerlink" title="downloading and reading image file"></a>downloading and reading image file</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(<span class="string">"jpeg"</span>)</span><br><span class="line">imageurl&lt;-<span class="string">"https://thumbs-prod.si-cdn.com/WRp3AC1A1q3d4_lCe_fzfMmIu0o=/256x256/https://public-media.smithsonianmag.com/accounts/avatars/IMG_E1531.JPG"</span></span><br><span class="line">dFile &lt;- download.file(imageurl, <span class="string">"lotus.jpg"</span>) <span class="comment"># download file to workspace</span></span><br><span class="line">img &lt;- readJPEG(<span class="string">"lotus.jpg"</span>) <span class="comment"># read local image</span></span><br></pre></td></tr></table></figure><h1 id="processing-image-data"><a href="#processing-image-data" class="headerlink" title="processing image data"></a>processing image data</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">imgDm &lt;- dim(img)</span><br><span class="line">imgDm <span class="comment"># [1]  879 1200    3</span></span><br><span class="line">imgRGB &lt;- data.frame(</span><br><span class="line">  x = rep(<span class="number">1</span>:imgDm[<span class="number">2</span>], each = imgDm[<span class="number">1</span>]), </span><br><span class="line">  y = rep(imgDm[<span class="number">1</span>]:<span class="number">1</span>, imgDm[<span class="number">2</span>]), </span><br><span class="line">  R = as.vector(img[,,<span class="number">1</span>]),</span><br><span class="line">  G = as.vector(img[,,<span class="number">2</span>]),</span><br><span class="line">  B = as.vector(img[,,<span class="number">3</span>])</span><br><span class="line">)</span><br><span class="line">imgRGB <span class="comment"># X 1 y 879 R .. G .. B ..</span></span><br></pre></td></tr></table></figure><h1 id="set-a-theme-for-drawing-the-image"><a href="#set-a-theme-for-drawing-the-image" class="headerlink" title="set a theme for drawing the image"></a>set a theme for drawing the image</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(ggplot2)</span><br><span class="line">plotTheme &lt;- <span class="keyword">function</span>()&#123;</span><br><span class="line">  theme(</span><br><span class="line">    panel.background = element_rect(</span><br><span class="line">      size = <span class="number">3</span>,</span><br><span class="line">      colour = <span class="string">"black"</span>,</span><br><span class="line">      fill = <span class="string">"white"</span></span><br><span class="line">    ),</span><br><span class="line">    axis.ticks = element_line(</span><br><span class="line">      size = <span class="number">2</span></span><br><span class="line">    ),</span><br><span class="line">    panel.grid.major = element_line(</span><br><span class="line">      colour = <span class="string">"gray80"</span>,</span><br><span class="line">      linetype = <span class="string">"dotted"</span></span><br><span class="line">    ),</span><br><span class="line">    panel.grid.minor = element_line(</span><br><span class="line">      colour = <span class="string">"gray90"</span>,</span><br><span class="line">      linetype = <span class="string">"dashed"</span></span><br><span class="line">    ),</span><br><span class="line">    axis.title.x = element_text(</span><br><span class="line">      size = rel(<span class="number">1.2</span>),</span><br><span class="line">      face = <span class="string">"bold"</span></span><br><span class="line">    ),</span><br><span class="line">    axis.title.y = element_text(</span><br><span class="line">      size = rel(<span class="number">1.2</span>),</span><br><span class="line">      face = <span class="string">"bold"</span></span><br><span class="line">    ),</span><br><span class="line">    plot.title = element_text(</span><br><span class="line">      size = <span class="number">20</span>,</span><br><span class="line">      face = <span class="string">"bold"</span>,</span><br><span class="line">      vjust = <span class="number">1.5</span></span><br><span class="line">    )</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="image-clustering-using-K-means-clustering"><a href="#image-clustering-using-K-means-clustering" class="headerlink" title="image clustering using K-means clustering"></a>image clustering using K-means clustering</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">kClusters &lt;- <span class="number">3</span> </span><br><span class="line">kMeans &lt;- kmeans(imgRGB[,c(<span class="string">"R"</span>,<span class="string">"G"</span>,<span class="string">"B"</span>)], centers  = kCluster)</span><br><span class="line">kColours &lt;- rgb(kMeans$centers[kMeans$cluster,])</span><br><span class="line"></span><br><span class="line">ggplot(data = imgRGB, aes(x = x, y = y)) +</span><br><span class="line">  geom_point(colour = kColours) + </span><br><span class="line">  labs(title = paste(<span class="string">"k-Means Clustering of"</span>, kClusters, <span class="string">"Colours"</span>)) + </span><br><span class="line">  xlab(<span class="string">"x"</span>) + </span><br><span class="line">  ylab(<span class="string">"y"</span>) + </span><br><span class="line">  plotTheme()</span><br></pre></td></tr></table></figure><p><img src="/images/2018-07-24-10-52-38.png" alt=""></p><h1 id="outcome"><a href="#outcome" class="headerlink" title="outcome"></a>outcome</h1><p><img src="/images/2018-07-24-10-54-06.png" alt=""></p>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
            <tag> r language </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>R language to build ANN network for wine data</title>
      <link href="/post/r_AI_ann_for_wine_data.html"/>
      <url>/post/r_AI_ann_for_wine_data.html</url>
      <content type="html"><![CDATA[<p>description: build ANN network from wine data in r language</p><h1 id="read-table-data"><a href="#read-table-data" class="headerlink" title="read table data"></a>read table data</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wine &lt;- read.table(<span class="string">"https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data"</span>,</span><br><span class="line">    sep=<span class="string">","</span>, <span class="comment"># 分隔符为 , comma</span></span><br><span class="line">    col.names=c(<span class="string">"Type"</span>,<span class="string">"Alcohol"</span>,<span class="string">"Malic"</span>,<span class="string">"Ash"</span>,<span class="string">"Alcalinity"</span>,<span class="string">"Magnesium"</span>,<span class="string">"Phenols"</span>,<span class="string">"Flavanoids"</span>,<span class="string">"Nonflavanoids"</span>,<span class="string">"Proanthocyanins"</span>,<span class="string">"Color"</span>,<span class="string">"Hue"</span>,<span class="string">"Dilution"</span>,<span class="string">"Proline"</span>)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h1 id="preview-data"><a href="#preview-data" class="headerlink" title="preview data"></a>preview data</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">print(wine)</span><br><span class="line"><span class="comment">#     Type Alcohol Malic  Ash Alcalinity Magnesium Phenols Flavanoids</span></span><br><span class="line"><span class="comment"># 1      1   14.23  1.71 2.43       15.6       127    2.80       3.06</span></span><br><span class="line"><span class="comment"># 2      1   13.20  1.78 2.14       11.2       100    2.65       2.76</span></span><br><span class="line"><span class="comment"># 3      1   13.16  2.36 2.67       18.6       101    2.80       3.24</span></span><br><span class="line"><span class="comment"># 4      1   14.37  1.95 2.50       16.8       113    3.85       3.49</span></span><br><span class="line"><span class="comment"># 5      1   13.24  2.59 2.87       21.0       118    2.80       2.69</span></span><br><span class="line"><span class="comment"># ....</span></span><br><span class="line"></span><br><span class="line">print(nrow(wine))</span><br><span class="line"><span class="comment"># [1] 178</span></span><br><span class="line"></span><br><span class="line">print(ncol(wine))</span><br><span class="line"><span class="comment"># [1] 14</span></span><br><span class="line"></span><br><span class="line">print(summary(wine))</span><br><span class="line"><span class="comment">#       Type          Alcohol          Malic            Ash       </span></span><br><span class="line"><span class="comment">#  Min.   :1.000   Min.   :11.03   Min.   :0.740   Min.   :1.360  </span></span><br><span class="line"><span class="comment">#  1st Qu.:1.000   1st Qu.:12.36   1st Qu.:1.603   1st Qu.:2.210  </span></span><br><span class="line"><span class="comment">#  Median :2.000   Median :13.05   Median :1.865   Median :2.360  </span></span><br><span class="line"><span class="comment">#  Mean   :1.938   Mean   :13.00   Mean   :2.336   Mean   :2.367 </span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><h1 id="attribute-to-categorical-data"><a href="#attribute-to-categorical-data" class="headerlink" title="attribute to categorical data"></a>attribute to categorical data</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wine$Type=factor(wine$Type)</span><br><span class="line">print(summary(wine))</span><br><span class="line"><span class="comment"># Type      Alcohol          Malic            Ash          Alcalinity   </span></span><br><span class="line"><span class="comment">#  1:59   Min.   :11.03   Min.   :0.740   Min.   :1.360   Min.   :10.60  </span></span><br><span class="line"><span class="comment">#  2:71   1st Qu.:12.36   1st Qu.:1.603   1st Qu.:2.210   1st Qu.:17.20  </span></span><br><span class="line"><span class="comment">#  3:48   Median :13.05   Median :1.865   Median :2.360   Median :19.50  </span></span><br><span class="line"><span class="comment">#         Mean   :13.00   Mean   :2.336   Mean   :2.367   Mean   :19.49  </span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><h1 id="data-pre-processing-and-transformation"><a href="#data-pre-processing-and-transformation" class="headerlink" title="data pre-processing and transformation"></a>data pre-processing and transformation</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">wine.scale &lt;- cbind(wine[<span class="number">1</span>], scale(wine[-<span class="number">1</span>]))</span><br><span class="line">print(summary(wine.scale))</span><br><span class="line">apply(wine.scale[-<span class="number">1</span>], <span class="number">2</span>, sd)</span><br><span class="line"><span class="comment">#  Type      Alcohol             Malic              Ash          </span></span><br><span class="line"><span class="comment">#  1:59   Min.   :-2.42739   Min.   :-1.4290   Min.   :-3.66881  </span></span><br><span class="line"><span class="comment">#  2:71   1st Qu.:-0.78603   1st Qu.:-0.6569   1st Qu.:-0.57051  </span></span><br><span class="line"><span class="comment">#  3:48   Median : 0.06083   Median :-0.4219   Median :-0.02375  </span></span><br><span class="line"><span class="comment">#         Mean   : 0.00000   Mean   : 0.0000   Mean   : 0.00000  </span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><h1 id="partitioning-the-data-into-training-and-test-data"><a href="#partitioning-the-data-into-training-and-test-data" class="headerlink" title="partitioning the data into training and test data"></a>partitioning the data into training and test data</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">data.size &lt;- nrow(wine.scale) </span><br><span class="line">set.seed(<span class="number">1111</span>) </span><br><span class="line">samp &lt;- c(sample(<span class="number">1</span>:data.size, data.size*<span class="number">0.7</span>))</span><br><span class="line">data.tr &lt;- wine.scale[samp, ]</span><br><span class="line">data.test &lt;- wine.scale[-samp, ]</span><br><span class="line"></span><br><span class="line">summary(data.tr)</span><br><span class="line">summary(data.test)</span><br></pre></td></tr></table></figure><h1 id="data-mining-using-a-neural-Network-classification-technique"><a href="#data-mining-using-a-neural-Network-classification-technique" class="headerlink" title="data mining using a neural Network classification technique"></a>data mining using a neural Network classification technique</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">library</span>(nnet)</span><br><span class="line">model.nnet &lt;- nnet(Type ~ ., </span><br><span class="line">                   data = data.tr,</span><br><span class="line">                   size=<span class="number">2</span>, <span class="comment"># 2 level </span></span><br><span class="line">                   decay=<span class="number">5e-04</span>,</span><br><span class="line">                   maxit=<span class="number">200</span>) <span class="comment"># stopped after 200 iterations</span></span><br><span class="line">summary(model.nnet)</span><br><span class="line"><span class="comment"># initial  value 164.152084 </span></span><br><span class="line"><span class="comment"># iter  10 value 7.066118</span></span><br><span class="line"><span class="comment"># iter  20 value 1.286566</span></span><br><span class="line"><span class="comment"># iter  30 value 0.542334</span></span><br><span class="line"><span class="comment"># iter  40 value 0.444873</span></span><br><span class="line"><span class="comment"># ...</span></span><br></pre></td></tr></table></figure><h1 id="pattern-model-evaluation"><a href="#pattern-model-evaluation" class="headerlink" title="pattern (model) evaluation"></a>pattern (model) evaluation</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">predicted &lt;- predict(model.nnet,</span><br><span class="line">                     data.test,</span><br><span class="line">                     type=<span class="string">"class"</span>)</span><br><span class="line">predicted</span><br><span class="line"></span><br><span class="line">actual &lt;- data.test$Type</span><br><span class="line">model.confusion.matrix &lt;- table(actual, predicted)</span><br><span class="line">model.confusion.matrix </span><br><span class="line"></span><br><span class="line">confusion.matrix.rate = prop.table(model.confusion.matrix) * <span class="number">100</span></span><br><span class="line">round(confusion.matrix.rate, digit=<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">diag.index &lt;- cbind(<span class="number">1</span>:<span class="number">3</span>, <span class="number">1</span>:<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">error.overall = sum(confusion.matrix.rate) - sum(confusion.matrix.rate[diag.index])</span><br><span class="line">paste(<span class="string">"Error Rate ="</span>, round(error.overall, digit=<span class="number">2</span>), <span class="string">"%"</span>)</span><br></pre></td></tr></table></figure><h1 id="Data-mining-Task-using-a-nearest-neighbour-approach"><a href="#Data-mining-Task-using-a-nearest-neighbour-approach" class="headerlink" title="Data mining Task using a nearest neighbour approach"></a>Data mining Task using a nearest neighbour approach</h1><figure class="highlight r"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">P1=c(<span class="number">1</span>,<span class="number">3</span>) </span><br><span class="line">P2=c(<span class="number">2</span>,<span class="number">4</span>)</span><br><span class="line">P3=c(<span class="number">6</span>,<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">N1=c(<span class="number">2</span>,<span class="number">1</span>) </span><br><span class="line">N2=c(<span class="number">5</span>,<span class="number">3</span>)</span><br><span class="line">N3=c(<span class="number">6</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">train=rbind(P1,P2,P3,N1,N2,N3) <span class="comment"># build the classification matrix </span></span><br><span class="line">plot(train)</span><br><span class="line"></span><br><span class="line">class=factor(c(rep(<span class="string">"lover"</span>,<span class="number">3</span>),rep(<span class="string">"hater"</span>,<span class="number">3</span>))) <span class="comment"># [1] lover lover lover hater hater hater</span></span><br><span class="line">class</span><br><span class="line"></span><br><span class="line">test=c(<span class="number">1</span>,<span class="number">4</span>) <span class="comment"># testing data to be classified </span></span><br><span class="line">test <span class="comment"># 1 4 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">library</span>(class)</span><br><span class="line">summary(knn(train, test, class, k=<span class="number">3</span>)) <span class="comment"># hater 0 lover 1</span></span><br><span class="line"></span><br><span class="line">test=c(<span class="number">6</span>,<span class="number">4</span>)</span><br><span class="line">summary(knn(train, test, class, k=<span class="number">3</span>)) <span class="comment"># hater 1 lover 0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
            <tag> r language </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python numpy datetime64 today</title>
      <link href="/post/python_timedelta_days.html"/>
      <url>/post/python_timedelta_days.html</url>
      <content type="html"><![CDATA[<h1 id="python-numpy-datetime64-today"><a href="#python-numpy-datetime64-today" class="headerlink" title="python numpy datetime64 today"></a>python numpy datetime64 today</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> datetime</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>today = np.datetime64(datetime.datetime.now())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>today</span><br><span class="line">numpy.datetime64(<span class="string">'2018-07-12T19:12:39.167044'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>past = np.datetime64(<span class="string">'2018-01-01'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>past</span><br><span class="line">numpy.datetime64(<span class="string">'2018-01-01'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif = today - past</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif</span><br><span class="line">numpy.timedelta64(<span class="number">16657959167044</span>,<span class="string">'us'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif = np.timedelta64(dif, <span class="string">'D'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif</span><br><span class="line">numpy.timedelta64(<span class="number">192</span>,<span class="string">'D'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dif.astype(int)</span><br><span class="line"><span class="number">192</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> timedelta </tag>
            
            <tag> datetime64 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python timedelta to seconds</title>
      <link href="/post/python_timedelta%20_to_seconds.html"/>
      <url>/post/python_timedelta%20_to_seconds.html</url>
      <content type="html"><![CDATA[<h1 id="python-timedelta-to-seconds"><a href="#python-timedelta-to-seconds" class="headerlink" title="python timedelta to seconds"></a>python timedelta to seconds</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np </span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line">today = np.datetime64(datetime.datetime.today())</span><br><span class="line">today</span><br><span class="line"><span class="comment"># numpy.datetime64('2018-07-12T19:28:08.889374')</span></span><br><span class="line"></span><br><span class="line">past = np.datetime64(<span class="string">'2018-07-11'</span>)</span><br><span class="line">past</span><br><span class="line"><span class="comment"># numpy.datetime64('2018-07-11')</span></span><br><span class="line"></span><br><span class="line">dif = today - past</span><br><span class="line">dif</span><br><span class="line"><span class="comment"># numpy.timedelta64(156488889374,'us')</span></span><br><span class="line"></span><br><span class="line">dif.astype(int)</span><br><span class="line"><span class="comment"># 1870066718</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> timedelta </tag>
            
            <tag> datetime64 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python parse string into datetime</title>
      <link href="/post/python_string_to_datetime.html"/>
      <url>/post/python_string_to_datetime.html</url>
      <content type="html"><![CDATA[<p>description: python parse string into datetime</p><h1 id="parse-string-into-datetime"><a href="#parse-string-into-datetime" class="headerlink" title="parse string into datetime"></a>parse string into datetime</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime </span><br><span class="line">datetime.datetime.strptime(<span class="string">'2018-01-01'</span>, <span class="string">"%Y-%m-%d"</span>)</span><br><span class="line"><span class="comment"># datetime.datetime(2018, 1, 1, 0, 0)</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python print format string example</title>
      <link href="/post/python_format_string_output.html"/>
      <url>/post/python_format_string_output.html</url>
      <content type="html"><![CDATA[<p>description: python print format string example</p><h1 id="python-Using-and-format-for-formating-print-output"><a href="#python-Using-and-format-for-formating-print-output" class="headerlink" title="python Using % and .format() for formating print output"></a>python Using % and .format() for formating print output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">60</span>):</span><br><span class="line">    interaction = <span class="string">'%s'</span> % (<span class="string">'#'</span> *i)</span><br><span class="line">    print(<span class="string">'\r&#123;&#125;'</span>.format(interaction), end=<span class="string">''</span>)</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line"><span class="comment"># #############...</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python extract columns from dataframe</title>
      <link href="/post/python_extract_columns.html"/>
      <url>/post/python_extract_columns.html</url>
      <content type="html"><![CDATA[<p>description: pandas select columns by name</p><h1 id="python-select-columns-from-dataframe-by-name"><a href="#python-select-columns-from-dataframe-by-name" class="headerlink" title="python select columns from dataframe by name"></a>python select columns from dataframe by name</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas </span><br><span class="line">d = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>]], columns=[<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>])</span><br><span class="line"><span class="comment"># d</span></span><br><span class="line"><span class="comment">#    a  b  c  d</span></span><br><span class="line"><span class="comment"># 0  1  2  3  4</span></span><br><span class="line">d2 = d[[<span class="string">'b'</span>,<span class="string">'c'</span>]]</span><br><span class="line"><span class="comment"># d2</span></span><br><span class="line"><span class="comment">#    b  c</span></span><br><span class="line"><span class="comment"># 0  2  3</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python add one day to a date</title>
      <link href="/post/python_datetime_add_day.html"/>
      <url>/post/python_datetime_add_day.html</url>
      <content type="html"><![CDATA[<p>description: python add one day to a date </p><h1 id="python-datetime-date-add-one-day"><a href="#python-datetime-date-add-one-day" class="headerlink" title="python datetime date add one day"></a>python datetime date add one day</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">d = datetime.datetime.strptime(<span class="string">'2018-02-01'</span>, <span class="string">'%Y-%m-%d'</span>)</span><br><span class="line"><span class="comment"># d</span></span><br><span class="line"><span class="comment"># datetime.datetime(2018, 2, 1, 0, 0)</span></span><br><span class="line">d + datetime.timedelta(days=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># datetime.datetime(2018, 2, 2, 0, 0)</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> date </tag>
            
            <tag> datetime </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python resign headers to a dataframe</title>
      <link href="/post/python_dataframe_resign_headers.html"/>
      <url>/post/python_dataframe_resign_headers.html</url>
      <content type="html"><![CDATA[<p>description: python pandas rename or change column names</p><h1 id="python-rename-column-headers"><a href="#python-rename-column-headers" class="headerlink" title="python rename column headers"></a>python rename column headers</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas </span><br><span class="line">d1 = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]])</span><br><span class="line"><span class="comment"># d1</span></span><br><span class="line"><span class="comment">#    0  1  2</span></span><br><span class="line"><span class="comment"># 0  1  2  3</span></span><br><span class="line"></span><br><span class="line">d2 = pandas.DataFrame(d1.values, columns = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>])</span><br><span class="line"><span class="comment"># d2</span></span><br><span class="line"><span class="comment">#    a  b  c</span></span><br><span class="line"><span class="comment"># 0  1  2  3</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python change dataframe column into set and loop the set</title>
      <link href="/post/python_dataframe_loop_set.html"/>
      <url>/post/python_dataframe_loop_set.html</url>
      <content type="html"><![CDATA[<p>description: change dataframe column into set and iterate</p><h1 id="change-dataframe-column-into-a-set"><a href="#change-dataframe-column-into-a-set" class="headerlink" title="change dataframe column into a set"></a>change dataframe column into a set</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">a = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>]], columns=[<span class="string">'a'</span>,<span class="string">'b'</span>])</span><br><span class="line"><span class="comment"># a</span></span><br><span class="line"><span class="comment">#    a  b</span></span><br><span class="line"><span class="comment"># 0  1  2</span></span><br><span class="line"><span class="comment"># 1  2  3</span></span><br><span class="line">b = a[<span class="string">'a'</span>].unique()</span><br><span class="line"><span class="comment"># b</span></span><br><span class="line"><span class="comment"># array([1, 2, 4], dtype=int64)</span></span><br><span class="line">b = set(b)</span><br><span class="line"><span class="comment"># b</span></span><br><span class="line"><span class="comment"># &#123;1, 2, 4&#125;</span></span><br></pre></td></tr></table></figure><h1 id="iterate-dataframe-column-set"><a href="#iterate-dataframe-column-set" class="headerlink" title="iterate dataframe column set"></a>iterate dataframe column set</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> b:</span><br><span class="line">    print(item)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><h1 id="combine-into-a-single-code"><a href="#combine-into-a-single-code" class="headerlink" title="combine into a single code"></a>combine into a single code</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> a[<span class="string">'a'</span>].unique():</span><br><span class="line">    print(item)</span><br><span class="line"><span class="comment"># 1</span></span><br><span class="line"><span class="comment"># 2</span></span><br><span class="line"><span class="comment"># 4</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python iterate or loop each row of a dataframe</title>
      <link href="/post/python_dataframe_loop_rows.html"/>
      <url>/post/python_dataframe_loop_rows.html</url>
      <content type="html"><![CDATA[<p>description: python iterate a dataframe </p><h1 id="loop-each-row-of-a-dataframe"><a href="#loop-each-row-of-a-dataframe" class="headerlink" title="loop each row of a dataframe"></a>loop each row of a dataframe</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line">data = pandas.DataFrame([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> data.values:</span><br><span class="line">    print(row)</span><br><span class="line"><span class="comment"># output </span></span><br><span class="line"><span class="comment"># [1 2 3]</span></span><br><span class="line"><span class="comment"># [4 5 6]</span></span><br><span class="line"><span class="comment"># [7 8 9]</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python assign value of dataframe by conditions</title>
      <link href="/post/python_assign_value_conditionally.html"/>
      <url>/post/python_assign_value_conditionally.html</url>
      <content type="html"><![CDATA[<p>description: python assign or set value if conditions match </p><h1 id="python-assign-or-set-value-based-on-conditions"><a href="#python-assign-or-set-value-based-on-conditions" class="headerlink" title="python assign or set value based on conditions"></a>python assign or set value based on conditions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas</span><br><span class="line"></span><br><span class="line">data = pandas.DataFrame(&#123;<span class="string">"test"</span>: [<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>], <span class="string">"a"</span>: [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>], <span class="string">"b"</span>: [<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>]&#125;)</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 0    10  1  0</span></span><br><span class="line"><span class="comment"># 1    20  1  2</span></span><br><span class="line"><span class="comment"># 2    30  1  2</span></span><br><span class="line"><span class="comment"># 3    40  2  2</span></span><br></pre></td></tr></table></figure><h1 id="filter-the-data-with-condtion-1"><a href="#filter-the-data-with-condtion-1" class="headerlink" title="filter the data with condtion 1"></a>filter the data with condtion 1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tmp = data[data[<span class="string">"a"</span>] == <span class="number">1</span>]</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 0    10  1  0</span></span><br><span class="line"><span class="comment"># 1    20  1  2</span></span><br><span class="line"><span class="comment"># 2    30  1  2</span></span><br></pre></td></tr></table></figure><h1 id="filter-the-data-with-condition-2"><a href="#filter-the-data-with-condition-2" class="headerlink" title="filter the data with condition 2"></a>filter the data with condition 2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tmp = tmp[tmp[<span class="string">"b"</span>] == <span class="number">2</span>]</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 1    20  1  2</span></span><br><span class="line"><span class="comment"># 2    30  1  2</span></span><br></pre></td></tr></table></figure><h1 id="get-the-index-of-the-data"><a href="#get-the-index-of-the-data" class="headerlink" title="get the index of the data"></a>get the index of the data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">indexes = tmp.index</span><br><span class="line"><span class="comment"># Int64Index([1, 2], dtype='int64')</span></span><br></pre></td></tr></table></figure><h1 id="change-values-by-indexes-and-column-name"><a href="#change-values-by-indexes-and-column-name" class="headerlink" title="change values by indexes and column name"></a>change values by indexes and column name</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">data._set_value(indexes, <span class="string">'test'</span>, <span class="number">888888</span>)</span><br><span class="line"><span class="comment"># test  a  b</span></span><br><span class="line"><span class="comment"># 0      10  1  0</span></span><br><span class="line"><span class="comment"># 1  888888  1  2</span></span><br><span class="line"><span class="comment"># 2  888888  1  2</span></span><br><span class="line"><span class="comment"># 3      40  2  2</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> dataframe </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python build small network example for ANN</title>
      <link href="/post/python_AI_small_network_example.html"/>
      <url>/post/python_AI_small_network_example.html</url>
      <content type="html"><![CDATA[<p>description: build small network example in python </p><h1 id="initial-a-network"><a href="#initial-a-network" class="headerlink" title="initial a network"></a>initial a network</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">initialize_network</span><span class="params">(n_inputs, n_hidden, n_outputs)</span>:</span></span><br><span class="line">network = list()</span><br><span class="line">hidden_layer = [&#123;<span class="string">'weights'</span>:[random() <span class="keyword">for</span> i <span class="keyword">in</span> range(n_inputs + <span class="number">1</span>)]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> range(n_hidden)]</span><br><span class="line">network.append(hidden_layer)</span><br><span class="line">output_layer = [&#123;<span class="string">'weights'</span>:[random() <span class="keyword">for</span> i <span class="keyword">in</span> range(n_hidden + <span class="number">1</span>)]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> range(n_outputs)]</span><br><span class="line">network.append(output_layer)</span><br><span class="line"><span class="keyword">return</span> network</span><br></pre></td></tr></table></figure><h1 id="test-network"><a href="#test-network" class="headerlink" title="test network"></a>test network</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">seed(<span class="number">1</span>)</span><br><span class="line">network = initialize_network(<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> layer <span class="keyword">in</span> network:</span><br><span class="line">print(layer)</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[&#123;<span class="string">'weights'</span>: [<span class="number">0.13436424411240122</span>, <span class="number">0.8474337369372327</span>, <span class="number">0.763774618976614</span>]&#125;]</span><br><span class="line">[&#123;<span class="string">'weights'</span>: [<span class="number">0.2550690257394217</span>, <span class="number">0.49543508709194095</span>]&#125;, &#123;<span class="string">'weights'</span>: [<span class="number">0.4494910647887381</span>, <span class="number">0.651592972722763</span>]&#125;]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python create simple MLP in Keras</title>
      <link href="/post/python_AI_simple_MLP_in_Keras.html"/>
      <url>/post/python_AI_simple_MLP_in_Keras.html</url>
      <content type="html"><![CDATA[<p>description: create simple MLP in Keras</p><h1 id="import-packages"><a href="#import-packages" class="headerlink" title="import packages"></a>import packages</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">import</span> numpy</span><br></pre></td></tr></table></figure><h1 id="fix-random-seed-for-reproducibility"><a href="#fix-random-seed-for-reproducibility" class="headerlink" title="fix random seed for reproducibility"></a>fix random seed for reproducibility</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">numpy.random.seed(<span class="number">7</span>)</span><br></pre></td></tr></table></figure><h1 id="load-pima-indians-dataset"><a href="#load-pima-indians-dataset" class="headerlink" title="load pima indians dataset"></a>load pima indians dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataset = numpy.loadtxt(<span class="string">"pima-indians-diabetes.csv"</span>, delimiter=<span class="string">","</span>)</span><br></pre></td></tr></table></figure><h1 id="split-into-input-X-and-output-Y-variables"><a href="#split-into-input-X-and-output-Y-variables" class="headerlink" title="split into input (X) and output (Y) variables"></a>split into input (X) and output (Y) variables</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">X = dataset[:,<span class="number">0</span>:<span class="number">8</span>]</span><br><span class="line">Y = dataset[:,<span class="number">8</span>]</span><br></pre></td></tr></table></figure><h1 id="create-model"><a href="#create-model" class="headerlink" title="create model"></a>create model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">model = Sequential()</span><br><span class="line">model.add(Dense(<span class="number">12</span>, input_dim=<span class="number">8</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(<span class="number">8</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(<span class="number">1</span>, activation=<span class="string">'sigmoid'</span>))</span><br></pre></td></tr></table></figure><h1 id="Compile-model"><a href="#Compile-model" class="headerlink" title="Compile model"></a>Compile model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.compile(loss=<span class="string">'binary_crossentropy'</span>, optimizer=<span class="string">'adam'</span>, metrics=[<span class="string">'accuracy'</span>])</span><br></pre></td></tr></table></figure><h1 id="Fit-the-model"><a href="#Fit-the-model" class="headerlink" title="Fit the model"></a>Fit the model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fit(X, Y, epochs=<span class="number">150</span>, batch_size=<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="evaluate-the-model"><a href="#evaluate-the-model" class="headerlink" title="evaluate the model"></a>evaluate the model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scores = model.evaluate(X, Y)</span><br><span class="line">print(<span class="string">"\n%s: %.2f%%"</span> % (model.metrics_names[<span class="number">1</span>], scores[<span class="number">1</span>]*<span class="number">100</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python simple convolutional neural network for MNIST dataset</title>
      <link href="/post/python_AI_simple_CNN_forMNIST.html"/>
      <url>/post/python_AI_simple_CNN_forMNIST.html</url>
      <content type="html"><![CDATA[<p>description: simple CNN example for MNIST dataset</p><h1 id="import-packages"><a href="#import-packages" class="headerlink" title="import packages"></a>import packages</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">from</span> keras.datasets <span class="keyword">import</span> mnist</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dropout</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Flatten</span><br><span class="line"><span class="keyword">from</span> keras.layers.convolutional <span class="keyword">import</span> Conv2D</span><br><span class="line"><span class="keyword">from</span> keras.layers.convolutional <span class="keyword">import</span> MaxPooling2D</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br><span class="line"><span class="keyword">from</span> keras <span class="keyword">import</span> backend <span class="keyword">as</span> K</span><br><span class="line">K.set_image_dim_ordering(<span class="string">'th'</span>)</span><br></pre></td></tr></table></figure><h1 id="fix-random-seed-for-reproducibility"><a href="#fix-random-seed-for-reproducibility" class="headerlink" title="fix random seed for reproducibility"></a>fix random seed for reproducibility</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">seed = <span class="number">7</span></span><br><span class="line">numpy.random.seed(seed)</span><br></pre></td></tr></table></figure><h1 id="load-data"><a href="#load-data" class="headerlink" title="load data"></a>load data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(X_train, y_train), (X_test, y_test) = mnist.load_data()</span><br><span class="line"><span class="comment"># reshape to be [samples][pixels][width][height]</span></span><br><span class="line">X_train = X_train.reshape(X_train.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>).astype(<span class="string">'float32'</span>)</span><br><span class="line">X_test = X_test.reshape(X_test.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>).astype(<span class="string">'float32'</span>)</span><br></pre></td></tr></table></figure><h1 id="normalize-inputs-from-0-255-to-0-1"><a href="#normalize-inputs-from-0-255-to-0-1" class="headerlink" title="normalize inputs from 0-255 to 0-1"></a>normalize inputs from 0-255 to 0-1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">X_train = X_train / <span class="number">255</span></span><br><span class="line">X_test = X_test / <span class="number">255</span></span><br><span class="line"><span class="comment"># one hot encode outputs</span></span><br><span class="line">y_train = np_utils.to_categorical(y_train)</span><br><span class="line">y_test = np_utils.to_categorical(y_test)</span><br><span class="line">num_classes = y_test.shape[<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h1 id="define-baseline-model"><a href="#define-baseline-model" class="headerlink" title="define baseline model"></a>define baseline model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">baseline_model</span><span class="params">()</span>:</span></span><br><span class="line"><span class="comment"># create model</span></span><br><span class="line">model = Sequential()</span><br><span class="line">model.add(Conv2D(<span class="number">32</span>, (<span class="number">5</span>, <span class="number">5</span>), input_shape=(<span class="number">1</span>, <span class="number">28</span>, <span class="number">28</span>), activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(MaxPooling2D(pool_size=(<span class="number">2</span>, <span class="number">2</span>)))</span><br><span class="line">model.add(Dropout(<span class="number">0.2</span>))</span><br><span class="line">model.add(Flatten())</span><br><span class="line">model.add(Dense(<span class="number">128</span>, activation=<span class="string">'relu'</span>))</span><br><span class="line">model.add(Dense(num_classes, activation=<span class="string">'softmax'</span>))</span><br><span class="line"><span class="comment"># Compile model</span></span><br><span class="line">model.compile(loss=<span class="string">'categorical_crossentropy'</span>, optimizer=<span class="string">'adam'</span>, metrics=[<span class="string">'accuracy'</span>])</span><br><span class="line"><span class="keyword">return</span> model</span><br></pre></td></tr></table></figure><h1 id="define-model"><a href="#define-model" class="headerlink" title="define model"></a>define model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># build the model</span></span><br><span class="line">model = baseline_model()</span><br><span class="line"><span class="comment"># Fit the model</span></span><br><span class="line">model.fit(X_train, y_train, validation_data=(X_test, y_test), epochs=<span class="number">3</span>, batch_size=<span class="number">200</span>, verbose=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># Final evaluation of the model</span></span><br><span class="line">scores = model.evaluate(X_test, y_test, verbose=<span class="number">0</span>)</span><br><span class="line">print(<span class="string">"Baseline Error: %.2f%%"</span> % (<span class="number">100</span>-scores[<span class="number">1</span>]*<span class="number">100</span>))</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Train on <span class="number">60000</span> samples, validate on <span class="number">10000</span> samples</span><br><span class="line"></span><br><span class="line">Epoch <span class="number">1</span>/<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">69</span>s - loss: <span class="number">0.2498</span> - acc: <span class="number">0.9283</span> - val_loss: <span class="number">0.0715</span> - val_acc: <span class="number">0.9803</span></span><br><span class="line"></span><br><span class="line">Epoch <span class="number">2</span>/<span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="number">70</span>s - loss: <span class="number">0.0714</span> - acc: <span class="number">0.9786</span> - val_loss: <span class="number">0.0503</span> - val_acc: <span class="number">0.9833</span></span><br><span class="line"></span><br><span class="line">Epoch <span class="number">3</span>/<span class="number">3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>a example for RL in python</title>
      <link href="/post/python_AI_rl_example.html"/>
      <url>/post/python_AI_rl_example.html</url>
      <content type="html"><![CDATA[<p>description: a small example for reinforcement learning in python</p><h1 id="import-packages-and-set-seed"><a href="#import-packages-and-set-seed" class="headerlink" title="import packages and set seed"></a>import packages and set seed</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">np.random.seed(<span class="number">2</span>)  <span class="comment"># reproducible</span></span><br></pre></td></tr></table></figure><h1 id="initial-parameters"><a href="#initial-parameters" class="headerlink" title="initial parameters"></a>initial parameters</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NUMBER_OF_STATES = <span class="number">6</span>   <span class="comment"># the length of the 1 dimensional world </span></span><br><span class="line">ACTIONS = [<span class="string">'left'</span>, <span class="string">'right'</span>]     <span class="comment"># available actions</span></span><br><span class="line">EPSILON = <span class="number">0.9</span>   <span class="comment"># greedy police </span></span><br><span class="line">ALPHA = <span class="number">0.1</span>     <span class="comment"># learning rate</span></span><br><span class="line">GAMMA = <span class="number">0.9</span>    <span class="comment"># discount factor </span></span><br><span class="line">MAX_EPISODES = <span class="number">13</span>   <span class="comment"># maximum episodes</span></span><br><span class="line">FRESH_TIME = <span class="number">0.3</span> <span class="comment"># speed of actions</span></span><br></pre></td></tr></table></figure><h1 id="build-q-table-for-actions"><a href="#build-q-table-for-actions" class="headerlink" title="build q-table for actions"></a>build q-table for actions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_q_table</span><span class="params">(number_of_states, actions)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    just build a table with zero in the beginning</span></span><br><span class="line"><span class="string">    :param number_of_states:</span></span><br><span class="line"><span class="string">    :param actions:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    table = pd.DataFrame(</span><br><span class="line">        np.zeros((number_of_states, len(actions))),     <span class="comment"># q_table initial values</span></span><br><span class="line">        columns=actions,    <span class="comment"># actions's name</span></span><br><span class="line">    )</span><br><span class="line">    <span class="comment"># print(table)    # show table</span></span><br><span class="line">    <span class="keyword">return</span> table</span><br></pre></td></tr></table></figure><h1 id="method-to-take-action"><a href="#method-to-take-action" class="headerlink" title="method to take action"></a>method to take action</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">choose_action</span><span class="params">(state, q_table)</span>:</span></span><br><span class="line">    <span class="comment"># This is how to choose an action</span></span><br><span class="line">    state_actions = q_table.iloc[state, :]</span><br><span class="line">     <span class="comment"># np.random.uniform() is a random Number</span></span><br><span class="line">    <span class="keyword">if</span> (np.random.uniform() &gt; EPSILON) <span class="keyword">or</span> ((state_actions == <span class="number">0</span>).all()):  <span class="comment"># act non-greedy or state-action have no value</span></span><br><span class="line">        action_name = np.random.choice(ACTIONS)</span><br><span class="line">    <span class="keyword">else</span>:   <span class="comment"># act greedy</span></span><br><span class="line">        action_name = state_actions.idxmax()    <span class="comment"># replace argmax to idxmax as argmax means a different function in newer version of pandas</span></span><br><span class="line">    <span class="keyword">return</span> action_name</span><br></pre></td></tr></table></figure><h1 id="define-the-change-of-environment"><a href="#define-the-change-of-environment" class="headerlink" title="define the change of environment"></a>define the change of environment</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_env_feedback</span><span class="params">(Current_State, Current_Action)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    get the result based on the movement, right to +1, left to -1</span></span><br><span class="line"><span class="string">    :param Current_State:</span></span><br><span class="line"><span class="string">    :param Current_Action:</span></span><br><span class="line"><span class="string">    :return: response 1 means End while response 0 means pass</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># This is how agent will interact with the environment</span></span><br><span class="line">    <span class="keyword">if</span> Current_Action == <span class="string">'right'</span>:    <span class="comment"># move right</span></span><br><span class="line">        <span class="keyword">if</span> Current_State == NUMBER_OF_STATES - <span class="number">2</span>:   <span class="comment"># terminate</span></span><br><span class="line">            Next_State = <span class="string">'terminal'</span></span><br><span class="line">            Response = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            Next_State = Current_State + <span class="number">1</span></span><br><span class="line">            Response = <span class="number">0</span></span><br><span class="line">    <span class="keyword">else</span>:   <span class="comment"># move left</span></span><br><span class="line">        Response = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> Current_State == <span class="number">0</span>:</span><br><span class="line">            Next_State = Current_State  <span class="comment"># reach the wall</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            Next_State = Current_State - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> Next_State, Response</span><br></pre></td></tr></table></figure><h1 id="update-environment"><a href="#update-environment" class="headerlink" title="update environment"></a>update environment</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update_env</span><span class="params">(state, episode, step_counter)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    print the screen to the movement</span></span><br><span class="line"><span class="string">    :param state:</span></span><br><span class="line"><span class="string">    :param episode:</span></span><br><span class="line"><span class="string">    :param step_counter:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># This is how environment be updated</span></span><br><span class="line">    env_list = [<span class="string">'-'</span>] * (NUMBER_OF_STATES - <span class="number">1</span>) + [<span class="string">'T'</span>]   <span class="comment"># '---------T' our environment</span></span><br><span class="line">    <span class="keyword">if</span> state == <span class="string">'terminal'</span>:</span><br><span class="line">        interaction = <span class="string">'Episode %s: total_steps = %s'</span> % (episode+<span class="number">1</span>, step_counter)</span><br><span class="line">        print(<span class="string">'\r&#123;&#125;'</span>.format(interaction), end=<span class="string">''</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        print(<span class="string">'\r                                '</span>, end=<span class="string">''</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        env_list[state] = <span class="string">'o'</span></span><br><span class="line">        interaction = <span class="string">''</span>.join(env_list)</span><br><span class="line">        print(<span class="string">'\r&#123;&#125;'</span>.format(interaction), end=<span class="string">''</span>)</span><br><span class="line">        time.sleep(FRESH_TIME)</span><br></pre></td></tr></table></figure><h1 id="main-part-of-RL-loop"><a href="#main-part-of-RL-loop" class="headerlink" title="main part of RL loop"></a>main part of RL loop</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rl</span><span class="params">()</span>:</span></span><br><span class="line">    q_table = build_q_table(NUMBER_OF_STATES, ACTIONS)</span><br><span class="line">    <span class="keyword">for</span> episode <span class="keyword">in</span> range(MAX_EPISODES):</span><br><span class="line">        step_counter = <span class="number">0</span></span><br><span class="line">        current_state = <span class="number">0</span></span><br><span class="line">        is_terminated = <span class="keyword">False</span></span><br><span class="line">        update_env(current_state, episode, step_counter)</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> is_terminated:</span><br><span class="line"></span><br><span class="line">            action = choose_action(current_state, q_table)</span><br><span class="line">            next_state, R = get_env_feedback(current_state, action)  <span class="comment"># take action &amp; get next state and reward</span></span><br><span class="line">            q_predict = q_table.loc[current_state, action]</span><br><span class="line">            <span class="keyword">if</span> next_state != <span class="string">'terminal'</span>:</span><br><span class="line">                q_target = R + GAMMA * q_table.iloc[next_state, :].max()   <span class="comment"># next state is not terminal</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                q_target = R     <span class="comment"># next state is terminal</span></span><br><span class="line">                is_terminated = <span class="keyword">True</span>    <span class="comment"># terminate this episode</span></span><br><span class="line"></span><br><span class="line">            q_table.loc[current_state, action] += ALPHA * (q_target - q_predict)  <span class="comment"># update</span></span><br><span class="line">            current_state = next_state  <span class="comment"># move to next state</span></span><br><span class="line"></span><br><span class="line">            update_env(current_state, episode, step_counter+<span class="number">1</span>)</span><br><span class="line">            step_counter += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> q_table</span><br></pre></td></tr></table></figure><h1 id="run-the-application"><a href="#run-the-application" class="headerlink" title="run the application"></a>run the application</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    q_table = rl()</span><br><span class="line">    print(<span class="string">'\r\nQ-table:\n'</span>)</span><br><span class="line">    print(q_table)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>simplest example of self-build LSTM in python</title>
      <link href="/post/python_AI_LSTM_self_build_example.html"/>
      <url>/post/python_AI_LSTM_self_build_example.html</url>
      <content type="html"><![CDATA[<p>description: simple lstm example tensorflow</p><h1 id="compute-sigmoid-nonlinearity"><a href="#compute-sigmoid-nonlinearity" class="headerlink" title="compute sigmoid nonlinearity"></a>compute sigmoid nonlinearity</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid</span><span class="params">(x)</span>:</span></span><br><span class="line">    output = <span class="number">1</span> / (<span class="number">1</span> + np.exp(-x))</span><br><span class="line">    <span class="keyword">return</span> output</span><br></pre></td></tr></table></figure><h1 id="convert-output-of-sigmoid-function-to-its-derivative"><a href="#convert-output-of-sigmoid-function-to-its-derivative" class="headerlink" title="convert output of sigmoid function to its derivative"></a>convert output of sigmoid function to its derivative</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sigmoid_output_to_derivative</span><span class="params">(output)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> output * (<span class="number">1</span> - output)</span><br></pre></td></tr></table></figure><h1 id="training-dataset-generation"><a href="#training-dataset-generation" class="headerlink" title="training dataset generation"></a>training dataset generation</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">int2binary = &#123;&#125;</span><br><span class="line">binary_dim = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">largest_number = pow(<span class="number">2</span>, binary_dim)</span><br><span class="line"><span class="comment"># generate binary table</span></span><br><span class="line">binary = np.unpackbits(</span><br><span class="line">    np.array([range(largest_number)], dtype=np.uint8).T, axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment"># int + binary array pair</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(largest_number):</span><br><span class="line">    int2binary[i] = binary[i]</span><br></pre></td></tr></table></figure><h1 id="input-variables"><a href="#input-variables" class="headerlink" title="input variables"></a>input variables</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">alpha = <span class="number">0.1</span></span><br><span class="line">input_dim = <span class="number">2</span></span><br><span class="line">hidden_dim = <span class="number">16</span></span><br><span class="line">output_dim = <span class="number">1</span></span><br></pre></td></tr></table></figure><h1 id="initialize-neural-network-weights"><a href="#initialize-neural-network-weights" class="headerlink" title="initialize neural network weights"></a>initialize neural network weights</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">synapse_0 = <span class="number">2</span> * np.random.random((input_dim, hidden_dim)) - <span class="number">1</span> </span><br><span class="line">synapse_1 = <span class="number">2</span> * np.random.random((hidden_dim, output_dim)) - <span class="number">1</span></span><br><span class="line">synapse_h = <span class="number">2</span> * np.random.random((hidden_dim, hidden_dim)) - <span class="number">1</span> </span><br><span class="line"></span><br><span class="line">synapse_0_update = np.zeros_like(synapse_0)</span><br><span class="line">synapse_1_update = np.zeros_like(synapse_1) </span><br><span class="line">synapse_h_update = np.zeros_like(synapse_h)</span><br></pre></td></tr></table></figure><h1 id="training-logic-训练的次数"><a href="#training-logic-训练的次数" class="headerlink" title="training logic # 训练的次数"></a>training logic # 训练的次数</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># generate a simple addition problem (a + b = c)</span></span><br><span class="line">    a_int = np.random.randint(largest_number / <span class="number">2</span>)  <span class="comment"># int version</span></span><br><span class="line">    a = int2binary[a_int]  <span class="comment"># binary encoding like a: [0, 0, 0, 0, 1, 0, 0, 1]</span></span><br><span class="line"></span><br><span class="line">    b_int = np.random.randint(largest_number / <span class="number">2</span>)  <span class="comment"># int version</span></span><br><span class="line">    b = int2binary[b_int]  <span class="comment"># binary encoding like b: [0, 0, 1, 1, 1, 1, 0, 0]</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># true answer</span></span><br><span class="line">    c_int = a_int + b_int</span><br><span class="line">    c = int2binary[c_int]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># where we'll store our best guess (binary encoded)</span></span><br><span class="line">    d = np.zeros_like(c)  <span class="comment"># like [0, 0, 0, 0, 0, 0, 0, 0]</span></span><br><span class="line"></span><br><span class="line">    overallError = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    layer_2_deltas = list()</span><br><span class="line">    layer_1_values = list()  <span class="comment"># restore hidden layer for next timestep</span></span><br><span class="line">    layer_1_values.append(np.zeros(hidden_dim))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># moving along the positions in the binary encoding</span></span><br><span class="line">    <span class="keyword">for</span> position <span class="keyword">in</span> range(binary_dim):</span><br><span class="line">        <span class="comment"># generate input and output</span></span><br><span class="line">        X = np.array([[a[binary_dim - position - <span class="number">1</span>], b[binary_dim - position - <span class="number">1</span>]]])  <span class="comment"># like [[1, 0]]</span></span><br><span class="line">        y = np.array([[c[binary_dim - position - <span class="number">1</span>]]]).T  <span class="comment"># [[1]] </span></span><br><span class="line">        <span class="comment"># hidden layer (input ~+ prev_hidden) </span></span><br><span class="line">        layer_1 = sigmoid(np.dot(X, synapse_0) + np.dot(layer_1_values[<span class="number">-1</span>], synapse_h))</span><br><span class="line"></span><br><span class="line">        <span class="comment"># output layer (new binary representation) </span></span><br><span class="line">        layer_2 = sigmoid(np.dot(layer_1, synapse_1)) </span><br><span class="line">        <span class="comment"># calculate the difference and error</span></span><br><span class="line">        layer_2_error = y - layer_2</span><br><span class="line">        layer_2_deltas.append((layer_2_error) * sigmoid_output_to_derivative(layer_2)) </span><br><span class="line">        overallError += np.abs(layer_2_error[<span class="number">0</span>]) </span><br><span class="line">        <span class="comment"># decode estimate so we can print it out</span></span><br><span class="line">        d[binary_dim - position - <span class="number">1</span>] = np.round(layer_2[<span class="number">0</span>][<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># store hidden layer so we can use it in the next timestep</span></span><br><span class="line">        layer_1_values.append(copy.deepcopy(layer_1))</span><br><span class="line"></span><br><span class="line">    future_layer_1_delta = np.zeros(hidden_dim)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># update weights</span></span><br><span class="line">    <span class="keyword">for</span> position <span class="keyword">in</span> range(binary_dim):  </span><br><span class="line">        X = np.array([[a[position], b[position]]])</span><br><span class="line">        layer_1 = layer_1_values[-position - <span class="number">1</span>]</span><br><span class="line">        prev_layer_1 = layer_1_values[-position - <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># error at output layer</span></span><br><span class="line">        layer_2_delta = layer_2_deltas[-position - <span class="number">1</span>]</span><br><span class="line">        <span class="comment"># error at hidden layer</span></span><br><span class="line">        layer_1_delta = (future_layer_1_delta.dot(synapse_h.T) + \</span><br><span class="line">                         layer_2_delta.dot(synapse_1.T)) * sigmoid_output_to_derivative(layer_1)</span><br><span class="line">        <span class="comment"># let's update all our weights so we can try again</span></span><br><span class="line">        synapse_1_update += np.atleast_2d(layer_1).T.dot(layer_2_delta)</span><br><span class="line">        synapse_h_update += np.atleast_2d(prev_layer_1).T.dot(layer_1_delta)</span><br><span class="line">        synapse_0_update += X.T.dot(layer_1_delta)</span><br><span class="line"></span><br><span class="line">        future_layer_1_delta = layer_1_delta</span><br><span class="line"></span><br><span class="line">    synapse_0 += synapse_0_update * alpha</span><br><span class="line">    synapse_1 += synapse_1_update * alpha</span><br><span class="line">    synapse_h += synapse_h_update * alpha</span><br><span class="line"></span><br><span class="line">    synapse_0_update *= <span class="number">0</span></span><br><span class="line">    synapse_1_update *= <span class="number">0</span></span><br><span class="line">    synapse_h_update *= <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print out progress</span></span><br><span class="line">    <span class="keyword">if</span> (j % <span class="number">1000</span> == <span class="number">0</span>):</span><br><span class="line">        print(<span class="string">"Error:"</span> + str(overallError))</span><br><span class="line">        print(<span class="string">"Pred:"</span> + str(d))</span><br><span class="line">        print(<span class="string">"True:"</span> + str(c))</span><br><span class="line">        out = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> index, x <span class="keyword">in</span> enumerate(reversed(d)):</span><br><span class="line">            out += x * pow(<span class="number">2</span>, index)</span><br><span class="line">        print(str(a_int) + <span class="string">" + "</span> + str(b_int) + <span class="string">" = "</span> + str(out))</span><br><span class="line">        print(<span class="string">"------------"</span>)</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">Error:[<span class="number">3.45638663</span>]</span><br><span class="line">Pred:[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="number">9</span> + <span class="number">60</span> = <span class="number">1</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">3.63389116</span>]</span><br><span class="line">Pred:[<span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"><span class="number">28</span> + <span class="number">35</span> = <span class="number">255</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">3.91366595</span>]</span><br><span class="line">Pred:[<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"><span class="number">116</span> + <span class="number">44</span> = <span class="number">72</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">3.72191702</span>]</span><br><span class="line">Pred:[<span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="number">4</span> + <span class="number">73</span> = <span class="number">223</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">3.5852713</span>]</span><br><span class="line">Pred:[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line"><span class="number">71</span> + <span class="number">11</span> = <span class="number">8</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">2.53352328</span>]</span><br><span class="line">Pred:[<span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line"><span class="number">81</span> + <span class="number">113</span> = <span class="number">162</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">0.57691441</span>]</span><br><span class="line">Pred:[<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="number">81</span> + <span class="number">0</span> = <span class="number">81</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">1.42589952</span>]</span><br><span class="line">Pred:[<span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span>]</span><br><span class="line"><span class="number">4</span> + <span class="number">125</span> = <span class="number">129</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">0.47477457</span>]</span><br><span class="line">Pred:[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>]</span><br><span class="line"><span class="number">39</span> + <span class="number">17</span> = <span class="number">56</span></span><br><span class="line">------------</span><br><span class="line">Error:[<span class="number">0.21595037</span>]</span><br><span class="line">Pred:[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line"><span class="keyword">True</span>:[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span>]</span><br><span class="line"><span class="number">11</span> + <span class="number">3</span> = <span class="number">14</span></span><br><span class="line">------------</span><br></pre></td></tr></table></figure><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><p><a href="https://blog.csdn.net/zzukun/article/details/49968129" target="_blank" rel="noopener">https://blog.csdn.net/zzukun/article/details/49968129</a></p>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python to use LSTM for predicting words in Txt</title>
      <link href="/post/python_AI_LSTM_for_txt.html"/>
      <url>/post/python_AI_LSTM_for_txt.html</url>
      <content type="html"><![CDATA[<p>description: use LSTM to predict words in Text in python</p><h1 id="import-packages"><a href="#import-packages" class="headerlink" title="import packages"></a>import packages</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dropout</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> LSTM</span><br><span class="line"><span class="keyword">from</span> keras.callbacks <span class="keyword">import</span> ModelCheckpoint</span><br><span class="line"><span class="keyword">from</span> keras.utils <span class="keyword">import</span> np_utils</span><br></pre></td></tr></table></figure><h1 id="load-ascii-text-and-covert-to-lowercase"><a href="#load-ascii-text-and-covert-to-lowercase" class="headerlink" title="load ascii text and covert to lowercase"></a>load ascii text and covert to lowercase</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filename = <span class="string">"wonderland.txt"</span></span><br><span class="line">raw_text = open(filename).read()</span><br><span class="line">raw_text = raw_text.lower()</span><br></pre></td></tr></table></figure><h1 id="create-mapping-of-unique-chars-to-integers"><a href="#create-mapping-of-unique-chars-to-integers" class="headerlink" title="create mapping of unique chars to integers"></a>create mapping of unique chars to integers</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chars = sorted(list(set(raw_text)))</span><br><span class="line">char_to_int = dict((c, i) <span class="keyword">for</span> i, c <span class="keyword">in</span> enumerate(chars))</span><br></pre></td></tr></table></figure><h1 id="summarize-the-loaded-data"><a href="#summarize-the-loaded-data" class="headerlink" title="summarize the loaded data"></a>summarize the loaded data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Total Characters:  147674</span></span><br><span class="line"><span class="comment"># Total Vocab:  47</span></span><br><span class="line">n_chars = len(raw_text)</span><br><span class="line">n_vocab = len(chars)</span><br><span class="line">print(<span class="string">"Total Characters: "</span>, n_chars)</span><br><span class="line">print(<span class="string">"Total Vocab: "</span>, n_vocab)</span><br></pre></td></tr></table></figure><h1 id="split-the-book-text-up-into-subsequences-with-a-fixed-length-of-100-characters"><a href="#split-the-book-text-up-into-subsequences-with-a-fixed-length-of-100-characters" class="headerlink" title="split the book text up into subsequences with a fixed length of 100 characters"></a>split the book text up into subsequences with a fixed length of 100 characters</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">seq_length = <span class="number">100</span></span><br><span class="line">dataX = []</span><br><span class="line">dataY = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, n_chars - seq_length, <span class="number">1</span>):</span><br><span class="line">seq_in = raw_text[i: i+seq_length]</span><br><span class="line">seq_out = raw_text[ i+seq_length ]</span><br><span class="line">dataX.append([char_to_int[char] <span class="keyword">for</span> char <span class="keyword">in</span> seq_in])</span><br><span class="line">dataY.append(char_to_int[seq_out])</span><br><span class="line">n_patterns = len(dataX)</span><br><span class="line"><span class="comment"># Total Patterns:  147574</span></span><br><span class="line">print( <span class="string">"Total Patterns: "</span>, n_patterns)</span><br></pre></td></tr></table></figure><h1 id="reshape-X-to-be-samples-time-steps-features"><a href="#reshape-X-to-be-samples-time-steps-features" class="headerlink" title="reshape X to be [samples, time steps, features]"></a>reshape X to be [samples, time steps, features]</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X = numpy.reshape(dataX, (n_patterns, seq_length, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><h1 id="normalize"><a href="#normalize" class="headerlink" title="normalize"></a>normalize</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">X = X / float(n_vocab)</span><br></pre></td></tr></table></figure><h1 id="one-hot-encode-the-output-variable"><a href="#one-hot-encode-the-output-variable" class="headerlink" title="one hot encode the output variable"></a>one hot encode the output variable</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">y = np_utils.to_categorical(dataY)</span><br></pre></td></tr></table></figure><h1 id="define-the-LSTM-model"><a href="#define-the-LSTM-model" class="headerlink" title="define the LSTM model"></a>define the LSTM model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">model = Sequential()</span><br><span class="line">model.add(LSTM(<span class="number">256</span>, input_shape=(X.shape[<span class="number">1</span>], X.shape[<span class="number">2</span>])))</span><br><span class="line">model.add(Dropout(<span class="number">0.2</span>))</span><br><span class="line"><span class="comment"># y.shape (144312, 47)</span></span><br><span class="line">model.add(Dense(y.shape[<span class="number">1</span>], activation=<span class="string">'softmax'</span>))</span><br><span class="line">model.compile(loss=<span class="string">'categorical_crossentropy'</span>, optimizer=<span class="string">'adam'</span>)</span><br></pre></td></tr></table></figure><h1 id="define-the-checkpoint"><a href="#define-the-checkpoint" class="headerlink" title="define the checkpoint"></a>define the checkpoint</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">filepath=<span class="string">"weights-improvement-&#123;epoch:02d&#125;-&#123;loss:.4f&#125;.hdf5"</span></span><br><span class="line">checkpoint = ModelCheckpoint(filepath, monitor=<span class="string">'loss'</span>, verbose=<span class="number">1</span>, save_best_only=<span class="keyword">True</span>, mode=<span class="string">'min'</span>)</span><br><span class="line">callbacks_list = [checkpoint]</span><br></pre></td></tr></table></figure><h1 id="fit-the-model"><a href="#fit-the-model" class="headerlink" title="fit the model"></a>fit the model</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">model.fit(X, y, epochs=<span class="number">20</span>, batch_size=<span class="number">128</span>, callbacks=callbacks_list)</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python ANN forward Propagate</title>
      <link href="/post/python_AI_forward_propagate.html"/>
      <url>/post/python_AI_forward_propagate.html</url>
      <content type="html"><![CDATA[<h1 id="Calculate-neuron-activation-for-an-input"><a href="#Calculate-neuron-activation-for-an-input" class="headerlink" title="Calculate neuron activation for an input"></a>Calculate neuron activation for an input</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">activate</span><span class="params">(weights, inputs)</span>:</span></span><br><span class="line">activation = weights[<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(weights)<span class="number">-1</span>):</span><br><span class="line">activation += weights[i] * inputs[i]</span><br><span class="line"><span class="keyword">return</span> activation</span><br></pre></td></tr></table></figure><h1 id="Transfer-neuron-activation"><a href="#Transfer-neuron-activation" class="headerlink" title="Transfer neuron activation"></a>Transfer neuron activation</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> exp</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">transfer</span><span class="params">(activation)</span>:</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1.0</span> / (<span class="number">1.0</span> + exp(-activation))</span><br></pre></td></tr></table></figure><h1 id="Forward-propagate-input-to-a-network-output"><a href="#Forward-propagate-input-to-a-network-output" class="headerlink" title="Forward propagate input to a network output"></a>Forward propagate input to a network output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward_propagate</span><span class="params">(network, row)</span>:</span></span><br><span class="line">inputs = row</span><br><span class="line"><span class="keyword">for</span> layer <span class="keyword">in</span> network:</span><br><span class="line">new_inputs = []</span><br><span class="line"><span class="keyword">for</span> neuron <span class="keyword">in</span> layer:</span><br><span class="line">activation = activate(neuron[<span class="string">'weights'</span>], inputs)</span><br><span class="line">neuron[<span class="string">'output'</span>] = transfer(activation)</span><br><span class="line">new_inputs.append(neuron[<span class="string">'output'</span>])</span><br><span class="line">inputs = new_inputs</span><br><span class="line"><span class="keyword">return</span> inputs</span><br></pre></td></tr></table></figure><h1 id="test-forward-propagation"><a href="#test-forward-propagation" class="headerlink" title="test forward propagation"></a>test forward propagation</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">network = [[&#123;<span class="string">'weights'</span>: [<span class="number">0.13436424411240122</span>, <span class="number">0.8474337369372327</span>, <span class="number">0.763774618976614</span>]&#125;],</span><br><span class="line">[&#123;<span class="string">'weights'</span>: [<span class="number">0.2550690257394217</span>, <span class="number">0.49543508709194095</span>]&#125;, &#123;<span class="string">'weights'</span>: [<span class="number">0.4494910647887381</span>, <span class="number">0.651592972722763</span>]&#125;]]</span><br><span class="line">row = [<span class="number">1</span>, <span class="number">0</span>, <span class="keyword">None</span>]</span><br><span class="line">output = forward_propagate(network, row)</span><br><span class="line">print(output)</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0.6629970129852887</span>, <span class="number">0.7253160725279748</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python build Decision Tree on bank note dataset</title>
      <link href="/post/python_AI_DecisionTree_on_BankNoteDataset.html"/>
      <url>/post/python_AI_DecisionTree_on_BankNoteDataset.html</url>
      <content type="html"><![CDATA[<p>description: build Decision Tree from bank note dataset in python</p><h1 id="CART-on-the-Bank-Note-dataset"><a href="#CART-on-the-Bank-Note-dataset" class="headerlink" title="CART on the Bank Note dataset"></a>CART on the Bank Note dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> seed</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randrange</span><br><span class="line"><span class="keyword">from</span> csv <span class="keyword">import</span> reader</span><br></pre></td></tr></table></figure><h1 id="Load-a-CSV-file"><a href="#Load-a-CSV-file" class="headerlink" title="Load a CSV file"></a>Load a CSV file</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_csv</span><span class="params">(filename)</span>:</span></span><br><span class="line">file = open(filename, <span class="string">"r"</span>)</span><br><span class="line">lines = reader(file)</span><br><span class="line">dataset = list(lines)</span><br><span class="line"><span class="keyword">return</span> dataset</span><br></pre></td></tr></table></figure><h1 id="Convert-string-column-to-float"><a href="#Convert-string-column-to-float" class="headerlink" title="Convert string column to float"></a>Convert string column to float</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_column_to_float</span><span class="params">(dataset, column)</span>:</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> dataset:</span><br><span class="line">row[column] = float(row[column].strip())</span><br></pre></td></tr></table></figure><h1 id="Split-a-dataset-into-k-folds"><a href="#Split-a-dataset-into-k-folds" class="headerlink" title="Split a dataset into k folds"></a>Split a dataset into k folds</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cross_validation_split</span><span class="params">(dataset, n_folds)</span>:</span></span><br><span class="line">dataset_split = list()</span><br><span class="line">dataset_copy = list(dataset)</span><br><span class="line">fold_size = int(len(dataset) / n_folds)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(n_folds):</span><br><span class="line">fold = list()</span><br><span class="line"><span class="keyword">while</span> len(fold) &lt; fold_size:</span><br><span class="line">index = randrange(len(dataset_copy))</span><br><span class="line">fold.append(dataset_copy.pop(index))</span><br><span class="line">dataset_split.append(fold)</span><br><span class="line"><span class="keyword">return</span> dataset_split</span><br></pre></td></tr></table></figure><h1 id="Calculate-accuracy-percentage"><a href="#Calculate-accuracy-percentage" class="headerlink" title="Calculate accuracy percentage"></a>Calculate accuracy percentage</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">accuracy_metric</span><span class="params">(actual, predicted)</span>:</span></span><br><span class="line">correct = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(actual)):</span><br><span class="line"><span class="keyword">if</span> actual[i] == predicted[i]:</span><br><span class="line">correct += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> correct / float(len(actual)) * <span class="number">100.0</span></span><br></pre></td></tr></table></figure><h1 id="Evaluate-an-algorithm-using-a-cross-validation-split"><a href="#Evaluate-an-algorithm-using-a-cross-validation-split" class="headerlink" title="Evaluate an algorithm using a cross validation split"></a>Evaluate an algorithm using a cross validation split</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">evaluate_algorithm</span><span class="params">(dataset, algorithm, n_folds, *args)</span>:</span></span><br><span class="line">folds = cross_validation_split(dataset, n_folds)</span><br><span class="line">scores = list()</span><br><span class="line"><span class="keyword">for</span> fold <span class="keyword">in</span> folds:</span><br><span class="line">train_set = list(folds)</span><br><span class="line">train_set.remove(fold)</span><br><span class="line">train_set = sum(train_set, [])</span><br><span class="line">test_set = list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> fold:</span><br><span class="line">row_copy = list(row)</span><br><span class="line">test_set.append(row_copy)</span><br><span class="line">row_copy[<span class="number">-1</span>] = <span class="keyword">None</span></span><br><span class="line">predicted = algorithm(train_set, test_set, *args)</span><br><span class="line">actual = [row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> fold]</span><br><span class="line">accuracy = accuracy_metric(actual, predicted)</span><br><span class="line">scores.append(accuracy)</span><br><span class="line"><span class="keyword">return</span> scores</span><br></pre></td></tr></table></figure><h1 id="Split-a-dataset-based-on-an-attribute-and-an-attribute-value"><a href="#Split-a-dataset-based-on-an-attribute-and-an-attribute-value" class="headerlink" title="Split a dataset based on an attribute and an attribute value"></a>Split a dataset based on an attribute and an attribute value</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test_split</span><span class="params">(index, value, dataset)</span>:</span></span><br><span class="line">left, right = list(), list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> dataset:</span><br><span class="line"><span class="keyword">if</span> row[index] &lt; value:</span><br><span class="line">left.append(row)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">right.append(row)</span><br><span class="line"><span class="keyword">return</span> left, right</span><br></pre></td></tr></table></figure><h1 id="Calculate-the-Gini-index-for-a-split-dataset"><a href="#Calculate-the-Gini-index-for-a-split-dataset" class="headerlink" title="Calculate the Gini index for a split dataset"></a>Calculate the Gini index for a split dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gini_index</span><span class="params">(groups, classes)</span>:</span></span><br><span class="line"><span class="comment"># count all samples at split point</span></span><br><span class="line">n_instances = float(sum([len(group) <span class="keyword">for</span> group <span class="keyword">in</span> groups]))</span><br><span class="line"><span class="comment"># sum weighted Gini index for each group</span></span><br><span class="line">gini = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> group <span class="keyword">in</span> groups:</span><br><span class="line">size = float(len(group))</span><br><span class="line"><span class="comment"># avoid divide by zero</span></span><br><span class="line"><span class="keyword">if</span> size == <span class="number">0</span>:</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">score = <span class="number">0.0</span></span><br><span class="line"><span class="comment"># score the group based on the score for each class</span></span><br><span class="line"><span class="keyword">for</span> class_val <span class="keyword">in</span> classes:</span><br><span class="line">p = [row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> group].count(class_val) / size</span><br><span class="line">score += p * p</span><br><span class="line"><span class="comment"># weight the group score by its relative size</span></span><br><span class="line">gini += (<span class="number">1.0</span> - score) * (size / n_instances)</span><br><span class="line"><span class="keyword">return</span> gini</span><br></pre></td></tr></table></figure><h1 id="Select-the-best-split-point-for-a-dataset"><a href="#Select-the-best-split-point-for-a-dataset" class="headerlink" title="Select the best split point for a dataset"></a>Select the best split point for a dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_split</span><span class="params">(dataset)</span>:</span></span><br><span class="line">class_values = list(set(row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> dataset))</span><br><span class="line">b_index, b_value, b_score, b_groups = <span class="number">999</span>, <span class="number">999</span>, <span class="number">999</span>, <span class="keyword">None</span></span><br><span class="line"><span class="keyword">for</span> index <span class="keyword">in</span> range(len(dataset[<span class="number">0</span>])<span class="number">-1</span>):</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> dataset:</span><br><span class="line">groups = test_split(index, row[index], dataset)</span><br><span class="line">gini = gini_index(groups, class_values)</span><br><span class="line"><span class="keyword">if</span> gini &lt; b_score:</span><br><span class="line">b_index, b_value, b_score, b_groups = index, row[index], gini, groups</span><br><span class="line"><span class="keyword">return</span> &#123;<span class="string">'index'</span>:b_index, <span class="string">'value'</span>:b_value, <span class="string">'groups'</span>:b_groups&#125;</span><br></pre></td></tr></table></figure><h1 id="Create-a-terminal-node-value"><a href="#Create-a-terminal-node-value" class="headerlink" title="Create a terminal node value"></a>Create a terminal node value</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_terminal</span><span class="params">(group)</span>:</span></span><br><span class="line">outcomes = [row[<span class="number">-1</span>] <span class="keyword">for</span> row <span class="keyword">in</span> group]</span><br><span class="line"><span class="keyword">return</span> max(set(outcomes), key=outcomes.count)</span><br></pre></td></tr></table></figure><h1 id="Create-child-splits-for-a-node-or-make-terminal"><a href="#Create-child-splits-for-a-node-or-make-terminal" class="headerlink" title="Create child splits for a node or make terminal"></a>Create child splits for a node or make terminal</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">split</span><span class="params">(node, max_depth, min_size, depth)</span>:</span></span><br><span class="line">left, right = node[<span class="string">'groups'</span>]</span><br><span class="line"><span class="keyword">del</span>(node[<span class="string">'groups'</span>])</span><br><span class="line"><span class="comment"># check for a no split</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> left <span class="keyword">or</span> <span class="keyword">not</span> right:</span><br><span class="line">node[<span class="string">'left'</span>] = node[<span class="string">'right'</span>] = to_terminal(left + right)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="comment"># check for max depth</span></span><br><span class="line"><span class="keyword">if</span> depth &gt;= max_depth:</span><br><span class="line">node[<span class="string">'left'</span>], node[<span class="string">'right'</span>] = to_terminal(left), to_terminal(right)</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line"><span class="comment"># process left child</span></span><br><span class="line"><span class="keyword">if</span> len(left) &lt;= min_size:</span><br><span class="line">node[<span class="string">'left'</span>] = to_terminal(left)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">node[<span class="string">'left'</span>] = get_split(left)</span><br><span class="line">split(node[<span class="string">'left'</span>], max_depth, min_size, depth+<span class="number">1</span>)</span><br><span class="line"><span class="comment"># process right child</span></span><br><span class="line"><span class="keyword">if</span> len(right) &lt;= min_size:</span><br><span class="line">node[<span class="string">'right'</span>] = to_terminal(right)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">node[<span class="string">'right'</span>] = get_split(right)</span><br><span class="line">split(node[<span class="string">'right'</span>], max_depth, min_size, depth+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="Build-a-decision-tree"><a href="#Build-a-decision-tree" class="headerlink" title="Build a decision tree"></a>Build a decision tree</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">build_tree</span><span class="params">(train, max_depth, min_size)</span>:</span></span><br><span class="line">root = get_split(train)</span><br><span class="line">split(root, max_depth, min_size, <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> root</span><br></pre></td></tr></table></figure><h1 id="Make-a-prediction-with-a-decision-tree"><a href="#Make-a-prediction-with-a-decision-tree" class="headerlink" title="Make a prediction with a decision tree"></a>Make a prediction with a decision tree</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">predict</span><span class="params">(node, row)</span>:</span></span><br><span class="line"><span class="keyword">if</span> row[node[<span class="string">'index'</span>]] &lt; node[<span class="string">'value'</span>]:</span><br><span class="line"><span class="keyword">if</span> isinstance(node[<span class="string">'left'</span>], dict):</span><br><span class="line"><span class="keyword">return</span> predict(node[<span class="string">'left'</span>], row)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> node[<span class="string">'left'</span>]</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> isinstance(node[<span class="string">'right'</span>], dict):</span><br><span class="line"><span class="keyword">return</span> predict(node[<span class="string">'right'</span>], row)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">return</span> node[<span class="string">'right'</span>]</span><br></pre></td></tr></table></figure><h1 id="Classification-and-Regression-Tree-Algorithm"><a href="#Classification-and-Regression-Tree-Algorithm" class="headerlink" title="Classification and Regression Tree Algorithm"></a>Classification and Regression Tree Algorithm</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decision_tree</span><span class="params">(train, test, max_depth, min_size)</span>:</span></span><br><span class="line">tree = build_tree(train, max_depth, min_size)</span><br><span class="line">predictions = list()</span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> test:</span><br><span class="line">prediction = predict(tree, row)</span><br><span class="line">predictions.append(prediction)</span><br><span class="line"><span class="keyword">return</span>(predictions)</span><br></pre></td></tr></table></figure><h1 id="Test-CART-on-Bank-Note-dataset"><a href="#Test-CART-on-Bank-Note-dataset" class="headerlink" title="Test CART on Bank Note dataset"></a>Test CART on Bank Note dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">seed(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h1 id="load-and-prepare-data"><a href="#load-and-prepare-data" class="headerlink" title="load and prepare data"></a>load and prepare data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">filename = <span class="string">'data_banknote_authentication.csv'</span></span><br><span class="line">dataset = load_csv(filename)</span><br></pre></td></tr></table></figure><h1 id="convert-string-attributes-to-integers"><a href="#convert-string-attributes-to-integers" class="headerlink" title="convert string attributes to integers"></a>convert string attributes to integers</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(dataset[<span class="number">0</span>])):</span><br><span class="line">str_column_to_float(dataset, i)</span><br></pre></td></tr></table></figure><h1 id="evaluate-algorithm"><a href="#evaluate-algorithm" class="headerlink" title="evaluate algorithm"></a>evaluate algorithm</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">n_folds = <span class="number">5</span></span><br><span class="line">max_depth = <span class="number">5</span></span><br><span class="line">min_size = <span class="number">10</span></span><br><span class="line">scores = evaluate_algorithm(dataset, decision_tree, n_folds, max_depth, min_size)</span><br><span class="line">print(<span class="string">'Scores: %s'</span> % scores)</span><br><span class="line">print(<span class="string">'Mean Accuracy: %.3f%%'</span> % (sum(scores)/float(len(scores))))</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scores: [<span class="number">100.0</span>, <span class="number">100.0</span>, <span class="number">100.0</span>, <span class="number">100.0</span>, <span class="number">100.0</span>]</span><br><span class="line"></span><br><span class="line">Mean Accuracy: <span class="number">100.000</span>%</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python add new column to dataframe with same or different length with pandas</title>
      <link href="/post/python_add_new_column.html"/>
      <url>/post/python_add_new_column.html</url>
      <content type="html"><![CDATA[<p>description: add new column to a dataframe</p><h1 id="initial-data"><a href="#initial-data" class="headerlink" title="initial data"></a>initial data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a = pandas.DataFrame(&#123;<span class="string">'a'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]&#125;)</span><br><span class="line"><span class="comment"># a</span></span><br><span class="line"><span class="comment">#    a</span></span><br><span class="line"><span class="comment"># 0  1</span></span><br><span class="line"><span class="comment"># 1  2</span></span><br><span class="line"><span class="comment"># 2  3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">b = pandas.DataFrame(&#123;<span class="string">'b'</span>:[<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>]&#125;)</span><br><span class="line"><span class="comment"># b</span></span><br><span class="line"><span class="comment">#    b</span></span><br><span class="line"><span class="comment"># 0  2</span></span><br><span class="line"><span class="comment"># 1  4</span></span><br><span class="line"><span class="comment"># 2  6</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">c = pandas.DataFrame(&#123;<span class="string">'c'</span>:[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]&#125;)</span><br><span class="line"><span class="comment"># c</span></span><br><span class="line"><span class="comment">#    c</span></span><br><span class="line"><span class="comment"># 0  1</span></span><br><span class="line"><span class="comment"># 1  2</span></span><br><span class="line"><span class="comment"># 2  3</span></span><br><span class="line"><span class="comment"># 3  4</span></span><br><span class="line"><span class="comment"># 4  5</span></span><br></pre></td></tr></table></figure><h1 id="concat-the-same-length"><a href="#concat-the-same-length" class="headerlink" title="concat the same length"></a>concat the same length</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pandas.concat([a,b], axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#    a  b</span></span><br><span class="line"><span class="comment"># 0  1  2</span></span><br><span class="line"><span class="comment"># 1  2  4</span></span><br><span class="line"><span class="comment"># 2  3  6</span></span><br></pre></td></tr></table></figure><h1 id="concat-different-length"><a href="#concat-different-length" class="headerlink" title="concat different length"></a>concat different length</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">pandas.concat([a,c], axis=<span class="number">1</span>)</span><br><span class="line"><span class="comment">#      a  c</span></span><br><span class="line"><span class="comment"># 0  1.0  1</span></span><br><span class="line"><span class="comment"># 1  2.0  2</span></span><br><span class="line"><span class="comment"># 2  3.0  3</span></span><br><span class="line"><span class="comment"># 3  NaN  4</span></span><br><span class="line"><span class="comment"># 4  NaN  5</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Microsoft Sql server installation with 1638 error</title>
      <link href="/post/mssql_install_error_1638.html"/>
      <url>/post/mssql_install_error_1638.html</url>
      <content type="html"><![CDATA[<p>description: unable to install Sql Server with exit code 1638 </p><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><ul><li>exit code 1638 means a newer version of Microsoft Visual C++ has been installed </li><li>uninstall 2015, 2017 and others higher than 2015</li><li>restart the process </li></ul><h1 id="problem-description"><a href="#problem-description" class="headerlink" title="problem description"></a>problem description</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TITLE: Microsoft SQL Server 2017 Setup</span><br><span class="line">------------------------------</span><br><span class="line"></span><br><span class="line">The following error has occurred:</span><br><span class="line"></span><br><span class="line">VS Shell installation has failed with exit code 1638.</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mssql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>LSTM simplest example in python</title>
      <link href="/post/lstm_simplest_example.html"/>
      <url>/post/lstm_simplest_example.html</url>
      <content type="html"><![CDATA[<p>description: simplest example for LSTM ANN in python</p><h1 id="import-packages"><a href="#import-packages" class="headerlink" title="import packages"></a>import packages</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Sequential</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Dense</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> LSTM</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br></pre></td></tr></table></figure><h1 id="initial-dataset"><a href="#initial-dataset" class="headerlink" title="initial dataset"></a>initial dataset</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">test_set = [<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.4</span>, <span class="number">0.5</span>, <span class="number">0.6</span>, <span class="number">0.7</span>, <span class="number">0.8</span>]</span><br><span class="line">dataset = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">    dataset.append(i%<span class="number">10</span>/<span class="number">10</span>)</span><br></pre></td></tr></table></figure><h1 id="transform-data-into-current-data-next-data"><a href="#transform-data-into-current-data-next-data" class="headerlink" title="transform data into [current_data, next_data]"></a>transform data into [current_data, next_data]</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dataX, dataY = [], []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(dataset) - <span class="number">2</span>):</span><br><span class="line">    dataX.append(dataset[i])</span><br><span class="line">    dataY.append(dataset[i + <span class="number">1</span>])</span><br><span class="line">dataX = numpy.array(dataX)</span><br><span class="line">dataY = numpy.array(dataY)</span><br></pre></td></tr></table></figure><h1 id="reshape-data"><a href="#reshape-data" class="headerlink" title="reshape data"></a>reshape data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dataX = numpy.reshape(dataX, (dataX.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">1</span>))</span><br></pre></td></tr></table></figure><h1 id="create-and-fit-the-LSTM-network"><a href="#create-and-fit-the-LSTM-network" class="headerlink" title="create and fit the LSTM network"></a>create and fit the LSTM network</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">model = Sequential()</span><br><span class="line">model.add(LSTM(<span class="number">4</span>, input_shape=(<span class="number">1</span>, <span class="number">1</span>)))</span><br><span class="line">model.add(Dense(<span class="number">1</span>))</span><br><span class="line">model.compile(loss=<span class="string">'mean_squared_error'</span>, optimizer=<span class="string">'adam'</span>)</span><br><span class="line">model.fit(dataX, dataY, epochs=<span class="number">10</span>, batch_size=<span class="number">1</span>, verbose=<span class="number">2</span>)</span><br></pre></td></tr></table></figure><h1 id="make-predictions"><a href="#make-predictions" class="headerlink" title="make predictions"></a>make predictions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">test = numpy.array(test_set)</span><br><span class="line">test = numpy.reshape(test, (test.shape[<span class="number">0</span>], <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">trainPredict = model.predict(test)</span><br></pre></td></tr></table></figure><h1 id="plot-baseline-and-predictions"><a href="#plot-baseline-and-predictions" class="headerlink" title="plot baseline and predictions"></a>plot baseline and predictions</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">plt.plot(test_set)</span><br><span class="line">plt.plot(trainPredict)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> machine learning </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> AI </tag>
            
            <tag> machine learning </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>java change array into a list</title>
      <link href="/post/java_array_to_list.html"/>
      <url>/post/java_array_to_list.html</url>
      <content type="html"><![CDATA[<p>description: convert array into a list in java </p><h1 id="convert-array-into-list"><a href="#convert-array-into-list" class="headerlink" title="convert array into list"></a>convert array into list</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Object&gt; list = <span class="keyword">new</span> ArrayList(Arrays.asList(yourArray));</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>optimze hexo blog title for seo</title>
      <link href="/post/hexo_title_seo_optimization.html"/>
      <url>/post/hexo_title_seo_optimization.html</url>
      <content type="html"><![CDATA[<h1 id="change-index-swig-file"><a href="#change-index-swig-file" class="headerlink" title="change index.swig file"></a>change index.swig file</h1><p>under <code>your-hexo-site\themes\next\layout</code></p><h1 id="chang-the-title-codes"><a href="#chang-the-title-codes" class="headerlink" title="chang the title codes"></a>chang the title codes</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; config.title &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><p>change into<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p><p>moreover, it can add keywords into title<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% block title %&#125;&#123;&#123; theme.keywords &#125;&#125; - &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125;&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> seo </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>add rss feed into hexo blog - install feed plugin in hexo blog</title>
      <link href="/post/hexo_rss_feed.html"/>
      <url>/post/hexo_rss_feed.html</url>
      <content type="html"><![CDATA[<h1 id="install-hexo-generator-feed"><a href="#install-hexo-generator-feed" class="headerlink" title="install hexo-generator-feed"></a>install hexo-generator-feed</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-generator-feed --save</span></span><br></pre></td></tr></table></figure><h1 id="add-following-contents-into-config-yml"><a href="#add-following-contents-into-config-yml" class="headerlink" title="add following contents into _config.yml"></a>add following contents into <code>_config.yml</code></h1><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">atom</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">atom.xml</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">  hub:</span></span><br><span class="line"><span class="attr">  content:</span></span><br><span class="line"><span class="attr">  content_limit:</span> <span class="number">140</span></span><br><span class="line"><span class="attr">  content_limit_delim:</span> <span class="string">' '</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> feed </tag>
            
            <tag> rss </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>add google adsense into hexo blog in next theme</title>
      <link href="/post/hexo_next_google_adsense.html"/>
      <url>/post/hexo_next_google_adsense.html</url>
      <content type="html"><![CDATA[<h1 id="build-a-new-adsense-template-under-next-theme-in-layout-custom"><a href="#build-a-new-adsense-template-under-next-theme-in-layout-custom" class="headerlink" title="build a new adsense template under next theme in layout/_custom"></a>build a new adsense template under <code>next</code> theme in <code>layout/_custom</code></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">themes/next/layout/_custom/google_adsense.ejs</span><br></pre></td></tr></table></figure><h1 id="put-the-google-adsense-codes-into-google-adsense-ejs"><a href="#put-the-google-adsense-codes-into-google-adsense-ejs" class="headerlink" title="put the google adsense codes into google_adsense.ejs"></a>put the google adsense codes into <code>google_adsense.ejs</code></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  (adsbygoogle = <span class="built_in">window</span>.adsbygoogle || []).push(&#123;</span></span><br><span class="line"><span class="javascript">    google_ad_client: <span class="string">"ca-pub-5817381835091099"</span>,</span></span><br><span class="line"><span class="javascript">    enable_page_level_ads: <span class="literal">true</span></span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="add-following-codes-in-layout-swig-under-theme-folder"><a href="#add-following-codes-in-layout-swig-under-theme-folder" class="headerlink" title="add following codes in _layout.swig under theme folder"></a>add following codes in <code>_layout.swig</code> under theme folder</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Google AdSense start --&gt;</span></span><br><span class="line">&#123;% include '_custom/google_adsense.ejs' %&#125;</span><br><span class="line"><span class="comment">&lt;!-- Google AdSense end --&gt;</span></span><br></pre></td></tr></table></figure><h1 id="generate-web-page-and-check-source-file-to-see-the-google-code-in-there"><a href="#generate-web-page-and-check-source-file-to-see-the-google-code-in-there" class="headerlink" title="generate web page and check source file to see the google code in there"></a>generate web page and check source file to see the google code in there</h1><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> adsense </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo deploy to github with ssh</title>
      <link href="/post/hexo_deploy_ssh.html"/>
      <url>/post/hexo_deploy_ssh.html</url>
      <content type="html"><![CDATA[<p>description: hexo deploy github pages through ssh</p><h1 id="configuration-for-deploying-to-github-with-ssh"><a href="#configuration-for-deploying-to-github-with-ssh" class="headerlink" title="configuration for deploying to github with ssh"></a>configuration for deploying to github with ssh</h1><p>change the configuration in <code>_config.yml</code> under the hexo root folder<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repository:</span> <span class="string">git@github.com:kelfan/kelfan.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>add sitemap into hexo blog</title>
      <link href="/post/hexo_add_sitemap.html"/>
      <url>/post/hexo_add_sitemap.html</url>
      <content type="html"><![CDATA[<h1 id="install-plugin-for-SEO-sitemap"><a href="#install-plugin-for-SEO-sitemap" class="headerlink" title="install plugin for SEO sitemap"></a>install plugin for SEO sitemap</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><p>optional for baidu search engine<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></p><h1 id="change-configuration-file-in-config-yml"><a href="#change-configuration-file-in-config-yml" class="headerlink" title="change configuration file in _config.yml"></a>change configuration file in <code>_config.yml</code></h1><p>add following codes into <code>_config.yml</code> file and change the value of url, should be like <code>http://yoursite.com</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sitemap:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">sitemap.xml</span></span><br><span class="line"></span><br><span class="line"><span class="attr">url:</span> <span class="attr">https://search4fan.github.io</span></span><br></pre></td></tr></table></figure></p><p>optional for baidu search engine sitemap<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidusitemap:</span></span><br><span class="line"><span class="attr">    path:</span> <span class="string">baidusitemap.xml</span></span><br></pre></td></tr></table></figure></p><h1 id="check-with-public-folder"><a href="#check-with-public-folder" class="headerlink" title="check with public folder"></a>check with public folder</h1><p>after <code>hexo g</code>, the <code>sitemap.xml</code> or <code>baidusitemap.xml</code> should be found under <code>public</code> folder</p><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> sitemap </tag>
            
            <tag> seo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo add local search</title>
      <link href="/post/hexo_add_local_search.html"/>
      <url>/post/hexo_add_local_search.html</url>
      <content type="html"><![CDATA[<p>description: add a local search for hexo blog </p><h1 id="install-hexo-generator-search"><a href="#install-hexo-generator-search" class="headerlink" title="install hexo-generator-search"></a>install hexo-generator-search</h1><p>run following commend under <code>search4fan.github.io/</code> folder<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></p><h1 id="change-configuration"><a href="#change-configuration" class="headerlink" title="change configuration"></a>change configuration</h1><p>add following text in <code>search4fan.github.io/_config.yml</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span> </span><br><span class="line"><span class="attr">      path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">      field:</span> <span class="string">post</span></span><br></pre></td></tr></table></figure></p><h1 id="change-theme-configuration"><a href="#change-theme-configuration" class="headerlink" title="change theme configuration"></a>change theme configuration</h1><p>change <code>_config.yml</code> under theme folder <code>search4fan.github.io/themes/next/_config.yml</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/theme-next/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># unescape html strings to the readable one</span></span><br><span class="line"><span class="attr">  unescape:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/post/hello-world.html"/>
      <url>/post/hello-world.html</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Google Home links to Local Host through localtunnel</title>
      <link href="/post/google_home.html"/>
      <url>/post/google_home.html</url>
      <content type="html"><![CDATA[<h1 id="nodejs-localhost"><a href="#nodejs-localhost" class="headerlink" title="nodejs localhost"></a>nodejs localhost</h1><p>Google home request -&gt; index.js<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>),</span><br><span class="line">app = express(),</span><br><span class="line">bodyparser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>),</span><br><span class="line">assistant = <span class="built_in">require</span>(<span class="string">'./assistant.js'</span>),</span><br><span class="line">util = <span class="built_in">require</span>(<span class="string">'util'</span>);</span><br><span class="line">app.use(bodyparser.json())</span><br><span class="line"></span><br><span class="line"><span class="comment">// GET method route</span></span><br><span class="line">app.all(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'index.js/'</span>);</span><br><span class="line">  assistant.assistantHandler(req,res)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.all(<span class="string">'/test'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>) </span>&#123;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'index.js/test'</span>);</span><br><span class="line">res.send(<span class="string">'helloworld'</span>)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>)</span><br></pre></td></tr></table></figure></p><p>index.js -&gt; Google actions sdk<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ActionsSdkApp = <span class="built_in">require</span>(<span class="string">'actions-on-google'</span>).ActionsSdkApp;</span><br><span class="line"></span><br><span class="line">exports.assistantHandler = <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'assistantHandler'</span>);</span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> ActionsSdkApp(&#123;</span><br><span class="line">        request: req,</span><br><span class="line">        response: res</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">var</span> str = <span class="string">'Sorry. I don\'t understand what you say'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Create functions to handle requests here</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">mainIntent</span>(<span class="params">app</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'assistant.js/mainIntent'</span>);</span><br><span class="line">        voiceResponse(<span class="string">'welcome'</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">respond</span>(<span class="params">app</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'assistant.js/respond'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (app.getRawInput() == <span class="string">'hello'</span>) &#123;</span><br><span class="line">str = <span class="string">'hello'</span></span><br><span class="line">&#125;</span><br><span class="line">        voiceResponse(str)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">voiceResponse</span>(<span class="params">strIn</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> inputPrompt = app.buildInputPrompt(<span class="literal">false</span>,strIn);</span><br><span class="line">        app.ask(inputPrompt);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> actionMap = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    actionMap.set(app.StandardIntents.MAIN, mainIntent);</span><br><span class="line">    actionMap.set(app.StandardIntents.TEXT, respond);</span><br><span class="line"></span><br><span class="line">    app.handleRequest(actionMap);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="localtunnel"><a href="#localtunnel" class="headerlink" title="localtunnel"></a>localtunnel</h1><p>acquire the URL to access localhost : <a href="https://localtunnel.github.io/www/" target="_blank" rel="noopener">https://localtunnel.github.io/www/</a><br>    -&gt; installation: <code>npm install -g localtunnel</code><br>    -&gt; running: <code>lt --port 8000</code><br>    -&gt; copy the url</p><h1 id="Google-Actions-SDK"><a href="#Google-Actions-SDK" class="headerlink" title="Google Actions SDK"></a>Google Actions SDK</h1><ol><li><p>Apply for account: <a href="https://developers.google.com/actions/sdk/" target="_blank" rel="noopener">https://developers.google.com/actions/sdk/</a><br> -&gt; Add project<br> -&gt; fill the form<br> -&gt; get the update code as follow </p><pre><code>`gactions update --action_package PACKAGE_NAME --project PROJECT_NAME`</code></pre></li><li><p>gactions Cli : <a href="https://developers.google.com/actions/tools/gactions-cli" target="_blank" rel="noopener">https://developers.google.com/actions/tools/gactions-cli</a><br> -&gt; download<br> -&gt; Run <code>chmod +x gactions</code> to make the binary executable<br> -&gt; get the actions json sample <code>gactions init</code><br> -&gt; change the actions:add the url in the json file<br> -&gt; update </p><pre><code>`gactions update --action_package PACKAGE_NAME --project PROJECT_ID`</code></pre></li><li><p>test google actions:<a href="https://developers.google.com/actions/tools/simulator" target="_blank" rel="noopener">https://developers.google.com/actions/tools/simulator</a></p></li></ol><hr><p>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      <categories>
          
          <category> nodejs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
            <tag> google home </tag>
            
            <tag> nodejs </tag>
            
            <tag> local tunnel </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Git Switch between ssh and HTTPS</title>
      <link href="/post/git_switch_https_ssh.html"/>
      <url>/post/git_switch_https_ssh.html</url>
      <content type="html"><![CDATA[<p>description: git change remote from https to ssh</p><h1 id="change-from-HTTPS-into-ssh"><a href="#change-from-HTTPS-into-ssh" class="headerlink" title="change from HTTPS into ssh"></a>change from HTTPS into ssh</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url origin git@github.com:kelfan/kelfan.github.io.git</span><br><span class="line">git remote -v</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>TortoiseGit set ssh for github</title>
      <link href="/post/git_set_ssh_for_tortoisegit.html"/>
      <url>/post/git_set_ssh_for_tortoisegit.html</url>
      <content type="html"><![CDATA[<p>description: tortoisegit ssh key windows</p><h1 id="tortoisegit-ssh-key-setup"><a href="#tortoisegit-ssh-key-setup" class="headerlink" title="tortoisegit ssh key setup"></a>tortoisegit ssh key setup</h1><ol><li>open <code>Puttygen</code><ol><li>click “Generate”</li><li>need move mouse to Generate key </li><li>save public key and private key</li></ol></li><li>go to repository and right click -&gt; tortoiseGit -&gt; settings<ol><li>remote -&gt; origin -&gt; puttyKey -&gt; add the .ppk file</li></ol></li></ol><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker</title>
      <link href="/post/docker_unauthorized_username_password.html"/>
      <url>/post/docker_unauthorized_username_password.html</url>
      <content type="html"><![CDATA[<p>description: solve problem of unauthorized username or password in terminal</p><h1 id="problem-of-unauthorized-incorrect-username-or-password"><a href="#problem-of-unauthorized-incorrect-username-or-password" class="headerlink" title="problem of unauthorized incorrect username or password"></a>problem of unauthorized incorrect username or password</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;docker pull alpine</span><br><span class="line"><span class="comment"># Using default tag: latest</span></span><br><span class="line"><span class="comment"># Error response from daemon: Get https://registry-1.docker.io/v2/library/alpine/manifests/latest: unauthorized: incorrect username or password</span></span><br></pre></td></tr></table></figure><h1 id="solve-solution"><a href="#solve-solution" class="headerlink" title="solve solution"></a>solve solution</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;docker login</span><br><span class="line"><span class="comment"># Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.</span></span><br><span class="line"><span class="comment"># Username (findhill@gmail.com): vifonk</span></span><br><span class="line"><span class="comment"># Password:</span></span><br><span class="line"><span class="comment"># Login Succeeded</span></span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>connect sql server from Microsoft Sql Server Management Studio</title>
      <link href="/post/docker_sql_server_connect_from_ssms.html"/>
      <url>/post/docker_sql_server_connect_from_ssms.html</url>
      <content type="html"><![CDATA[<p>description: codes for connecting sql server from Microsoft sql server management studio </p><h1 id="start-sql-server"><a href="#start-sql-server" class="headerlink" title="start sql server"></a>start sql server</h1><p><code>Asdfgh123</code> is default password<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Asdfgh123"</span> `</span><br><span class="line">   -p 1433:1433 --name sql1 `</span><br><span class="line">   -d microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure></p><h1 id="connect-from-external-tools"><a href="#connect-from-external-tools" class="headerlink" title="connect from external tools"></a>connect from external tools</h1><p>under Windows, open Powershell to test service can be accessed from Windows<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlcmd -S 10.3.2.4,1433 -U SA -P <span class="string">"Asdfgh123"</span></span><br></pre></td></tr></table></figure></p><h1 id="connect-from-sql-server-management-studio"><a href="#connect-from-sql-server-management-studio" class="headerlink" title="connect from sql server management studio"></a>connect from sql server management studio</h1><p>server name is the ip address for docker computer. can use commend <code>ipconfig</code> to get the IPv4 Address<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server type: database engine </span><br><span class="line">server name: 192.168.11.11 </span><br><span class="line">authentication: sql server authentication </span><br><span class="line">    login: SA</span><br><span class="line">    password: Asdfgh123</span><br></pre></td></tr></table></figure></p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql server </tag>
            
            <tag> ssms </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>run sql server through docker in Windows</title>
      <link href="/post/docker_run_sql_server.html"/>
      <url>/post/docker_run_sql_server.html</url>
      <content type="html"><![CDATA[<p>description: run sql server through docker </p><h1 id="start"><a href="#start" class="headerlink" title="start"></a>start</h1><ul><li>open and start docker service</li><li>open Powershell</li></ul><h1 id="download-sql-server-image"><a href="#download-sql-server-image" class="headerlink" title="download sql server image"></a>download sql server image</h1><p>put following commend in powerhell<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure></p><h1 id="start-sql-server"><a href="#start-sql-server" class="headerlink" title="start sql server"></a>start sql server</h1><p><code>Asdfgh123</code> is default password<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Asdfgh123"</span> `</span><br><span class="line">   -p 1433:1433 --name sql1 `</span><br><span class="line">   -d microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure></p><p>if get following error:<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: Conflict. The container name <span class="string">"/sql1"</span> is already <span class="keyword">in</span> use by container <span class="string">"1da5029c71ab937a25acdb4fadf44f4065c2fea4f6a4f157c1a07516558757bb"</span>. You have to remove (or rename) that container to be able to reuse that name.</span><br><span class="line">See <span class="string">'C:\Program Files\Docker\Docker\Resources\bin\docker.exe run --help'</span>.</span><br></pre></td></tr></table></figure></p><p>restart the server<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start sql1</span><br></pre></td></tr></table></figure></p><h1 id="connect-to-server"><a href="#connect-to-server" class="headerlink" title="connect to server"></a>connect to server</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it sql1 <span class="string">"bash"</span></span><br></pre></td></tr></table></figure><h1 id="start-sqlcmd-tool"><a href="#start-sqlcmd-tool" class="headerlink" title="start sqlcmd tool"></a>start sqlcmd tool</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P <span class="string">'Asdfgh123'</span></span><br></pre></td></tr></table></figure><h1 id="test-create-database"><a href="#test-create-database" class="headerlink" title="test create database"></a>test create database</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> TestDB</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Name</span> <span class="keyword">from</span> sys.Databases</span><br><span class="line"><span class="keyword">GO</span></span><br></pre></td></tr></table></figure><h1 id="test-acquire-database"><a href="#test-acquire-database" class="headerlink" title="test acquire database"></a>test acquire database</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> TestDB</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">new</span> <span class="keyword">table</span> named Inventory:</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> Inventory (<span class="keyword">id</span> <span class="built_in">INT</span>, <span class="keyword">name</span> <span class="keyword">NVARCHAR</span>(<span class="number">50</span>), quantity <span class="built_in">INT</span>)</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> Inventory <span class="keyword">VALUES</span> (<span class="number">1</span>, <span class="string">'banana'</span>, <span class="number">150</span>); <span class="keyword">INSERT</span> <span class="keyword">INTO</span> Inventory <span class="keyword">VALUES</span> (<span class="number">2</span>, <span class="string">'orange'</span>, <span class="number">154</span>);</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Inventory <span class="keyword">WHERE</span> quantity &gt; <span class="number">152</span>;</span><br><span class="line">GO</span><br></pre></td></tr></table></figure><h1 id="connect-from-external-tools"><a href="#connect-from-external-tools" class="headerlink" title="connect from external tools"></a>connect from external tools</h1><p>outside the container<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlcmd -S 10.3.2.4,1433 -U SA -P <span class="string">"Asdfgh123"</span></span><br></pre></td></tr></table></figure></p><h1 id="Stop-and-remove-container"><a href="#Stop-and-remove-container" class="headerlink" title="Stop and remove container"></a>Stop and remove container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop sql1</span><br><span class="line">docker rm sql1</span><br></pre></td></tr></table></figure><h1 id="run-sql-server-with-external-folder"><a href="#run-sql-server-with-external-folder" class="headerlink" title="run sql server with external folder"></a>run sql server with external folder</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -e <span class="string">"ACCEPT_EULA=Y"</span> -e <span class="string">"SA_PASSWORD=Asdfgh123"</span> `</span><br><span class="line">   -v <span class="variable">$PWD</span>/:/data `</span><br><span class="line">   -p 1433:1433 --name sql2 `</span><br><span class="line">   -d microsoft/mssql-server-linux:2017-latest</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> sql server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> sql server </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker change port of an exist image container</title>
      <link href="/post/docker_resign_port_to_exist_image.html"/>
      <url>/post/docker_resign_port_to_exist_image.html</url>
      <content type="html"><![CDATA[<p>description: Docker Change Port Mapping for an Existing Container</p><h1 id="Stop-the-running-image"><a href="#Stop-the-running-image" class="headerlink" title="Stop the running image"></a>Stop the running image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker Stop image1</span><br></pre></td></tr></table></figure><h1 id="save-the-previous-image"><a href="#save-the-previous-image" class="headerlink" title="save the previous image"></a>save the previous image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit image1 image2</span><br></pre></td></tr></table></figure><p>image2 is the name of new image</p><h1 id="start-the-new-image-with-a-new-mapped-port"><a href="#start-the-new-image-with-a-new-mapped-port" class="headerlink" title="start the new image with a new mapped port"></a>start the new image with a new mapped port</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 8080:8080 -td image2</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Error response from daemon driver failed programming external connectivity on endpoint sql1</title>
      <link href="/post/docker_error_response_from_daemon.html"/>
      <url>/post/docker_error_response_from_daemon.html</url>
      <content type="html"><![CDATA[<p>description:</p><h1 id="error-description-1"><a href="#error-description-1" class="headerlink" title="error description 1"></a>error description 1</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; docker start sql1</span><br><span class="line">Error response from daemon: driver failed programming external connectivity on endpoint sql1 (5738a464113f88069be0239c3fd73eaa58fc4d5a7fc63d83d912e3d9424f6b55): Error starting userland proxy: mkdir /port/tcp:0.0.0.0:1433:tcp:172.17.0.2:1433: input/output error</span><br><span class="line">Error: failed to start containers: sql1</span><br></pre></td></tr></table></figure><h1 id="error-description-2"><a href="#error-description-2" class="headerlink" title="error description 2"></a>error description 2</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\Administrator&gt; docker run -p 1443:1443 -d sql2</span><br><span class="line">90d3d1f460f1dfd11a684a37a9278db78f345c1a85cc55d68e1f3c313721c2e0</span><br><span class="line">C:\Program Files\Docker\Docker\Resources\bin\docker.exe: Error response from daemon: driver failed programming external connectivity on endpoint sad_ritchie (b5a71d797addfd55b7683151e8a6b9fbacbd35792dbe1f020170190b500778b6): Error starting userland proxy: mkdir /port/tcp:0.0.0.0:1443:tcp:172.17.0.2:1443: input/output error.</span><br></pre></td></tr></table></figure><h1 id="solution"><a href="#solution" class="headerlink" title="solution"></a>solution</h1><p>restart system and docker then restart service </p><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> error </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker frequent used commends</title>
      <link href="/post/docker_commends.html"/>
      <url>/post/docker_commends.html</url>
      <content type="html"><![CDATA[<p>description: docker commends - not finished yet</p><h1 id="check-all-running-proceses-containers"><a href="#check-all-running-proceses-containers" class="headerlink" title="check all running proceses/containers"></a>check all running proceses/containers</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h1 id="delete-a-container"><a href="#delete-a-container" class="headerlink" title="delete a container"></a>delete a container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm container_name</span><br></pre></td></tr></table></figure><h1 id="see-all-images"><a href="#see-all-images" class="headerlink" title="see all images"></a>see all images</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h1 id="remove-an-image"><a href="#remove-an-image" class="headerlink" title="remove an image"></a>remove an image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi image_name</span><br></pre></td></tr></table></figure><h1 id="Stop-all-running-containers"><a href="#Stop-all-running-containers" class="headerlink" title="Stop all running containers"></a>Stop all running containers</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -a -q)</span><br></pre></td></tr></table></figure><h1 id="commit-container-as-a-new-image"><a href="#commit-container-as-a-new-image" class="headerlink" title="commit container as a new image"></a>commit container as a new image</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker commit new_image_name</span><br><span class="line">docker commit old_image new_image</span><br></pre></td></tr></table></figure><h1 id="mount-host-directory-in-docker-container"><a href="#mount-host-directory-in-docker-container" class="headerlink" title="mount host directory in docker container"></a>mount host directory in docker container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mount code folder under current folder into the html folder within the Nginx image</span></span><br><span class="line">docker run -v <span class="variable">$PWD</span>/code:/var/www/html Nginx</span><br></pre></td></tr></table></figure><hr><p>more on <a href="https://search4fan.github.io/">search4fan.github.io</a></p>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>docker.exe error response from daemon driver failed programming external connectivity on endpoint</title>
      <link href="/post/docker-error-response-from-daemon-external-connectivity.html"/>
      <url>/post/docker-error-response-from-daemon-external-connectivity.html</url>
      <content type="html"><![CDATA[<p>description: fix docker error response from daemon: driver failed programming external connectivity on endpoint</p><h1 id="check-the-port-will-be-used-in-the-container"><a href="#check-the-port-will-be-used-in-the-container" class="headerlink" title="check the port will be used in the container"></a>check the port will be used in the container</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker ps </span><br><span class="line"><span class="comment"># or </span></span><br><span class="line">docker port &lt;container_name&gt;</span><br></pre></td></tr></table></figure><h1 id="check-the-same-port-used-by-other-containers"><a href="#check-the-same-port-used-by-other-containers" class="headerlink" title="check the same port used by other containers"></a>check the same port used by other containers</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h1 id="option1-stop-the-containers-used-the-port"><a href="#option1-stop-the-containers-used-the-port" class="headerlink" title="option1 stop the containers used the port"></a>option1 stop the containers used the port</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker stop &lt;container_id&gt;</span><br></pre></td></tr></table></figure><h1 id="if-not-fixed-the-port-could-be-occupied-by-other-services"><a href="#if-not-fixed-the-port-could-be-occupied-by-other-services" class="headerlink" title="if not fixed, the port could be occupied by other services"></a>if not fixed, the port could be occupied by other services</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -tulpn | grep :&lt;port_no&gt;</span><br></pre></td></tr></table></figure><h1 id="option2-stop-the-services"><a href="#option2-stop-the-services" class="headerlink" title="option2 stop the services"></a>option2 stop the services</h1><h1 id="option3-start-the-container-with-another-port"><a href="#option3-start-the-container-with-another-port" class="headerlink" title="option3 start the container with another port"></a>option3 start the container with another port</h1>]]></content>
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java Open New Thread to Run Static Method</title>
      <link href="/post/java_new_thread_run_static.html"/>
      <url>/post/java_new_thread_run_static.html</url>
      <content type="html"><![CDATA[<p>description: new thread to run static method in java </p><h1 id="Code-for-run-static-method-in-new-thread-in-java"><a href="#Code-for-run-static-method-in-new-thread-in-java" class="headerlink" title="Code for run static method in new thread in java"></a>Code for run static method in new thread in java</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        staticMethod();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>refresh environment variables without reboot windows 10</title>
      <link href="/post/win10_new_system_variable_without_restart.html"/>
      <url>/post/win10_new_system_variable_without_restart.html</url>
      <content type="html"><![CDATA[<p>description: Add a windows environment varibale without rebooting the computer </p><h1 id="process-to-refresh-environment-variables-without-reboot-windows"><a href="#process-to-refresh-environment-variables-without-reboot-windows" class="headerlink" title="process to refresh environment variables  without reboot windows"></a>process to refresh environment variables  without reboot windows</h1><ul><li>open cmd commend prompt window </li><li>input <code>set PATH=C</code> -&gt; this will refresh the environment variables </li><li>close and restart cmd window</li><li>input <code>echo %PATH%</code> to test </li></ul>]]></content>
      
      <categories>
          
          <category> win10 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> win10 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Simplest web server run by python</title>
      <link href="/post/python_simplest_web_server_for_testing.html"/>
      <url>/post/python_simplest_web_server_for_testing.html</url>
      <content type="html"><![CDATA[<p>description: use python to create a simplest server for testing website </p><h1 id="code-for-python-to-create-a-web-server"><a href="#code-for-python-to-create-a-web-server" class="headerlink" title="code for python to create a web server"></a>code for python to create a web server</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Initialising an array of fixed size in python</title>
      <link href="/post/python_create_empty_array_with_fix_length.html"/>
      <url>/post/python_create_empty_array_with_fix_length.html</url>
      <content type="html"><![CDATA[<p>description: python create array with length</p><h1 id="code-for-creating-array-with-fix-length"><a href="#code-for-creating-array-with-fix-length" class="headerlink" title="code for creating array with fix length"></a>code for creating array with fix length</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList = [<span class="keyword">None</span>] * <span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>aList</span><br><span class="line">[<span class="keyword">None</span>, <span class="keyword">None</span>, <span class="keyword">None</span>, <span class="keyword">None</span>, <span class="keyword">None</span>, <span class="keyword">None</span>]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>mount share folder to Linux in virtualbox</title>
      <link href="/post/vm_mount_linux_share.html"/>
      <url>/post/vm_mount_linux_share.html</url>
      <content type="html"><![CDATA[<p>description: mount share folder to Linux in virtualbox</p><h1 id="code-to-mount-share-folder-to-Ubuntu-in-virtualbox"><a href="#code-to-mount-share-folder-to-Ubuntu-in-virtualbox" class="headerlink" title="code to mount share folder to Ubuntu in virtualbox"></a>code to mount share folder to Ubuntu in virtualbox</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t vboxsf &lt;sharefoldername&gt; &lt;linuxpath&gt;</span><br><span class="line"><span class="comment"># e.g.</span></span><br><span class="line">sudo mount -t vboxsf data ~/share/</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vm </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python list subtract another list</title>
      <link href="/post/python_list_minus_list.html"/>
      <url>/post/python_list_minus_list.html</url>
      <content type="html"><![CDATA[<p>description: the elements in a list subtract the same index elements in another list </p><h1 id="code-for-list-substraction-in-python"><a href="#code-for-list-substraction-in-python" class="headerlink" title="code for list substraction in python"></a>code for list substraction in python</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">l2 = [<span class="number">4</span>,<span class="number">8</span>,<span class="number">3</span>]</span><br><span class="line">dif = list(map(<span class="keyword">lambda</span> x: x[<span class="number">0</span>]-x[<span class="number">1</span>], zip(l1,l2)))</span><br><span class="line"><span class="comment"># output: </span></span><br><span class="line"><span class="comment"># [-3, -6, 0]</span></span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>code for wrap java debugger</title>
      <link href="/post/java_wrap_debugger.html"/>
      <url>/post/java_wrap_debugger.html</url>
      <content type="html"><![CDATA[<p>description:</p><h1 id="code-for-wrap-java-debugger"><a href="#code-for-wrap-java-debugger" class="headerlink" title="code for wrap java debugger"></a>code for wrap java debugger</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">e</span><span class="params">(String tag, String msg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (LOG_LEVEL &gt; ERROR)</span><br><span class="line">        Log.e(tag, msg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">w</span><span class="params">(String tsg, String msg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (LOG_LEVEL &gt; ERROR)</span><br><span class="line">        Log.w(tag, msg)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">i</span><span class="params">(String tsg, String msg)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (LOG_LEVEL &gt; ERROR)</span><br><span class="line">        Log.i(tag, msg)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python plot sine curve or wave</title>
      <link href="/post/python_draw_sin_curve.html"/>
      <url>/post/python_draw_sin_curve.html</url>
      <content type="html"><![CDATA[<p>description: python code to plot sine wave</p><h1 id="draw-or-plot-sine-curve-code"><a href="#draw-or-plot-sine-curve-code" class="headerlink" title="draw or plot sine curve code"></a>draw or plot sine curve code</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x=np.arange(<span class="number">0</span>,<span class="number">2</span>*np.pi,<span class="number">0.01</span>)</span><br><span class="line">y=np.sin(x)</span><br><span class="line"></span><br><span class="line">plt.plot(x,y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python remove or delete last column of a dataframe</title>
      <link href="/post/python_remove_last_column.html"/>
      <url>/post/python_remove_last_column.html</url>
      <content type="html"><![CDATA[<p>description: python remove last column</p><h1 id="init-data"><a href="#init-data" class="headerlink" title="init data"></a>init data</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas </span><br><span class="line">data = pandas.DataFrame(&#123;</span><br><span class="line">    <span class="string">'a'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], </span><br><span class="line">    <span class="string">'b'</span>: [<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>], </span><br><span class="line">    <span class="string">'c'</span>: [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'a'</span>], </span><br><span class="line">    <span class="string">'d'</span>: [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="comment"># data</span></span><br><span class="line"><span class="comment">#    a    b  c  d</span></span><br><span class="line"><span class="comment"># 0  1  0.1  a  1</span></span><br><span class="line"><span class="comment"># 1  2  0.2  b  2</span></span><br><span class="line"><span class="comment"># 2  3  0.3  a  3</span></span><br></pre></td></tr></table></figure><h1 id="drop-last-column"><a href="#drop-last-column" class="headerlink" title="drop last column"></a>drop last column</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">data[data.columns[:<span class="number">-1</span>]]</span><br></pre></td></tr></table></figure><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   a    b  c</span><br><span class="line"><span class="number">0</span>  <span class="number">1</span>  <span class="number">0.1</span>  a</span><br><span class="line"><span class="number">1</span>  <span class="number">2</span>  <span class="number">0.2</span>  b</span><br><span class="line"><span class="number">2</span>  <span class="number">3</span>  <span class="number">0.3</span>  a</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>markdown internal link or reference</title>
      <link href="/post/markdown_internal_link.html"/>
      <url>/post/markdown_internal_link.html</url>
      <content type="html"><![CDATA[<p>description: markdown internal page links</p><h1 id="add-anchor-in-the-place-to-jump"><a href="#add-anchor-in-the-place-to-jump" class="headerlink" title="add anchor in the place to jump"></a>add anchor in the place to jump</h1><figure class="highlight m"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span id<span class="built_in">=</span><span class="string">"search4fan"</span>&gt;About Search4fan&lt;/span&gt;</span><br></pre></td></tr></table></figure><h1 id="use-the-following-syntax-to-jump-to-the-anchor"><a href="#use-the-following-syntax-to-jump-to-the-anchor" class="headerlink" title="use the following syntax to jump to the anchor"></a>use the following syntax to jump to the anchor</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">About</span>](<span class="link">#search4fan</span>)</span><br></pre></td></tr></table></figure><h1 id="combine-together"><a href="#combine-together" class="headerlink" title="combine together"></a>combine together</h1><p><span id="jump">Jump to here</span><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I want to [<span class="string">jump</span>](<span class="link">#jump</span>)</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"jump"</span>&gt;</span></span>Jump to here<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><h1 id="output"><a href="#output" class="headerlink" title="output"></a>output</h1><p>I want to <a href="#jump">jump</a></p>]]></content>
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>get google suggested keywords in python</title>
      <link href="/post/python_get_search_keywords_from_google.html"/>
      <url>/post/python_get_search_keywords_from_google.html</url>
      <content type="html"><![CDATA[<p>description: use python to get the keyword suggestion from google</p><h1 id="codes-for-scraping-google’s-keywords"><a href="#codes-for-scraping-google’s-keywords" class="headerlink" title="codes for scraping google’s keywords"></a>codes for scraping google’s keywords</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests, json</span><br><span class="line">URL=<span class="string">"http://suggestqueries.google.com/complete/search?client=firefox&amp;q=google keywords"</span></span><br><span class="line">headers = &#123;<span class="string">'User-agent'</span>:<span class="string">'Mozilla/5.0'</span>&#125;</span><br><span class="line">response = requests.get(URL, headers=headers)</span><br><span class="line">result = json.loads(response.content.decode(<span class="string">'utf-8'</span>))</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h1 id="result-for-crawling-google-keywords"><a href="#result-for-crawling-google-keywords" class="headerlink" title="result for crawling google keywords"></a>result for crawling google keywords</h1><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">'google keywords'</span>, [<span class="string">'google keywords'</span>, <span class="string">'google keywords planner'</span>, <span class="string">'google keywords free'</span>, <span class="string">'google keywords analytics'</span>, <span class="string">'google keywords planner tools'</span>, <span class="string">'google keywords finder'</span>, <span class="string">'google keywords youtube'</span>, <span class="string">'google keywords api'</span>, <span class="string">'google keywords search volume'</span>, <span class="string">'google keywords everywhere'</span>]]</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> google </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>test</title>
      <link href="/post/test.html"/>
      <url>/post/test.html</url>
      <content type="html"><![CDATA[<p>test<br>more on <a href="http://searchfor.space" target="_blank" rel="noopener">http://searchfor.space</a></p>]]></content>
      
      
    </entry>
    
    <entry>
      <title>vba clear sheet content</title>
      <link href="/post/vba_clear_sheet_content.html"/>
      <url>/post/vba_clear_sheet_content.html</url>
      <content type="html"><![CDATA[<p>description: vba clear sheet content </p><h1 id="clear-sheet-content"><a href="#clear-sheet-content" class="headerlink" title="clear sheet content"></a>clear sheet content</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sheets(<span class="string">"sheetname"</span>).Cells.ClearContents</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> vba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vba </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
